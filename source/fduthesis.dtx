% \iffalse meta-comment
% !TeX program  = XeLaTeX
% !TeX encoding = UTF-8
%
% Copyright (C) 2017 by Xiangdong Zeng <pssysrq@163.com>
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either
% version 1.3c of this license or (at your option) any later
% version. The latest version of this license is in:
%
%   http://www.latex-project.org/lppl.txt
%
% and version 1.3 or later is part of all distributions of
% LaTeX version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Xiangdong Zeng.
%
% This work consists of the files fduthesis.dtx,
%                                 fduthesis-doc.dtx,
%                                 fduthesis-logo.dtx,
%           and the derived files fduthesis.ins,
%                                 fduthesis.cls,
%                                 fduthesis-en.cls,
%                                 fduthesis.def,
%                                 fduthesis-user.def,
%                                 fdudoc.cls,
%                                 fdulogo.sty,
%                                 fdulogo-example.tex,
%                                 fduthesis-cover.tex,
%                                 fudan-*.pdf,
%                                 fudan-*.png,
%                                 fduthesis-cover.pdf,
%                                 fduthesis.bbl,
%                                 fduthesis-en.ltx,
%                                 fduthesis.pdf,
%                                 fduthesis-en.pdf,
%                                 latexmkrc,
%                                 latexmkrc-en,
%                             and README.md.
%
%<*internal>
\iffalse
%</internal>
%
%<*readme>
# fduthesis

[![Build Status](https://travis-ci.org/Stone-Zeng/fduthesis.svg?branch=master)](https://travis-ci.org/Stone-Zeng/fduthesis)
[![GitHub release](https://img.shields.io/github/release/Stone-Zeng/fduthesis/all.svg)](https://github.com/Stone-Zeng/fduthesis/releases/latest)

## 欢迎使用 fduthesis - 复旦大学论文模板！

在您使用 `fduthesis` 之前，请务必仔细阅读模板文档
[fduthesis.pdf](https://github.com/Stone-Zeng/fduthesis/releases/download/v0.5/fduthesis.pdf)。
该文档也可通过如下命令生成：

    latexmk fduthesis.dtx

若需要生成模板各部件，请执行如下命令：

    xetex fduthesis.dtx

### 许可证

本模板的发布遵守 [LaTeX Project Public License](http://www.latex-project.org/lppl.txt)
(版本 1.3c 或更高)。

<br></br>

## Welcome to fduthesis - LaTeX thesis template for Fudan University!

Before you using `fduthesis`, please read the document
[fduthesis.pdf](https://github.com/Stone-Zeng/fduthesis/releases/download/v0.5/fduthesis.pdf)
carefully. This file can be generated with the following commands
as well:

    latexmk fduthesis.dtx

If you want to get all components of `fduthesis`, please execute the
following commands:

    xetex fduthesis.dtx

### License

This work may be distributed and/or modified under the conditions of
the [LaTeX Project Public License](http://www.latex-project.org/lppl.txt),
either version 1.3c of this license or (at your option) any later
version.
%</readme>
%
%<*internal>
\fi
\begingroup
  \def\NameOfLaTeXe{LaTeX2e}
\expandafter\endgroup\ifx\NameOfLaTeXe\fmtname\else
\csname fi\endcsname
%</internal>
%
%<*install>
\input l3docstrip.tex
\keepsilent
\askforoverwritefalse

\preamble

    Copyright (C) 2017 by Xiangdong Zeng <pssysrq@163.com>

    This work may be distributed and/or modified under the
    conditions of the LaTeX Project Public License, either
    version 1.3c of this license or (at your option) any later
    version. The latest version of this license is in:

      http://www.latex-project.org/lppl.txt

    and version 1.3 or later is part of all distributions of
    LaTeX version 2005/12/01 or later.

    This work has the LPPL maintenance status `maintained'.

    The Current Maintainer of this work is Xiangdong Zeng.

    This work consists of the files fduthesis.dtx,
                                    fduthesis-doc.dtx,
                                    fduthesis-logo.dtx,
              and the derived files fduthesis.ins,
                                    fduthesis.cls,
                                    fduthesis-en.cls,
                                    fduthesis.def,
                                    fduthesis-user.def,
                                    fdudoc.cls,
                                    fdulogo.sty,
                                    fdulogo-example.tex,
                                    fduthesis-cover.tex,
                                    fudan-*.pdf,
                                    fudan-*.png,
                                    fduthesis-cover.pdf,
                                    fduthesis.bbl,
                                    fduthesis-en.ltx,
                                    fduthesis.pdf,
                                    fduthesis-en.pdf,
                                    latexmkrc,
                                    latexmkrc-en,
                                and README.md.

\endpreamble

\generate{
  \usedir{tex/latex/fduthesis}
    \file{\jobname.cls}        {\from{\jobname.dtx}{class}}
    \file{\jobname-en.cls}     {\from{\jobname.dtx}{class-en}}
    \file{\jobname.def}        {\from{\jobname.dtx}{definition}}
    \file{\jobname-user.def}   {\from{\jobname.dtx}{user}}
    \file{fdudoc.cls}          {\from{\jobname.dtx}{doc}
                                \from{\jobname-doc.dtx}{doc}}
    \file{fdulogo.sty}         {\from{\jobname.dtx}{logo}
                                \from{\jobname-logo.dtx}{logo}}
    \file{fdulogo-example.tex} {\from{\jobname.dtx}{ex-logo}
                                \from{\jobname-logo.dtx}{ex-logo}}
    \file{\jobname-cover.tex}  {\from{\jobname.dtx}{cover}
                                \from{\jobname-logo.dtx}{cover}}
%</install>
%<*internal>
  \usedir{source/latex/fduthesis}
    \file{\jobname.ins}        {\from{\jobname.dtx}{install}}
%</internal>
%<*install>
  \usedir{doc/latex/fduthesis}
  \nopreamble\nopostamble
    \file{README.md}           {\from{\jobname.dtx}{readme}}
    \file{latexmkrc.}          {\from{\jobname-doc.dtx}{latexmk}}
    \file{latexmkrc-en.}       {\from{\jobname-doc.dtx}{latexmk-en}}
    \file{\jobname.bbl}        {\from{\jobname-doc.dtx}{bbl}}
}

\obeyspaces
\Msg{*************************************************************}
\Msg{*                                                           *}
\Msg{* To finish the installation you have to move the following *}
\Msg{* files into a directory searched by TeX:                   *}
\Msg{*                                                           *}
\Msg{* The recommended directory is TDS:tex/latex/fduthesis      *}
\Msg{*                                                           *}
\Msg{*     fduthesis.cls                                         *}
\Msg{*     fduthesis-en.cls                                      *}
\Msg{*     fduthesis.def                                         *}
\Msg{*     fduthesis-user.def                                    *}
\Msg{*     fdulogo.sty                                           *}
\Msg{*                                                           *}
\Msg{* To produce the documentation run the file fduthesis.dtx   *}
\Msg{* through XeLaTeX.                                          *}
\Msg{*                                                           *}
\Msg{* Happy TeXing!                                             *}
\Msg{*                                                           *}
\Msg{*************************************************************}

\endbatchfile
%</install>
%
%<*internal>
\fi
%</internal>
%
%<class|class-en|doc|logo>\NeedsTeXFormat{LaTeX2e}
%<class|class-en|doc|logo>\RequirePackage{expl3}
%<*!(driver|install|ex-logo|cover)>
%<!readme>\GetIdInfo $Id: fduthesis.dtx 0.5 2017-09-30 12:00:00Z Xiangdong Zeng <pssysrq@163.com> $
%<class>  {Thesis template for Fudan University}
%<class>\ProvidesExplClass{\ExplFileName}
%<class-en>  {Thesis template for Fudan University (English version)}
%<class-en>\ProvidesExplClass{\ExplFileName-en}
%<definition>  {Definition file for fduthesis}
%<definition>\ProvidesExplFile{\ExplFileName.def}
%<user>  {User definition file for fduthesis}
%<user>\ProvidesExplFile{\ExplFileName-user.def}
%<doc>  {Documentation class for fduthesis}
%<doc>\ProvidesExplClass{fdudoc}
%<logo>  {Fudan University's Visual Identity}
%<logo>\ProvidesExplPackage{fdulogo}
%<!readme>  {\ExplFileDate}{\ExplFileVersion}{\ExplFileDescription}
%</!(driver|install|ex-logo|cover)>
%<*driver>
%\PassOptionsToPackage{showframe}{geometry}
\documentclass{fdudoc}
\usepackage{xpinyin}
\hypersetup
  {
    pdftitle  = {fduthesis: 复旦大学论文模板},
    pdfauthor = {曾祥东}
  }
\renewcommand*\expstar{\hyperlink{expstar}{$\mfrake$}}
\renewcommand*\rexpstar{\hyperlink{rexpstar}{$\mfrakc$}}
% 全角标点放在引号中，需要改成半角式，否则间距过大，不好看
\newcommand\FSID{“{\xeCJKsetup{PunctStyle=banjiao}。}”} ^^A U+3002
\newcommand\FSFW{“{\xeCJKsetup{PunctStyle=banjiao}．}”} ^^A U+FF0E
\newcommand\COFW{“{\xeCJKsetup{PunctStyle=banjiao}：}”} ^^A U+FF1A
\newcommand\SCFW{“{\xeCJKsetup{PunctStyle=banjiao}；}”} ^^A U+FF1B
\begin{document}
  % \DisableImplementation
  % \DocInput{\jobname.dtx}
  \DocInput{\jobname.dtx,\jobname-doc.dtx,\jobname-logo.dtx}
  \IndexLayout
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
% \fi
%
% \changes{v0.1}{2017/02/15}{开始编写模板。}
% \changes{v0.2}{2017/02/19}{使用 Git 进行版本控制，并发布至 GitHub。}
% \changes{v0.3}{2017/02/21}{使用 \cls{doc} 和 \pkg{DocStrip}。}
% \changes{v0.3}{2017/03/04}{支持 \LuaLaTeX{}。}
% \changes{v0.3}{2017/03/20}{添加测试文件。}
% \changes{v0.3}{2017/05/26}{使用 Travis CI 进行持续集成。}
% \changes{v0.3}{2017/06/23}{添加复旦大学视觉识别系统。}
% \changes{v0.3}{2017/07/10}{添加英文模板。}
% \changes{v0.3}{2017/07/19}{使用 \pkg{l3docstrip} 管理名字空间。}
% \changes{v0.3}{2017/07/28}{整理代码，编写用户文档。}
% \changes{v0.4}{2017/08/03}{拆分 \file{dtx} 文件。}
% \changes{v0.4}{2017/08/11}{添加错误信息提示。}
% \changes{v0.6}{2017/11/23}{同步 \pkg{ctex} v2.4.11。}
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%^^A! \PassOptionsToPackage{scheme=plain, linespread=1.1}{ctex}
%^^A! \documentclass{fdudoc}
%^^A! \hypersetup
%^^A!   {
%^^A!     pdftitle  = {fduthesis: LaTeX Thesis Template for Fudan University},
%^^A!     pdfauthor = {Xiangdong Zeng}
%^^A!   }
%^^A! \ctexset
%^^A!   {
%^^A!     section = {name = {}, format+ = \raggedright},
%^^A!     subsubsection/tocline = {\CTEXnumberline{#1}#2}
%^^A!   }
%^^A! \renewcommand*\expstar{\hyperlink{expstar}{$\mfrake$}}
%^^A! \renewcommand*\rexpstar{\hyperlink{rexpstar}{$\mfrakc$}}
%^^A! \newcommand\FSID{{\xeCJKsetup{PunctStyle=banjiao}。}}
%^^A! \newcommand\FSFW{{\xeCJKsetup{PunctStyle=banjiao}．}}
%^^A! \IndexPrologue{\section{Index}}
%^^A! \def\IndexLayout{%
%^^A!   \setlength\IndexMin{0.5\textheight}%
%^^A!   \ctexset{section/numbering=false}%
%^^A!   \StopSpecialIndexModule}
%^^A! \def\indexname{Index}
%^^A! \let\usage\relax
%^^A!
%
% \title{\textcolor{MaterialIndigo800}{^^A
%   \textbf{fduthesis: 复旦大学论文^^A
%     \xpinyin[font=\sffamily]{模}{mu2}板}}}
% \author{曾祥东}
% \date{\today \quad v0.5^^A
%   \thanks{\url{https://github.com/Stone-Zeng/fduthesis}.}}
%^^A! \title{\textcolor{MaterialIndigo800}{%
%^^A!   \textbf{The \textsf{fduthesis} Class \\
%^^A!     \LaTeX{} Thesis Template for Fudan University}}}
%^^A! \author{Xiangdong Zeng}
%^^A! \date{\today \quad v0.5%
%^^A!   \thanks{\url{https://github.com/Stone-Zeng/fduthesis}.}}
%^^A!
%^^A! \begin{document}
%^^A!
%
%^^A 禁止使用 " 符号作为抄录文本缩略符
% \DeleteShortVerb\"
%^^A! \DeleteShortVerb\"
%^^A!
%
%^^A 封面与目录的页边距
%^^A+
% \newgeometry{
%   left   = 1.25 in,
%   right  = 1.25 in,
%   top    = 1.25 in,
%   bottom = 1.00 in
% }
%
% \maketitle
% \vfill
% \begin{center}
%   \includegraphics[width=8cm]{../logo/fduthesis-cover.pdf}
% \end{center}
% \vfill
% \thispagestyle{plain}
% \clearpage
%
% \tableofcontents
%
%^^A-
%
% \EnableDocumentation
%^^A \DisableDocumentation
%
% \begin{documentation}
%
%^^A 用户手册的页边距
%^^A+
% \newgeometry{
%   left   = 1.75 in,
%   right  = 1.00 in,
%   top    = 1.25 in,
%   bottom = 1.00 in
% }
%
%^^A-
%
% \section{介绍}
%^^A! \section{Introduction}
%^^A!
%
% 目前，在网上可以找到的复旦大学 \LaTeX{} 论文模板主要有以下这些：
% \begin{itemize}
%   \item 数学科学学院 2001 级的何力同学和李湛同学在 2005 年根据
%     学校要求所设计的 \cls{毕业论文格式 tex04 版}，以及 2008 年
%     张越同学修改之后的 \cls{毕业论文格式 tex08 版}，这是专为
%     数院本科生撰写毕业论文而设计的
%     \scite{数院毕业论文格式,数院毕业论文格式更新}；
%   \item Pandoxie 编写的 \cls{FDU-Thesis-Latex}
%     \scite{pandoxie2014fduthesislatex}，基本满足了博士（硕士）
%     毕业论文格式要求，使用人数较多；
%   \item richarddzh 编写的硕士论文模板 \cls{fudan-thesis}
%     \scite{richard2016fudanthesis}；
%   \item hmshan 编写的博士论文模板 \cls{FDU_PhD_Thesis_Template}
%     \scite{hmshan2017fduphdthesistemplate}。
% \end{itemize}
% 以上这些模板大都没有经过系统的设计，也鲜有后续维护。相比之下，
% 清华大学 \scite{thuthesis}、重庆大学 \scite{cquthesis}、
% 中国科学技术大学 \scite{zepinglee2017ustcthesis} 以及友校
% 上海交通大学 \scite{weijianwen2017sjtuthesis}等，都有成熟、
% 稳定的解决方案，值得参考。
%
% 本模板将借鉴前辈经验，重新设计，并使用 \LaTeX3
% \scite{interfaces3,source3} 编写，以适应 \TeX{} 技术发展潮流；
% 同时还将构建一套简洁的接口，方便用户使用。
%^^A! \cls{fduthesis} is a thesis template for Fudan University.
%^^A! This template is mostly written in \LaTeX3 syntax, and
%^^A! provides a simple interface for users.
%^^A!
%
% \subsection*{\LaTeX{} 入门}
%^^A! \subsection*{Getting started with \LaTeX{}}
%^^A!
%
% 本文档并非是一份 \LaTeX{} 零基础教程。如果您是完完全全的新手，
% 建议先阅读相关入门文档，如刘海洋编著的《\LaTeX{} 入门》
% \scite{刘海洋2013latex入门} 第一章，或大名鼎鼎的“\pkg{lshort}”
% \scite{lshort} 及其中文翻译版 \scite{lshort-zh-cn}。当然，
% 网络上的入门教程多如牛毛，您可以自行选取。
%^^A! This documentation is \emph{not} a \LaTeX{} tutorial at
%^^A! starter's level. If you are totally a newbie, please read some
%^^A! introductions like the famous \pkg{lshort}. Of course, there
%^^A! are countless \LaTeX{} tutorials on the Internet. You can
%^^A! choose whatever you like.
%^^A!
%
% \subsection*{关于本文档}
%^^A! \subsection*{About this documentation}
%^^A!
%
% 本文采用不同字体表示不同内容。无衬线字体表示宏包名称，如
% \pkg{xeCJK} 宏包、\cls{fduthesis} 文档类等；等宽字体表示代码或
% 文件名，如 \cs{fdusetup} 命令、\env{abstract} 环境、\TeX{} 文档
% \file{thesis.tex} 等；带有尖括号的楷体（或西文斜体）表示命令参数，
% 如 \meta{模板选项}、\meta{English title} 等。在使用时，参数两侧
% 的尖括号不必输入。示例代码进行了语法高亮处理，以方便阅读。
%^^A! In this documentation, different typefaces are used to
%^^A! represent different contents. Packages and classes are shown
%^^A! in sans-serif font, e.g.\ \pkg{xeCJK} package and
%^^A! \cls{fduthesis} class. Commands and file names are shown in
%^^A! monospaced font, e.g.\ command \cs{fdusetup}, environment
%^^A! \env{abstract} and \TeX{} document \file{thesis.tex}.
%^^A! Italic-shaped font with angle brackets outside means arguments,
%^^A! e.g.\ \meta{English title}. However, you do not need to type
%^^A! the brackets when using these commands. The example code has
%^^A! proper syntax highlighting so it will be much easier to read.
%^^A!
%
% 在用户手册中，带有蓝色侧边线的为 \LaTeX{} 代码，而带有粉色侧边线
% 的则为命令行代码，请注意区分。模板提供的选项、命令、环境等，
% 均用横线框起，同时给出使用语法和相关说明。
%^^A! \LaTeX{} code lines will have a blue line on their left, while
%^^A! for command lines there will be a pink line. The options,
%^^A! commands and environments in \cls{fduthesis} will be surrounded
%^^A! by two horizontal lines. Their usages and descriptions are
%^^A! provided at the same time.
%^^A!
%
% 本模板中的选项、命令或环境可以分为以下三类：
% \begin{itemize}
%   \item 名字后面带有 \rexptarget\rexpstar{} 的，表示只能在^^A
%     \emph{中文模板}中使用；
%   \item 名字后面带有 \exptarget\expstar{} 的，表示只能在^^A
%     \emph{英文模板}中使用；
%   \item 名字后面不带有特殊符号的，表示既可以在中文模板中使用，
%     也可以在英文模板中使用。
% \end{itemize}
%^^A! The options, commands and environments in \cls{fduthesis} can be
%^^A! divided into the following three types:
%^^A! \begin{itemize}
%^^A!   \item Those can be only used in \emph{Chinese templates} are
%^^A!     indicated by \rexptarget\rexpstar{}.
%^^A!   \item Those can be only used in \emph{English templates} are
%^^A!     indicated by \rexptarget\expstar{}.
%^^A!   \item If they do not have special characters afterwards, then
%^^A!     you can use them in both Chinese and English templates.
%^^A! \end{itemize}
%^^A!
%
% 代码实现主要面向对 \LaTeX{} 宏包开发感兴趣的用户。如果您有任何改进
% 意见或者功能需求，欢迎前往 GitHub 仓库
% \href{https://github.com/Stone-Zeng/fduthesis/issues}{提交 issue}。
%^^A! If you want to read the implementation part, please turn to the
%^^A! Chinese version. Any issues or feature requests can be submitted
%^^A! in the \href{https://github.com/Stone-Zeng/fduthesis/issues}%
%^^A! {GitHub repository}.
%^^A!
%
% 文档的最后还提供了版本历史和代码索引，以供查阅。
%
% \section{安装}
%^^A! \section{Installation}
%^^A!
%
% \subsection{获取 \cls{fduthesis}}
%^^A! \subsection{Obtaining \cls{fduthesis}}
%^^A!
%
% 本模板目前暂未上传至 CTAN，您需要从 GitHub 上自行下载并安装。
% 具体方法如下：
% \begin{itemize}
%   \item 打开 \href{https://github.com/Stone-Zeng/fduthesis}^^A
%     {项目主页}，点击“Clone or download”，并选择“Download ZIP”，
%     下载 \file{fduthesis-master.zip}。
%   \item 解压安装包 \file{fduthesis-master.zip} 以后，将
%     \file{test} 文件夹下的模板文档类文件 \file{fduthesis.cls}、
%     \file{fduthesis-en.cls} 以及参数配置文件
%     \file{fduthesis.def}、\file{fduthesis-user.def} 复制到您的
%     工作文件夹（\TeX{} 论文文件所在的文件夹）中，方可完成安装。
% \end{itemize}
%
% 注：这是一条缓兵之计。
%
% \subsection{模板组成}
%^^A! \subsection{Composition of the template}
%^^A!
%
% 本模板主要包含核心文档类、配置文件、用户文档等几个部分，
% 其具体组成见表~\ref{tab:fduthesis-components}。
%^^A! There are several parts in \cls{fduthesis}, including kernel
%^^A! template classes, configuration files and user's guides. More
%^^A! details are listed in table~\ref{tab:fduthesis-components}.
%^^A!
%
% \begin{table}[ht]
%   \caption{\cls{fduthesis} 的组成}
%   \label{tab:fduthesis-components}
%   \centering
%   \begin{tabular}{lp{24em}}
%     \toprule
%     \textbf{文件} & \textbf{功能说明} \\
%     \midrule
%     \file{fduthesis.cls}      & 中文模板文档类 \\
%     \file{fduthesis-en.cls}   & 英文模板文档类 \\
%     \file{fduthesis.def}      & 参数配置文件，用于设定
%       \cls{fduthesis} 的初始参数，不建议您自行改动 \\
%     \file{fduthesis-user.def} & 用户配置文件，可根据您的需求进行
%       修改，默认为空 \\
%     \file{fduthesis.dtx}      & 模板源文件，包含源代码、注释以及
%       文档，同时集成有安装文件 \file{fduthesis.ins} \\
%     \file{README.md}          & 简要自述 \\
%     \file{fduthesis.pdf}      & 用户手册（本文档） \\
%     \bottomrule
%   \end{tabular}
% \end{table}
%^^A! \begin{table}[ht]
%^^A!   \caption{The components of \cls{fduthesis}}
%^^A!   \label{tab:fduthesis-components}
%^^A!   \centering
%^^A!   \begin{tabular}{lp{24em}}
%^^A!     \toprule
%^^A!     \textbf{Files} & \textbf{Descriptions} \\
%^^A!     \midrule
%^^A!     \file{fduthesis.cls}      & Document class for Chinese thesis. \\
%^^A!     \file{fduthesis-en.cls}   & Document class for English thesis.\\
%^^A!     \file{fduthesis.def}      & Configuration parameters file
%^^A!       for \cls{fduthesis}. Please do \emph{not} modify it. \\
%^^A!     \file{fduthesis-user.def} & User profile and you may modify
%^^A!       it if necessary. This is an empty file by default. \\
%^^A!     \file{fduthesis.dtx}      & Source file of \cls{fduthesis},
%^^A!       including source code, comments and documentation. \\
%^^A!     \file{README.md}          & The brief introduction. \\
%^^A!     \file{fduthesis.pdf}      & User's guide (this document). \\
%^^A!     \bottomrule
%^^A!   \end{tabular}
%^^A! \end{table}
%^^A!
%
% 模板中的绝大多数文件，均可由 \file{fduthesis.dtx} 导出。
% 在命令行中执行
% \begin{shellexample}[morekeywords={xetex}]
%   xetex fduthesis.dtx
% \end{shellexample}
% 可生成各导出文件；而要生成用户手册 \file{fduthesis.pdf}，则需执行
% \begin{shellexample}[morekeywords={xelatex,makeindex},%
%     emph={-o,-s,-t}]
%   xelatex fduthesis.dtx
%   makeindex -s gind.ist -o fduthesis.ind fduthesis.idx
%   makeindex -s gglo.ist -o fduthesis.gls -t fduthesis.glg fduthesis.glo
%   xelatex fduthesis.dtx
%   xelatex fduthesis.dtx
% \end{shellexample}
% 也可使用 \pkg{latexmk}：
% \begin{shellexample}[morekeywords={latexmk}]
%   latexmk fduthesis.dtx
% \end{shellexample}
% 本模板已经为编译用户手册提供了 \pkg{latexmk} 配置文件
% \file{latexmkrc}。
%
% \section{使用说明}
%^^A! \section{User's guide}
%^^A!
%
% \subsection{基本用法}
%^^A! \subsection{Getting started}
%^^A!
%
% 以下是一份简单的 \TeX{} 文档，它演示了 \cls{fduthesis}
% 的最基本用法：
%^^A! Here is a minimal \TeX{} file for \cls{fduthesis}:
%^^A+
% \begin{latexexample}[deletetexcs={\documentclass},%
%     moretexcs={\chapter},morekeywords={\documentclass},%
%     emph={[2]document}]
%   % thesis.tex
%   \documentclass{fduthesis}
%   \begin{document}
%     \chapter{您好}
%     \section{Welcome to fduthesis!}
%     你好，\LaTeX{}！
%   \end{document}
% \end{latexexample}
%^^A-
%^^A!
%
% 按照 \ref{subsec:编译方式}~小节中的方式编译该文档，您应当得到
% 一篇 5 页的文章。当然，这篇文章的绝大部分都是空白的。
%^^A! Compile this file under the instructions in subsection~%
%^^A! \ref{subsec:compilation}, you will get a 5-page article.
%^^A! Of course, most of it will be blank, as you may predicate.
%^^A!
%
% 英文模板可以用类似的方式使用：
%^^A! The English version can be used in the same way:
%^^A+
% \begin{latexexample}[deletetexcs={\documentclass},%
%     moretexcs={\chapter},morekeywords={\documentclass},%
%     emph={[2]document}]
%   % thesis-en.tex
%   \documentclass{fduthesis-en}
%   \begin{document}
%     \chapter{Hello}
%     \section{Welcome to fduthesis!}
%     Hello, \LaTeX{}!
%   \end{document}
% \end{latexexample}
%^^A-
% 英文模板只对正文部分进行了改动，封面、指导小组成员以及声明页仍将
% 显示为中文。
%^^A! The differences between English and Chinese version only
%^^A! live in the main body. Thesis cover, instructors list and
%^^A! declaration page are still printed in Chinese.
%^^A!
%
% \subsection{编译方式} \label{subsec:编译方式}
%^^A! \subsection{Compilation} \label{subsec:compilation}
%^^A!
%
% 本模板不支持 \pdfTeX{} 引擎，请使用 \XeLaTeX{} 或 \LuaLaTeX{}
% 编译。推荐使用 \XeLaTeX{}。为了生成正确的目录、脚注以及交叉引用，
% 您至少需要连续编译两次。
%^^A! \cls{fduthesis} does NOT support \pdfTeX{}. Please use
%^^A! \XeLaTeX{} or \LuaLaTeX{} to compile, and \XeLaTeX{} is
%^^A! recommended. To get the correct table of contents, footnotes
%^^A! and cross-references, you need to compile the source file at
%^^A! least twice.
%^^A!
%
% 以下代码中，假设您的 \TeX{} 源文件名为 \file{thesis.tex}。
% 使用 \XeLaTeX{} 编译论文，请在命令行中执行
% \begin{shellexample}[morekeywords={xelatex}]
%   xelatex thesis
%   xelatex thesis
% \end{shellexample}
% 或使用 \pkg{latexmk}：
% \begin{shellexample}[morekeywords={latexmk},emph={-xelatex}]
%   latexmk -xelatex thesis
% \end{shellexample}
%^^A! In the following example, suppose your \TeX{} source file is
%^^A! \file{thesis.tex}. Please execute the following commands if
%^^A! you want to use \XeLaTeX{}:
%^^A! \begin{shellexample}[morekeywords={xelatex}]
%^^A!   xelatex thesis
%^^A!   xelatex thesis
%^^A! \end{shellexample}
%^^A! You can use \pkg{latexmk} as well:
%^^A! \begin{shellexample}[morekeywords={latexmk},emph={-xelatex}]
%^^A!   latexmk -xelatex thesis
%^^A! \end{shellexample}
%^^A!
%
% 使用 \LuaLaTeX{} 编译论文，请在命令行中执行
% \begin{shellexample}[morekeywords={lualatex}]
%   lualatex thesis
%   lualatex thesis
% \end{shellexample}
% 或者
% \begin{shellexample}[morekeywords={latexmk},emph={-lualatex}]
%   latexmk -lualatex thesis
% \end{shellexample}
%^^A! \LuaLaTeX{} can be used in a similar way:
%^^A! \begin{shellexample}[morekeywords={lualatex}]
%^^A!   lualatex thesis
%^^A!   lualatex thesis
%^^A! \end{shellexample}
%^^A! or
%^^A! \begin{shellexample}[morekeywords={latexmk},emph={-lualatex}]
%^^A!   latexmk -lualatex thesis
%^^A! \end{shellexample}
%^^A!
%
% 需要注意，请不要把模板中的配置文件 \file{latexmkrc} 放置在工作
% 文件夹下。该配置文件仅适用于生成模板用户手册。
%^^A! Note that you should not put the profile \file{latexmkrc} in
%^^A! your working directories. This file is meant to generate the
%^^A! user's guide.
%^^A!
%
% \subsection{模板选项}
%^^A! \subsection{Options of the template}
%^^A!
%
% 所谓“模板选项”，指需要在引入文档类的时候指定的选项：
% \begin{latexexample}[deletetexcs={\documentclass},%
%     morekeywords={\documentclass}]
%   \documentclass(*\oarg{模板选项}*){fduthesis}
%   \documentclass(*\oarg{模板选项}*){fduthesis-en}
% \end{latexexample}
%^^A! You can specify some \emph{template options} when loading
%^^A! \cls{fduthesis}:
%^^A! \begin{latexexample}[deletetexcs={\documentclass},%
%^^A!     morekeywords={\documentclass}]
%^^A!   \documentclass(*\oarg{options}*){fduthesis}
%^^A!   \documentclass(*\oarg{options}*){fduthesis-en}
%^^A! \end{latexexample}
%^^A!
%
% 有些模板选项为布尔型，它们只能在 \opt{true} 和 \opt{false}
% 中取值。对于这些选项，\kvopt{\meta{选项}}{true} 中的“|= true|”
% 可以省略。
%^^A! Some options are \emph{boolean} --- they only take the value
%^^A! \opt{true} or \opt{false}. For these options, you can
%^^A! abbreviate ``\kvopt{\meta{option}}{true}'' simply to
%^^A! ``\opt{\meta{option}}''.
%^^A!
%
% \begin{function}{oneside,twoside}
%   指明论文的单双面模式，默认为 \opt{twoside}。该选项会影响每章
%   的开始位置，还会影响页眉样式。
% \end{function}
%^^A! \begin{function}{oneside,twoside}
%^^A!   Specify whether single or double sided output should be
%^^A!   generated. \opt{twoside} will be chosen by default. These
%^^A!   option will determine where the new chapters begin and how
%^^A!   the headers display. The option \opt{twoside} does
%^^A!   \emph{not} tell the printer to actually make a two-sided
%^^A!   printout.
%^^A! \end{function}
%^^A!
%
% 在双面模式（\opt{twoside}）下，按照通常的排版惯例，每章应只从
% 奇数页（在右）开始；而在单页模式（\opt{oneside}）下，则可以从
% 任意页面开始。本模板中，目录、摘要、符号表等均视作章，也按相同
% 方式排版。
%^^A! If choosing \opt{twoside}, chapters will begin at the odd pages
%^^A! (right hand). However, they will begin at arbitrary pages
%^^A! available when choosing \opt{oneside}. Table of contents,
%^^A! abstract and the list of symbols are considered as chapters and
%^^A! processed in the same way.
%^^A!
%
% 双面模式下，正文部分偶数页（在左）的左页眉显示章标题，奇数页
% （在右）的右页眉显示节标题；前置部分的页眉按同样格式显示，但文字
% 均为对应标题（如“{\kaishu 目\textvisiblespace{}录}”、
% “{\kaishu 摘\textvisiblespace{}要}”等）。
% 而在单面模式下，正文部分则页面不分奇偶，均同时显示左、右页眉，
% 文字分别为章标题和节标题；前置部分只有中间页眉，显示对应标题。
%^^A! At two-sided mode, left headers on the even pages (left hand)
%^^A! in \emph{main body} will show the title of chapters, while the
%^^A! right headers on the odd pages (right hand) will show the
%^^A! title of sections. Headers in \emph{front matter} have the
%^^A! same style, but they will only show the title as
%^^A! ``\textit{Contents}'', ``\textit{Abstract}'', etc.
%^^A!
%^^A! At one-sided mode, both left and right headers on \emph{all}
%^^A! pages in main body will be shown. The text is the title of
%^^A! chapters and sections, respectively. In front matter, there
%^^A! are only middle headers, which show the corresponding titles.
%^^A!
%
% \begin{function}{draft}
%   \begin{fdusyntax}[emph={[1]draft}]
%     draft = (*<\TFF>*)
%   \end{fdusyntax}
%   选择是否开启草稿模式，默认关闭。
% \end{function}
%^^A! \begin{function}{draft}
%^^A!   \begin{fdusyntax}[emph={[1]draft}]
%^^A!     draft = (*<\TFF>*)
%^^A!   \end{fdusyntax}
%^^A!   Enable draft mode. Default off.
%^^A! \end{function}
%^^A!
%
% 草稿模式为全局选项，会影响到很多宏包的工作方式。
% 开启之后，主要的变化有：
% \begin{itemize}
%   \item 把行溢出的盒子显示为黑色方块；
%   \item 不实际插入图片，只输出一个占位方框；
%   \item 关闭超链接渲染，也不再生成 PDF 书签；
%   \item 显示页面边框。
% \end{itemize}
%^^A! \opt{draft} is a global option and will affect many packages.
%^^A! You may notice the following changes when using \opt{draft}:
%^^A! \begin{itemize}
%^^A!   \item Lines with overfull \tn{hbox}'s will be marked with
%^^A!     a thick black square on the right margin.
%^^A!   \item Will not include graphics files actually, but instead
%^^A!     print a box of the size the graphic would take up, as well
%^^A!     as the file name.
%^^A!   \item Will not make hyperlinks and PDF bookmarks.
%^^A!   \item Show the page frames.
%^^A! \end{itemize}
%^^A!
%
% \subsection{参数设置}
%^^A! \subsection{More options}
%^^A!
%
% \begin{function}{\fdusetup}
%   \begin{fdusyntax}[morekeywords={\fdusetup}]
%     \fdusetup(*\marg{键值列表}*)
%   \end{fdusyntax}
%   本模板提供了一系列选项，可由您自行配置。载入文档类之后，以下
%   所有选项均可通过统一的命令 \cs{fdusetup} 来设置。
% \end{function}
%^^A! \begin{function}{\fdusetup}
%^^A!   \begin{fdusyntax}[morekeywords={\fdusetup}]
%^^A!     \fdusetup(*\marg{key-value list}*)
%^^A!   \end{fdusyntax}
%^^A!   \cls{fduthesis} has provided a number of options, which
%^^A!   can be given via the general command \cs{fdusetup}.
%^^A! \end{function}
%^^A!
%
% \cs{fdusetup} 的参数是一组由（英文）逗号隔开的选项列表，列表中的
% 选项通常是 \kvopt{\meta{key}}{\meta{value}} 的形式。部分选项的
% \meta{value} 可以省略。对于同一项，后面的设置将会覆盖前面的设置。
% 在下文的说明中，将用\textbf{粗体}表示默认值。
%^^A! The argument of \cs{fdusetup} is a set of comma-separated option
%^^A! list. The options usually have the form of \kvopt{\meta{key}}%
%^^A! {\meta{value}} and in some cases \meta{value} can be omitted.
%^^A! For the same option, the values given later will override the
%^^A! the previous ones. Default values are indicated in
%^^A! \textbf{boldface} in the following descriptions.
%^^A!
%
% \cs{fdusetup} 采用 \LaTeX3 风格的键值设置，支持不同类型以及多种
% 层次的选项设定。键值列表中，“|=|”左右的空格不影响设置；但需注意，
% 参数列表中不可以出现空行。
%^^A! \cs{fdusetup} follows \LaTeX3 key-value style, and different
%^^A! types as well as various levels options are supported. In the
%^^A! key-value list, spaces around ``|=|'' will be trimmed; however,
%^^A! blank lines should never appear in the argument.
%^^A!
%
% 与模板选项相同，布尔型的参数可以省略 \kvopt{\meta{选项}}{true}
% 中的“|= true|”。
%^^A! Similar with template options, ``\kvopt{\meta{option}}{true}''
%^^A! can be abbreviated to \opt{\meta{option}} for boolean type.
%^^A!
%
% 另有一些选项包含子选项，如 \opt{style} 和 \opt{info} 等。它们可以
% 按如下两种等价方式来设定：
%^^A! Some options, such as \opt{style} and \opt{info}, may have
%^^A! sub-options. They can be set by the following two equivalent
%^^A! methods:
%^^A+
% \begin{latexexample}[morekeywords={\fdusetup},%
%     emph={[1]style,cjkfont,fontsize,info,author,department,title}]
%   \fdusetup{
%     style = {cjkfont = adobe, fontsize = -4},
%     info  = {
%       author     = {阿尔伯特·爱因斯坦},
%       department = {物理学系},
%       title      = {关于光产生和转变的一个启发性观点}
%     }
%   }
% \end{latexexample}
%^^A-
% 或者
%^^A! or
%^^A+
% \begin{latexexample}[morekeywords={\fdusetup},%
%     emph={[1]style,cjkfont,fontsize,info,author,department,title}]
%   \fdusetup{
%     style/cjkfont   = adobe,
%     style/fontsize  = -4,
%     info/author     = {阿尔伯特·爱因斯坦},
%     info/department = {物理学系},
%     info/title      = {关于光产生和转变的一个启发性观点}
%   }
% \end{latexexample}
%^^A-
%^^A!
%
% 注意 “|/|” 的前后均不可以出现空白字符。
%^^A! Note that you may \emph{not} put spaces around ``|/|''.
%^^A!
%
% \subsubsection{论文格式} \label{subsubsec:论文格式}
%^^A! \subsubsection{Style and format} \label{subsubsec:style-and-format}
%^^A!
%
% \begin{function}{style}
%   \begin{fdusyntax}[emph={[1]style}]
%     style = (*\marg{键值列表}*)
%     style/(*\meta{key}*) = (*\meta{value}*)
%   \end{fdusyntax}
%   该选项包含许多子项目，用于设置论文格式。具体内容见下。
% \end{function}
%^^A! \begin{function}{style}
%^^A!   \begin{fdusyntax}[emph={[1]style}]
%^^A!     style = (*\marg{key-value list}*)
%^^A!     style/(*\meta{key}*) = (*\meta{value}*)
%^^A!   \end{fdusyntax}
%^^A!   This general option is for setting the thesis style and format.
%^^A!   See the following details.
%^^A! \end{function}
%^^A!
%
%^^A+
% \begin{function}{style/font}
%   \begin{fdusyntax}[emph={[1]font}]
%     font = (*<libertinus|lm|palatino|(times)|none>*)
%   \end{fdusyntax}
%^^A-
%   设置西文字体（包括数学字体）。
% \end{function}
%^^A!   Set the western fonts (including math fonts).
%^^A! \end{function}
%^^A!
%
%^^A+
% \begin{function}[rEXP]{style/cjkfont}
%   \begin{fdusyntax}[emph={[1]cjkfont}]
%     cjkfont = (*<adobe|(fandol)|founder|linux|mac|windows|none>*)
%   \end{fdusyntax}
%^^A-
%   设置中文字体。
% \end{function}
%^^A!   Set CJK (Chinese, Japanese and Korean) fonts.
%^^A! \end{function}
%^^A!
%
% 启用 \kvopt{font}{none} 或 \kvopt{cjkfont}{none} 之后，模板将关闭
% 默认西文 / 中文字体设置。此时，您需要自行使用 \cs{setmainfont}、
% \cs{setCJKmainfont}、\cs{setmathfont} 等命令来配置字体。
%^^A! When you choose \kvopt{font}{none} or \kvopt{cjkfont}{none},
%^^A! \cls{fduthesis} will disable the default western/CJK font
%^^A! settings. You may use \cs{setmainfont}, \cs{setCJKmainfont}
%^^A! and \cs{setmathfont}, etc.\ to configure the fonts manually.
%^^A!
%
%^^A+
% \begin{function}{style/fontsize}
%   \begin{fdusyntax}[emph={[1]fontsize}]
%     fontsize = (*<(-4)|5>*)
%   \end{fdusyntax}
%^^A-
%   设置论文的基础字号。
% \end{function}
%^^A!   Specify the basic font size in your thesis.
%^^A! \end{function}
%^^A!
%
%^^A+
% \begin{function}[rEXP]{style/fullwidthstop}
%   \begin{fdusyntax}[emph={[1]fullwidthstop}]
%     fullwidthstop = (*<catcode|mapping|(false)>*)
%   \end{fdusyntax}
%^^A-
%   选择是否把全角实心句点\FSFW 作为默认的句号形状。
%   这种句号一般用于科技类文章，以避免与下标“$_o$”或“$_0$”混淆。
% \end{function}
%^^A!   Let full-width full stop ``\FSFW'' as the default full stop.
%^^A!   Generally, this punctuation is used for scientific articles,
%^^A!   where ``\FSID'' is easily to be confused with subscript
%^^A!   ``$_o$'' or ``$_0$''.
%^^A! \end{function}
%^^A!
%
% 选择 \kvopt{fullwidthstop}{catcode} 或 \opt{mapping} 后，都会实现
% 上述效果。有所不同的是，在选择 \opt{catcode} 后，只有^^A
% \emph{显式的}\FSID 会被替换为\FSFW，但在选择 \opt{mapping} 后，
% \emph{所有的}\FSID 都会被替换。例如，如果您用宏保存了一些含有^^A
% \FSID 的文字，那么在选择 \opt{catcode} 时，其中的\FSID 不会被
% 替换为\FSFW。
%^^A! If you choose \kvopt{fullwidthstop}{catcode}, only
%^^A! \emph{explicit} ``\FSID'' will be replaced by ``\FSFW''; when
%^^A! choosing \kvopt{fullwidthstop}{mapping}, however, \emph{all}
%^^A! the ``\FSID'' will be replaced.
%^^A!
%
% 选项 \kvopt{fullwidthstop}{mapping} 只在 \XeTeX{} 下有效。使用
% \LuaTeX{} 编译时，该选项相当于 \kvopt{fullwidthstop}{catcode}。
%^^A! \opt{mapping} is valid only under \XeTeX{}. When compiling
%^^A! with \LuaTeX{}, it is equivalent to \opt{catcode}.
%^^A!
%
% 如果您在选择 \kvopt{fullwidthstop}{mapping} 后仍需要临时显示^^A
% \FSID，可以按如下方法操作：
% \begin{latexexample}[moretexcs={\CJKfontspec},emph={[1]Mapping}]
%   % 请使用 XeTeX 编译
%   % 外侧的花括号表示分组
%   这是一个句号{\CJKfontspec{(*\meta{字体名}*)}[Mapping=full-stop]。}
% \end{latexexample}
%^^A! If you want to display ``\FSID'' temporarily after setting
%^^A! \kvopt{fullwidthstop}{mapping}, the following code snippet
%^^A! will be helpful:
%^^A! \begin{latexexample}[moretexcs={\CJKfontspec},emph={[1]Mapping}]
%^^A!   % Compile with XeTeX
%^^A!   % The outside braces is used for group
%^^A!   这是一个句号{\CJKfontspec{(*\meta{font name}*)}[Mapping=full-stop]。}
%^^A! \end{latexexample}
%^^A!
%
% \begin{function}{style/footnotestyle}
%^^A 这里奇怪的东西是用来控制对齐的。fdusyntax 会吃掉开头的几个
%^^A 空格，因此这里用 X 来占位。
%   \begin{fdusyntax}[emph={[1]footnotestyle}]
%     footnotestyle = (*<plain|\\
%       XXXXXX\mbox{}~~~~~~~~~~~~~~~~libertinus|libertinus*|libertinus-sans|\\
%       XXXXXX\mbox{}~~~~~~~~~~~~~~~~pifont|pifont*|pifont-sans|pifont-sans*|\\
%       XXXXXX\mbox{}~~~~~~~~~~~~~~~~xits|xits-sans|xits-sans*>*)
%   \end{fdusyntax}
%   设置脚注编号样式。西文字体设置会影响其默认取值（见
%   表~\ref{tab:footnote-font}）。因此，要使得该选项生效，需将其
%   放置在 \opt{font} 选项之后。带有 |sans| 的为相应的无衬线字体
%   版本；带有 |*| 的为阴文样式（即黑底白字）。
% \end{function}
%^^A! \begin{function}{style/footnotestyle}
%^^A!   \begin{fdusyntax}[emph={[1]footnotestyle}]
%^^A!     footnotestyle = (*<plain|\\
%^^A!       XXXX\mbox{}~~~~~~~~~~~~~~~~libertinus|libertinus*|libertinus-sans|\\
%^^A!       XXXX\mbox{}~~~~~~~~~~~~~~~~pifont|pifont*|pifont-sans|pifont-sans*|\\
%^^A!       XXXX\mbox{}~~~~~~~~~~~~~~~~xits|xits-sans|xits-sans*>*)
%^^A!   \end{fdusyntax}
%^^A!   Set the style of footnote numbers. Note that western fonts
%^^A!   will affect its default value (see table~\ref{tab:footnote-font}),
%^^A!   so you may put it after |font| option. The one with |sans|
%^^A!   is for the corresponding sans-serif version, while |*|
%^^A!   for white on black version.
%^^A! \end{function}
%^^A!
%
% \begin{table}[ht]
%   \caption{西文字体与脚注编号样式默认值的对应关系}
%   \label{tab:footnote-font}
%   \centering
%   \begin{tabular}{ccccc}
%     \toprule
%     \textbf{西文字体设置} &
%       |libertinus| & |lm|     & |palatino| & |times| \\
%     \midrule
%     \textbf{脚注编号样式默认值} &
%       |libertinus| & |pifont| & |pifont|   & |xits|  \\
%     \bottomrule
%   \end{tabular}
% \end{table}
%^^A! \begin{table}[ht]
%^^A!   \caption{Relationship between option \opt{font} and the
%^^A!     default value of \opt{footnotestyle}}
%^^A!   \label{tab:footnote-font}
%^^A!   \centering
%^^A!   \begin{tabular}{ccccc}
%^^A!     \toprule
%^^A!     \textbf{Western fonts settings} &
%^^A!       |libertinus| & |lm|     & |palatino| & |times| \\
%^^A!     \midrule
%^^A!     \textbf{Default value of footnote number style} &
%^^A!       |libertinus| & |pifont| & |pifont|   & |xits|  \\
%^^A!     \bottomrule
%^^A!   \end{tabular}
%^^A! \end{table}
%^^A!
%
%^^A+
% \begin{function}{style/hyperlink}
%   \begin{fdusyntax}[emph={[1]hyperlink}]
%     hyperlink = (*<border|(color)|none>*)
%   \end{fdusyntax}
%^^A-
%   设置超链接样式。\opt{border} 表示在超链接四周绘制方框；
%   \opt{color} 表示用彩色显示超链接；\opt{none} 表示没有特殊装饰，
%   可用于生成最终的打印版文稿。
% \end{function}
%^^A!   Set the style of hyperlinks. \opt{border} draws borders around
%^^A!   hyperlinks; \opt{color} displays hyperlinks in colorful text;
%^^A!   \opt{none} leads to plain text, which is useful when printing
%^^A!   the final document.
%^^A! \end{function}
%^^A!
%
% \begin{function}{style/hyperlinkcolor}
%   \begin{fdusyntax}[emph={[1]hyperlinkcolor}]
%     hyperlinkcolor = (*<(default)|classic|elegant|fantasy|material|\\
%       XXXXXX\mbox{}~~~~~~~~~~~~~~~~~business|science|summer|autumn|graylevel|prl>*)
%   \end{fdusyntax}
%   设置超链接颜色。该选项在 \kvopt{hyperlink}{none} 时无效。
%   各选项所代表的颜色见表~\ref{tab:hyperlink-color}。
% \end{function}
%^^A! \begin{function}{style/hyperlinkcolor}
%^^A!   \begin{fdusyntax}[emph={[1]hyperlinkcolor}]
%^^A!     hyperlinkcolor = (*<(default)|classic|elegant|fantasy|material|\\
%^^A!       XXXX\mbox{}~~~~~~~~~~~~~~~~~business|science|summer|autumn|graylevel|prl>*)
%^^A!   \end{fdusyntax}
%^^A!   Set the color of hyperlinks. It is invalid if
%^^A!   \kvopt{hyperlink}{none}. The related colors can be found
%^^A!   in table~\ref{tab:hyperlink-color}.
%^^A! \end{function}
%^^A!
%
%^^A+
% \begin{table}[ht]
% \centering
%^^A-
% \newcommand\linkcolorexam[3]{^^A
%   {\small 图~\textcolor[HTML]{#1}{1-2}，
%     (\textcolor[HTML]{#1}{3.4})~式} &
%   {\small \textcolor[HTML]{#2}{\texttt{http://g.cn}}} &
%   {\small 文献~[\textcolor[HTML]{#3}{1}]，
%     (\textcolor[HTML]{#3}{Knuth~1986})}}
%^^A! \newcommand\linkcolorexam[3]{%
%^^A!   {\small Fig.~\textcolor[HTML]{#1}{1-2}，
%^^A!     Eq.~(\textcolor[HTML]{#1}{3.4})} &
%^^A!   {\small \textcolor[HTML]{#2}{\texttt{http://g.cn}}} &
%^^A!   {\small Ref.~[\textcolor[HTML]{#3}{1}]，
%^^A!     (\textcolor[HTML]{#3}{Knuth~1986})}}
% \begin{threeparttable}
% \caption{预定义的超链接颜色方案}
% \label{tab:hyperlink-color}
%^^A! \begin{threeparttable}
%^^A! \caption{Pre-defined hyperlink color schemes}
%^^A! \label{tab:hyperlink-color}
% \begin{tabular}{c*{3}{>{\hspace{0.2cm}}c<{\hspace{0.2cm}}}}
%   \toprule
%   \textsf{选项} & \textsf{链接} & \textsf{URL} & \textsf{引用} \\
%^^A! \begin{tabular}{c*{3}{>{\hspace{0.2cm}}c<{\hspace{0.2cm}}}}
%^^A!   \toprule
%^^A!   \textsf{Options} & \textsf{Cross references} & \textsf{URL} & \textsf{Citation} \\
%^^A+
%   \midrule
%   \opt{default}            & \linkcolorexam{990000}{0000B2}{007F00} \\
%   \opt{classic}            & \linkcolorexam{FF0000}{0000FF}{00FF00} \\
%   \opt{elegant}\tnote{a}   & \linkcolorexam{961212}{C31818}{9B764F} \\
%   \opt{fantasy}\tnote{b}   & \linkcolorexam{FF4A19}{FF3F94}{934BA1} \\
%   \opt{material}\tnote{c}  & \linkcolorexam{E91E63}{009688}{4CAF50} \\
%   \opt{business}\tnote{d}  & \linkcolorexam{D14542}{295497}{1F6E43} \\
%   \opt{science}\tnote{e}   & \linkcolorexam{CA0619}{389F9D}{FF8920} \\
%   \opt{summer}\tnote{f}    & \linkcolorexam{00AFAF}{5F5FAF}{5F8700} \\
%   \opt{autumn}\tnote{f}    & \linkcolorexam{D70000}{D75F00}{AF8700} \\
%   \opt{graylevel}\tnote{c} & \linkcolorexam{616161}{616161}{616161} \\
%   \opt{prl}\tnote{g}       & \linkcolorexam{0000FF}{0000FF}{0000FF} \\
%   \bottomrule
% \end{tabular}
% \begin{tablenotes}
%^^A-
%   \item[a] 来自 \href{https://tex.stackexchange.com/}^^A
%     {\TeX{} - \LaTeX{} Stack Exchange 网站}。
%   \item[b] Adobe CC 产品配色。
%   \item[c] 取自 Material 色彩方案
%     （见 \url{https://material.io/guidelines/style/color.html}）。
%   \item[d] Microsoft Office 2016 产品配色。
%   \item[e] 来自 \href{https://www.wolfram.com/}{Wolfram Research 网站}。
%   \item[f] 均取自 Solarized 色彩方案
%     （见 \url{http://ethanschoonover.com/solarized}）。
%   \item[g] \textit{Physical Review Letter} 杂志配色。
%^^A!   \item[a] From \href{https://tex.stackexchange.com/}%
%^^A!     {\TeX{} - \LaTeX{} Stack Exchange}.
%^^A!   \item[b] Adobe CC.
%^^A!   \item[c] Material Design color palette
%^^A!     (See \url{https://material.io/guidelines/style/color.html}).
%^^A!   \item[d] Microsoft Office 2016.
%^^A!   \item[e] From \href{https://www.wolfram.com/}{Wolfram Research website}.
%^^A!   \item[f] Solarized color palette
%^^A!     (See \url{http://ethanschoonover.com/solarized}).
%^^A!   \item[g] \textit{Physical Review Letter} magazine.
%^^A+
% \end{tablenotes}
% \end{threeparttable}
% \end{table}
%^^A-
%^^A!
%
% \begin{function}{style/logo}
%   \begin{fdusyntax}[emph={[1]logo}]
%     logo = (*\marg{文件}*)
%   \end{fdusyntax}
%   封面中校名图片的文件名。默认值为 \file{fudan-name.pdf}。
% \end{function}
%^^A! \begin{function}{style/logo}
%^^A!   \begin{fdusyntax}[emph={[1]logo}]
%^^A!     logo = (*\marg{file}*)
%^^A!   \end{fdusyntax}
%^^A!   File name of the logo in thesis cover. Default value is
%^^A!   \file{fudan-name.pdf}.
%^^A! \end{function}
%^^A!
%
% \begin{function}{style/logosize}
%   \begin{fdusyntax}[emph={[1]logosize}]
%     logosize = (*\marg{宽度}*)
%     logosize = {(*\meta{宽度}*), (*\meta{高度}*)}
%   \end{fdusyntax}
%   校名图片的大小。默认仅指定了宽度，为 |0.5\textwidth|\/。
%   如果仅需指定高度，可在 \meta{宽度} 处填入一个空的分组 |{}|。
% \end{function}
%^^A! \begin{function}{style/logosize}
%^^A!   \begin{fdusyntax}[emph={[1]logosize}]
%^^A!     logosize = (*\marg{width}*)
%^^A!     logosize = {(*\meta{width}*), (*\meta{height}*)}
%^^A!   \end{fdusyntax}
%^^A!   Size of the logo. By default, only width is set to
%^^A!   |0.5\textwidth|. To set height only, you can put an
%^^A!   empty group ``|{}|'' at \meta{width}.
%^^A! \end{function}
%^^A!
%
%^^A+
% \begin{function}{style/automakecover}
%   \begin{fdusyntax}[emph={[1]automakecover}]
%     automakecover = (*<\TTF>*)
%   \end{fdusyntax}
%^^A-
%   是否自动生成论文封面（封一）、指导小组成员名单（封二）和
%   声明页（封三）。封面中的各项信息，可通过 \cs{fdusetup} 录入，
%   具体请参阅 \ref{subsubsec:信息录入}~节。
% \end{function}
%^^A!   Whether generate thesis cover, list of instructors (inside
%^^A!   front cover) and declaration page (inside back cover)
%^^A!   automatically. Entries in the cover can be specified also
%^^A!   via \cs{fdusetup}, and you can find more details in
%^^A!   subsubsection~\ref{subsubsec:information}.
%^^A! \end{function}
%^^A!
%
% \begin{function}{\makecoveri,\makecoverii,\makecoveriii}
%   用于手动生成论文封面、指导小组成员名单和声明页。这几个命令不能
%   确保页码的正确编排，因此除非必要，您应当始终使用自动生成的封面。
% \end{function}
%^^A! \begin{function}{\makecoveri,\makecoverii,\makecoveriii}
%^^A!   For generating thesis cover, list of instructors and
%^^A!   declaration page manually. These commands cannot ensure
%^^A!   the correct page numbers, hence you should always use the
%^^A!   auto-generated thesis cover unless necessary.
%^^A! \end{function}
%^^A!
%
% \subsubsection{信息录入} \label{subsubsec:信息录入}
%^^A! \subsubsection{Personal information} \label{subsubsec:information}
%^^A!
%
% \begin{function}{info}
%   \begin{fdusyntax}[emph={[1]info}]
%     info = (*\marg{键值列表}*)
%     info/(*\meta{key}*) = (*\meta{value}*)
%   \end{fdusyntax}
%   该选项包含许多子项目，录入论文信息。具体内容见下。以下带“|*|”的
%   项目表示对应的英文字段。
% \end{function}
%^^A! \begin{function}{info}
%^^A!   \begin{fdusyntax}[emph={[1]info}]
%^^A!     info = (*\marg{key-value list}*)
%^^A!     info/(*\meta{key}*) = (*\meta{value}*)
%^^A!   \end{fdusyntax}
%^^A!   This general option is for entering your personal information.
%^^A!   See the following details. Note that options with ``|*|'' are
%^^A!   the corresponding English items.
%^^A! \end{function}
%^^A!
%
% \begin{function}{info/title,info/title*}
%   \begin{fdusyntax}[emph={[1]title,title*}]
%     title  = (*\marg{中文标题}*)
%     title* = (*\marg{英文标题}*)
%   \end{fdusyntax}
%   论文标题。默认会在约 20 个汉字字宽处强制断行，但为了语义的
%   连贯以及排版的美观，如果您的标题长于一行，建议使用“|\\|”
%   手动断行。
% \end{function}
%^^A! \begin{function}{info/title,info/title*}
%^^A!   \begin{fdusyntax}[emph={[1]title,title*}]
%^^A!     title  = (*\marg{title in Chinese}*)
%^^A!     title* = (*\marg{title in English}*)
%^^A!   \end{fdusyntax}
%^^A!   Title of your thesis. The line width is about \SI{30}{em} by
%^^A!   default, but you may break it with |\\| manually.
%^^A! \end{function}
%^^A!
%
% \begin{function}{info/author,info/author*}
%   \begin{fdusyntax}[emph={[1]author,author*}]
%     author  = (*\marg{姓名}*)
%     author* = (*\marg{英文姓名（或拼音）}*)
%   \end{fdusyntax}
%   作者姓名。
% \end{function}
%^^A! \begin{function}{info/author,info/author*}
%^^A!   \begin{fdusyntax}[emph={[1]author,author*}]
%^^A!     author  = (*\marg{name in Chinese}*)
%^^A!     author* = (*\marg{name in English \lparen or Pinyin\rparen}*)
%^^A!   \end{fdusyntax}
%^^A!   Author's name.
%^^A! \end{function}
%^^A!
%
% \begin{function}{info/supervisor}
%   \begin{fdusyntax}[emph={[1]supervisor}]
%     supervisor = (*\marg{姓名}*)
%   \end{fdusyntax}
%   导师姓名。
% \end{function}
%^^A! \begin{function}{info/supervisor}
%^^A!   \begin{fdusyntax}[emph={[1]supervisor}]
%^^A!     supervisor = (*\marg{name}*)
%^^A!   \end{fdusyntax}
%^^A!   Supervisor's name.
%^^A! \end{function}
%^^A!
%
% \begin{function}{info/department}
%   \begin{fdusyntax}[emph={[1]department}]
%     department = (*\marg{名称}*)
%   \end{fdusyntax}
%   院系名称。
% \end{function}
%^^A! \begin{function}{info/department}
%^^A!   \begin{fdusyntax}[emph={[1]department}]
%^^A!     department = (*\marg{name}*)
%^^A!   \end{fdusyntax}
%^^A!   Name of the department.
%^^A! \end{function}
%^^A!
%
% \begin{function}{info/major}
%   \begin{fdusyntax}[emph={[1]major}]
%     major = (*\marg{名称}*)
%   \end{fdusyntax}
%   专业名称。
% \end{function}
%^^A! \begin{function}{info/major}
%^^A!   \begin{fdusyntax}[emph={[1]major}]
%^^A!     major = (*\marg{name}*)
%^^A!   \end{fdusyntax}
%^^A!   Name of the major.
%^^A! \end{function}
%^^A!
%
% \begin{function}{info/studentid}
%   \begin{fdusyntax}[emph={[1]studentid}]
%     studentid = (*\marg{数字}*)
%   \end{fdusyntax}
%   作者学号。
% \end{function}
%^^A! \begin{function}{info/studentid}
%^^A!   \begin{fdusyntax}[emph={[1]studentid}]
%^^A!     studentid = (*\marg{number}*)
%^^A!   \end{fdusyntax}
%^^A!   Author's student ID.
%^^A! \end{function}
%^^A!
%
% 复旦大学学号共 11 位，前两位为入学年份，之后一位为学生类型
% 代码（博士生为 1，硕士生为 2，本科生为 3），接下来的五位为
% 专业代码，最后三位为顺序号。
%^^A! In Fudan University, student ID has 11 digits. The first two
%^^A! are the year of attendance; next one represents the student's
%^^A! type (1 for doctor, 2 for master and 3 for bachelor); the
%^^A! following five digits are major ID while the last three are
%^^A! serial number.
%^^A!
%
% \begin{function}{info/schoolid}
%   \begin{fdusyntax}[emph={[1]schoolid}]
%     schoolid = (*\marg{数字}*)
%   \end{fdusyntax}
%   学校代码。默认值为 10246（这是复旦大学的学校代码）。
% \end{function}
%^^A! \begin{function}{info/schoolid}
%^^A!   \begin{fdusyntax}[emph={[1]schoolid}]
%^^A!     schoolid = (*\marg{number}*)
%^^A!   \end{fdusyntax}
%^^A!   School ID. Default value is 10246 (school ID of Fudan University).
%^^A! \end{function}
%^^A!
%
% \begin{function}{info/date}
%   \begin{fdusyntax}[emph={[1]date}]
%     date = (*\marg{日期}*)
%   \end{fdusyntax}
%   论文完成日期。默认值为文档编译日期（\tn{today}）。
% \end{function}
%^^A! \begin{function}{info/date}
%^^A!   \begin{fdusyntax}[emph={[1]date}]
%^^A!     date = (*\marg{date}*)
%^^A!   \end{fdusyntax}
%^^A!   Finish date of your thesis. Default value is the compilation
%^^A!   date (\tn{today}).
%^^A! \end{function}
%^^A!
%
%^^A+
% \begin{function}{info/secretlevel}
%   \begin{fdusyntax}[emph={[1]secretlevel}]
%     secretlevel = (*<(none)|i|ii|iii>*)
%   \end{fdusyntax}
%^^A-
%   密级。\opt{i}、\opt{ii}、\opt{iii} 分别表示秘密、机密、绝密；
%   \opt{none} 表示论文不涉密，即不显示密级与保密年限。
% \end{function}
%^^A!   Secret level. \opt{i}, \opt{ii} and \opt{iii} means
%^^A!   ``秘密'' (secret), ``机密'' (confidential) and ``绝密''
%^^A!   (top secret) respectively. \opt{none} means your thesis is
%^^A!   not secret-related and secret level and year will not be
%^^A!   shown.
%^^A! \end{function}
%^^A!
%
% \begin{function}{info/secretyear}
%   \begin{fdusyntax}[emph={[1]secretyear}]
%     secretyear = (*\marg{年限}*)
%   \end{fdusyntax}
%   保密年限。建议您使用中文，如“五年”。该选项在设置
%   \kvopt{secretlevel}{none} 时无效。
% \end{function}
%^^A! \begin{function}{info/secretyear}
%^^A!   \begin{fdusyntax}[emph={[1]secretyear}]
%^^A!     secretyear = (*\marg{year}*)
%^^A!   \end{fdusyntax}
%^^A!   Secret year. It's recommended to use Chinese word as ``五年''
%^^A!   (5 years) here. This option is invalid if you have set
%^^A!   \kvopt{secretlevel}{none}.
%^^A! \end{function}
%^^A!
%
% \begin{function}{info/instructors}
%   \begin{fdusyntax}[emph={[1]instructors}]
%     instructors = (*\marg{成员 1, 成员 2, ...}*)
%   \end{fdusyntax}
%   指导小组成员。各成员之间需使用英文逗号隔开。为防止歧义，
%   可以用分组括号“|{...}|”把各成员字段括起来。
% \end{function}
%^^A! \begin{function}{info/instructors}
%^^A!   \begin{fdusyntax}[emph={[1]instructors}]
%^^A!     instructors = (*\marg{member 1, member 2, ...}*)
%^^A!   \end{fdusyntax}
%^^A!   Instructors' name. Each name should be separated with
%^^A!   comma. To disambiguate, you may put text containing comma
%^^A!   into a group ``|{...}|''.
%^^A! \end{function}
%^^A!
%
% \begin{function}{info/keywords,info/keywords*}
%   \begin{fdusyntax}[emph={[1]keywords,keywords*}]
%     keywords  = (*\marg{中文关键字}*)
%     keywords* = (*\marg{英文关键字}*)
%   \end{fdusyntax}
%   关键字列表。各关键字之间需使用英文逗号隔开。为防止歧义，
%   可以用分组括号“|{...}|”把各字段括起来。
% \end{function}
%^^A! \begin{function}{info/keywords,info/keywords*}
%^^A!   \begin{fdusyntax}[emph={[1]keywords,keywords*}]
%^^A!     keywords  = (*\marg{keywords in Chinese}*)
%^^A!     keywords* = (*\marg{keywords in English}*)
%^^A!   \end{fdusyntax}
%^^A!   Keywords list. Each keyword should be separated with comma.
%^^A!   To disambiguate, you may put text containing comma into a
%^^A!   group ``|{...}|''.
%^^A! \end{function}
%^^A!
%
% \begin{function}{info/clc}
%   \begin{fdusyntax}[emph={[1]clc}]
%     clc = (*\marg{分类号}*)
%   \end{fdusyntax}
%   中图分类号（CLC）。
% \end{function}
%^^A! \begin{function}{info/clc}
%^^A!   \begin{fdusyntax}[emph={[1]clc}]
%^^A!     clc = (*\marg{classification codes}*)
%^^A!   \end{fdusyntax}
%^^A!   Chinese Library Classification (CLC).
%^^A! \end{function}
%^^A!
%
% \subsection{正文编写}
%^^A! \subsection{Writing your thesis}
%^^A!
%
% \begin{quote*}[喬孟符][宋]
%   作樂府亦有法，曰\CJKunderdot{鳳頭豬肚豹尾}六字是也。
%   大概起要美麗，中要浩蕩，結要響亮。尤貴在首尾貫穿，意思清新。
%   茍能若是，斯可以言樂府矣。
% \end{quote*}
%
% \subsubsection{凤头}
%^^A! \subsubsection{Front matter}
%^^A!
%
% \begin{function}{\frontmatter}
%   声明前置部分开始。
% \end{function}
%^^A! \begin{function}{\frontmatter}
%^^A!   Declare the beginning of front matter.
%^^A! \end{function}
%^^A!
%
% 在本模板中，前置部分包含目录、中英文摘要以及符号表等。
% 前置部分的页码采用小写罗马字母，并且与正文分开计数。
%^^A! In \cls{fduthesis}, front matter contains table of contents,
%^^A! abstracts and notation list. The page numbers in front matter
%^^A! will be shown in lowercase Roman number, and will be counted
%^^A! separately with main matter.
%
% \begin{function}{\tableofcontents}
%   生成目录。为了生成完整、正确的目录，您至少需要编译\emph{两次}。
% \end{function}
%
% \begin{function}{abstract}
%   \begin{fdusyntax}[emph={[2]abstract}]
%     % 中文论文模板 (fduthesis)      % 英文论文模板 (fduthesis-en)
%     \begin{abstract}                \begin{abstract}
%       (*\meta{中文摘要} \hspace{3.52cm} \meta{Abstract}*)
%     \end{abstract}                  \end{abstract}
%   \end{fdusyntax}
% \end{function}
% \begin{function}[rEXP]{abstract*}
%   \begin{fdusyntax}[emph={[2]abstract*}]
%     % 中文论文模板 (fduthesis)
%     \begin{abstract*}
%       (*\meta{English abstract}*)
%     \end{abstract*}
%   \end{fdusyntax}
%   摘要。中文模板中，不带星号和带星号的版本分别用来输入中文摘要
%   和英文摘要；英文模板中没有带星号的版本，您只需输入英文摘要。
% \end{function}
%
% 摘要的最后，会显示关键字列表以及中图分类号（CLC）。
% 这两项可通过 \cs{fdusetup} 录入，具体
% 请参阅 \ref{subsubsec:信息录入}~节。
%
% \begin{function}{notation}
%   \begin{fdusyntax}[emph={[2]notation}]
%     \begin{notation}(*\oarg{列格式说明}*)
%       (*\meta{符号 1}*)  &  (*\meta{说明}*)  \\
%       (*\meta{符号 2}*)  &  (*\meta{说明}*)  \\
%               (*$\vdots$*)
%       (*\meta{符号 $n$}*)  &  (*\meta{说明}*)
%     \end{notation}
%   \end{fdusyntax}
%   符号表。可选参数“列格式说明”与 \LaTeX 中标准表格的列格式说明
%   语法一致，默认值为“|l p{7.5 cm}|”，即第一列宽度自动调整，
%   第二列限宽 \SI{7.5}{cm}，两列均为左对齐。
% \end{function}
%
% \subsubsection{猪肚}
%^^A! \subsubsection{Main matter}
%^^A!
%
% \begin{function}{\mainmatter}
%   声明主体部分开始。
% \end{function}
%
% 主体部分是论文的核心，您可以分章节撰写。如有需求，也可以采用
% 多文件编译的方式。主体部分的页码采用阿拉伯数字。
%
% \begin{function}{\footnote}
%   \begin{fdusyntax}[deletetexcs={\footnote},%
%       morekeywords={\footnote}]
%     \footnote(*\marg{脚注文字}*)
%   \end{fdusyntax}
%   插入脚注。脚注编号样式可利用 \opt{style/footnotestyle} 选项控制，
%   具体见 \ref{subsubsec:论文格式}~小节。
% \end{function}
%
% \begin{function}{axiom,corollary,definition,example,lemma,
%   proof,theorem}
%   \begin{fdusyntax}[emph={[2]proof}]
%     \begin{proof}
%       (*\meta{证明过程}*)
%     \end{proof}
%   \end{fdusyntax}
%   一系列预定义的数学环境。具体含义见表~\ref{tab:theorem}。
% \end{function}
%
% \begin{table}[ht]
%   \caption{预定义的数学环境} \label{tab:theorem}
%   \centering
%   \begin{tabular}{cccccccc}
%     \toprule
%     \textbf{名称} &
%       \env{axiom}   & \env{corollary} & \env{definition} &
%       \env{example} & \env{lemma}     & \env{proof}      &
%       \env{theorem} \\
%     \midrule
%     \textbf{含义} &
%       公理 & 推论 & 定义 & 例 & 引理 & 证明 & 定理 \\
%     \bottomrule
%   \end{tabular}
% \end{table}
%
% 证明环境（\env{proof}）的最后会添加证毕符号“$\QED$”。要确保
% 该符号在正确的位置显示，您需要按照 \ref{subsec:编译方式}~节
% 中的有关说明编译\emph{两次}。
%
% \begin{function}{\caption}
%   \begin{fdusyntax}[deletetexcs={\caption},morekeywords={\caption}]
%     \caption(*\marg{图表标题}*)
%     \caption(*\oarg{短标题}\marg{长标题}*)
%   \end{fdusyntax}
%   插入图表标题。可选参数 \meta{短标题} 用于图表目录。在
%   \meta{长标题} 中，您可以进行长达多段的叙述；但 \meta{短标题}
%   和单独的 \meta{图表标题} 中则不允许分段。
%   \scite{刘海洋2013latex入门}
% \end{function}
%
% 按照排版惯例，建议您将表格的标题放置在绘制表格的命令之前，
% 而将图片的标题放置在绘图或插图的命令之后。另需注意，
% \tn{caption} 命令必须放置在浮动体环境（如 \env{table} 和
% \env{figure}）中。
%
% \subsubsection{豹尾}
%^^A! \subsubsection{Back matter}
%^^A!
%
% \begin{function}{\backmatter}
%   声明后置部分开始。
% \end{function}
%
% 后置部分包含声明页。目前无需开启该部分。
%
% \section{宏包依赖情况}
%^^A! \section{Packages dependencies}
%^^A!
%
% 使用不同编译方式、指定不同选项，会导致宏包依赖情况有所不同。
% 具体如下：
% \begin{itemize}
%   \item 在任何情况下，本模板都会\emph{显式}调用以下宏包
%     （或文档类）：
%     \begin{itemize}
%       \item \pkg{expl3}、\pkg{xparse} 和 \pkg{l3keys2e}，用于
%         构建 \LaTeX3 编程环境 \scite{interfaces3,source3}。
%         它们分属 \pkg{l3kernel} 和 \pkg{l3packages} 宏集。
%       \item \cls{book} 文档类，是 \LaTeXe{} 的标准文档类之一
%         \scite{source2e}。
%       \item \pkg{fontspec}，提供新一代的字体设置界面。
%       \item \pkg{ctex}，提供中文排版的通用框架。属于 \CTeX{}
%         宏集 \scite{CTeX}。
%       \item \pkg{amsmath}，对 \LaTeX{} 的数学排版功能进行了
%         全面扩展。属于 \AmSLaTeX{} 套件。
%       \item \pkg{unicode-math}，负责处理 Unicode 编码的
%         OpenType 数学字体。
%       \item \pkg{geometry}，用于调整页面尺寸。
%       \item \pkg{fancyhdr}，处理页眉页脚。
%       \item \pkg{footmisc}，处理脚注。
%       \item \pkg{ntheorem}，提供增强版的定理类环境。
%       \item \pkg{graphicx}，提供图形插入的接口。
%       \item \pkg{longtable}，长表格（允许跨页）支持。
%       \item \pkg{caption}，用于设置题注。
%       \item \pkg{xcolor}，提供彩色支持。
%       \item \pkg{hyperref}，提供 PDF 超链接等电子文档功能。
%     \end{itemize}
%   \item 开启 \kvopt{style/footnotestyle}{pifont} 选项后，会调用
%     \pkg{pifont} 宏包。它属于 \pkg{psnfss} 套件。
% \end{itemize}
%
% 这里只列出了本模板直接调用的宏包。这些宏包自身的调用情况，
% 此处不再具体展开。如有需要，请参阅相关文档。
%
% \input{fduthesis.bbl}
%
% \clearpage
%
%^^A! \IndexLayout
%^^A! \PrintIndex
%^^A!
%
%^^A! \end{document}
%
% \end{documentation}
%
%^^A \EnableImplementation
%^^A \DisableImplementation
%
% \begin{implementation}
%
%^^A 代码部分的页边距
% \newgeometry{
%   left   = 2.25 in,
%   right  = 1.00 in,
%   top    = 1.25 in,
%   bottom = 1.00 in
% }
%
% \section{实现细节}
%
% 本模板使用 \LaTeX3 语法编写，依赖 \pkg{expl3} 环境，
% 并需调用 \pkg{l3packages} 中的相关宏包。
%
% 按照 \LaTeX3 语法，代码中的空格、换行、回车与制表符完全忽略，
% 而下划线“|_|”和冒号“|:|”则可作为一般字母使用。
% 正常的空格可以使用“|~|”代替；至于 |~| 原来所表示的“带子”，
% 则要用 \LaTeXe{} 的原始命令 \tn{nobreakspace} 代替。
%
% 以下代码中有一些形如 \textcolor[HTML]{2E3191}^^A
% {\textsf{\textlangle *class\textrangle}} 的标记，这是
% \pkg{DocStrip} 中的“guard”，用来选择性地提取文件。
% “\textsf{*}”和“\textsf{/}”分别表示该部分的开始和结束。不含
% “\textsf{*}”和“\textsf{/}”的 guard 出现在行号右侧，它们用来确定
% 单独一行代码的归属。这些 guard 的颜色深浅不一，用以明确嵌套关系。
%
% 另有若干形如 \textcolor{MaterialPink}^^A
% {\textsf{\textlangle @@=fdu\textrangle}} 的 guard ，它们由
% \pkg{l3docstrip} 定义，用来指示名字空间（模块）。
%
% \subsection{准备}
%
%    \begin{macrocode}
%<@@=fdu>
%<*class|class-en>
%    \end{macrocode}
%
% 目前 \cls{fduthesis} 仅支持 \XeTeX{} 和 \LuaTeX{}。
%    \begin{macrocode}
\msg_new:nnn { fduthesis } { unsupported-engine }
  {
    The~ fduthesis~ class~ requires~ either~ XeTeX~ or~ LuaTeX. \\\\
    "#1"~ is~ not~ supported~ at~ present.~ You~ must~ change \\
    your~ typesetting~ engine~ to~ "xelatex"~ or~ "lualatex".
  }
\sys_if_engine_xetex:F
  {
    \sys_if_engine_luatex:F
      {
        \msg_fatal:nnx { fduthesis } { unsupported-engine }
          { \c_sys_engine_str }
      }
  }
%    \end{macrocode}
%
% 检查 \LaTeX3 编程环境。
%    \begin{macrocode}
\RequirePackage { xparse, l3keys2e }
\msg_new:nnn { fduthesis } { l3-too-old }
  {
    Package~ "#1"~ is~ too~ old. \\\\
    Please~ update~ an~ up-to-date~ version~ of~ the~ bundles \\
    "l3kernel"~ and~ "l3packages"~ using~ your~ TeX~ package \\
    manager~ or~ from~ CTAN.
  }
\clist_map_inline:nn { expl3, xparse, l3keys2e }
  {
    \@ifpackagelater {#1} { 2017/07/19 }
      { } { \msg_error:nnn { fduthesis } { l3-too-old } {#1} }
  }
%    \end{macrocode}
%
% \subsubsection{内部变量声明}
%
% \begin{variable}[int]{\l_@@_tmpa_box,
%   \l_@@_tmpa_dim,\l_@@_tmpb_dim,
%   \l_@@_tmpa_tl,\l_@@_tmpb_tl,
%   \l_@@_tmpa_clist,\l_@@_tmpb_clist}
% 临时变量。
%    \begin{macrocode}
\box_new:N   \l_@@_tmpa_box
\dim_new:N   \l_@@_tmpa_dim
\dim_new:N   \l_@@_tmpb_dim
\tl_new:N    \l_@@_tmpa_tl
\tl_new:N    \l_@@_tmpb_tl
\clist_new:N \l_@@_tmpa_clist
\clist_new:N \l_@@_tmpb_clist
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\g_@@_to_book_clist,
%   \g_@@_to_hyperref_clist}
% 分别保存由 \cls{fduthesis} 传入 \cls{book} 文档类和
% \pkg{hyperref} 宏包的选项列表。
%    \begin{macrocode}
\clist_new:N \g_@@_to_book_clist
\clist_new:N \g_@@_to_hyperref_clist
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\g_@@_twoside_bool}
% 是否开启双页模式（默认打开）。
%    \begin{macrocode}
\bool_new:N \g_@@_twoside_bool
\bool_set_true:N \g_@@_twoside_bool
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\g_@@_draft_bool}
% 是否开启草稿模式。
%    \begin{macrocode}
\bool_new:N \g_@@_draft_bool
%    \end{macrocode}
% \end{variable}
%
% \subsubsection{内部函数}
%
% \begin{macro}[int]{\@@_quad:,\@@_qquad:}
% 等价于 \LaTeXe{} 中的 \tn{quad} 和 \tn{qquad}。
%    \begin{macrocode}
\cs_new:Npn \@@_quad:  { \skip_horizontal:n { 1 em } }
\cs_new:Npn \@@_qquad: { \skip_horizontal:n { 2 em } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_symbol:n}
% 等价于 \LaTeXe{} 中的 \tn{symbol}。
%    \begin{macrocode}
\cs_new:Npn \@@_symbol:n #1 { \tex_char:D #1 \scan_stop: }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_patch_cmd:Nnn,\@@_appto_cmd:Nn}
% 补丁工具，来自 \pkg{ctexpatch} 宏包。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_patch_cmd:Nnn #1#2#3
  {
    \ctex_patch_cmd_once:NnnnTF #1 { } {#2} {#3}
      { } { \ctex_patch_failure:N #1 }
  }
\cs_new_protected:Npn \@@_appto_cmd:Nn #1#2
  {
    \ctex_appto_cmd:NnnTF #1 { } {#2}
      { } { \ctex_patch_failure:N #1 }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[aux]{\@@_def_fn_style:nn,\@@_def_punct:nn,
%   \@@_def_name:nn}
% 用来定义脚注样式、标点、默认名称的辅助函数。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_def_fn_style:nn #1#2
  { \tl_const:cn { c_@@_fn_style_ #1 _tl } {#2} }
\cs_new_protected:Npn \@@_def_punct:nn #1#2
  { \tl_const:cn { c_@@_ #1 _tl } { \@@_symbol:n {#2} } }
\cs_new_protected:Npn \@@_def_name:nn #1#2
  { \tl_const:cn { c_@@_def_name_ #1 _tl } {#2} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_msg_new:nn,
%   \@@_error:n,\@@_error:nn,\@@_error:nnn,\@@_warning:n}
% 各种信息函数的缩略形式。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_msg_new:nn { \msg_new:nnn    { fduthesis } }
\cs_new_protected:Npn \@@_error:n    { \msg_error:nn   { fduthesis } }
\cs_new_protected:Npn \@@_error:nn   { \msg_error:nnn  { fduthesis } }
\cs_new_protected:Npn \@@_error:nnn  { \msg_error:nnnn { fduthesis } }
\cs_new_protected:Npn \@@_warning:n  { \msg_warning:nn { fduthesis } }
%    \end{macrocode}
% \end{macro}
%
% \subsection{选项处理}
%
% 定义 |fdu/option| 键值类。
%    \begin{macrocode}
\keys_define:nn { fdu / option }
  {
%    \end{macrocode}
%
% \begin{macro}{oneside,twoside}
% 设置页面类型为单面或双面。
%    \begin{macrocode}
    oneside .value_forbidden:n = true,
    twoside .value_forbidden:n = true,
    oneside .code:n =
      {
        \clist_gput_right:Nn \g_@@_to_book_clist { oneside }
        \bool_set_false:N    \g_@@_twoside_bool
      },
    twoside .code:n =
      {
        \clist_gput_right:Nn \g_@@_to_book_clist { twoside }
        \bool_set_true:N     \g_@@_twoside_bool
      },
%    \end{macrocode}
% \end{macro}
%
% \changes{v0.5}{2017/09/23}{移除 \opt{nofonts} 选项。}
%
% \begin{macro}{draft}
% 是否开启草稿模式（默认关闭）。
%    \begin{macrocode}
    draft .choice:,
    draft / true  .code:n =
      {
        \bool_set_true:N     \g_@@_draft_bool
        \clist_gput_right:Nn \g_@@_to_book_clist { draft }
      },
    draft / false .code:n =
      { \bool_set_false:N    \g_@@_draft_bool },
    draft .default:n = true,
    draft .initial:n = false,
%    \end{macrocode}
% \end{macro}
%
% 处理未知选项。
%    \begin{macrocode}
    unknown .code:n = { \@@_error:n { unknown-option } }
  }
\@@_msg_new:nn { unknown-option }
  { Class~ option~ "\l_keys_key_tl"~ is~ unknown. }
%    \end{macrocode}
%
% 将文档类选项传给 |fdu/option|。
%    \begin{macrocode}
\ProcessKeysOptions { fdu / option }
%    \end{macrocode}
%
% \subsection{载入宏包、文档类}
%
% 载入 \cls{book} 标准文档类，并传入相应的选项。
%    \begin{macrocode}
\PassOptionsToClass { \g_@@_to_book_clist } { book }
\LoadClass { book }
%    \end{macrocode}
%
% 载入参数配置文件。
%    \begin{macrocode}
\file_input:n { fduthesis.def }
\file_input:n { fduthesis-user.def }
%    \end{macrocode}
%
% \XeLaTeX{} 和 \LuaLaTeX{} 下的字体选取。\opt{no-math} 选项保证该
% 宏包不参与数学字体的设置。
%    \begin{macrocode}
\RequirePackage [ no-math ] { fontspec }
%    \end{macrocode}
%
% 中文排版支持。使用 \XeLaTeX{} 编译时，底层将调用 \pkg{xeCJK} 宏包；
% 使用 \LuaLaTeX{} 编译时，底层则将调用 \pkg{LuaTeX-ja} 宏包。
% TODO(20170722): 英文模板中文字体的处理。
%    \begin{macrocode}
\RequirePackage
  [
    UTF8,
%<class-en>    scheme     = plain,
    heading    = true,
%<class>    fontset    = none,
%<class-en>    fontset    = fandol,
    zihao      = \c_@@_def_font_size_tl,
%<class>    linespread = \c_@@_def_line_spread_fp
  ]
  { ctex }
%    \end{macrocode}
%
% \pkg{amsmath} 必须在 \pkg{unicode-math} 之前引入。
%    \begin{macrocode}
\RequirePackage { amsmath }
%    \end{macrocode}
%
% 支持 Unicode 编码的 OpenType 数学字体。根据 GB 3102.11--93 以及
% ISO 80000-2:2009 的规定，数学表达式中表示变量的拉丁字母和希腊
% 字母均应当使用斜体。
%    \begin{macrocode}
\RequirePackage [math-style = ISO, bold-style = ISO] { unicode-math }
%    \end{macrocode}
%
% 设置页面尺寸与页眉页脚。
%    \begin{macrocode}
\RequirePackage { geometry, fancyhdr }
%    \end{macrocode}
%
% 处理脚注。\opt{perpage} 选项将使脚注编号每页清零。
%    \begin{macrocode}
\RequirePackage [ perpage ] { footmisc }
%    \end{macrocode}
%
% 定理环境。
%    \begin{macrocode}
\RequirePackage [ amsmath, thmmarks ] { ntheorem }
%    \end{macrocode}
%
% 插图、表格与浮动体控制。
%    \begin{macrocode}
\RequirePackage { graphicx }
\RequirePackage { longtable }
\RequirePackage { caption }
%    \end{macrocode}
%
% 参考文献。
%    \begin{macrocode}
\RequirePackage [ sort & compress ] { natbib }
%    \end{macrocode}
%
% \changes{v0.4}{2017/08/13}{提供彩色支持。}
%
% 提供彩色支持。
%    \begin{macrocode}
\RequirePackage { xcolor }
%    \end{macrocode}
%
% \begin{macro}[int]{\@@_check_package:nnn}
% 检查过时宏包。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_check_package:nnn #1#2#3
  {
    \@ifpackagelater {#1} {#2}
      { } { \@@_error:nnn { package-too-old } {#1} {#3} }
  }
\@@_msg_new:nn { package-too-old }
  {
    Package~ "#1"~ is~ too~ old. \\
    The~ fduthesis~ class~ only~ supports~ "#1"~ with~ a~ version \\
    higher~ than~ v#2. \\\\
    Please~ update~ an~ up-to-date~ version~ of~ it~ using~ your \\
    TeX~ package~ manager~ or~ from~ CTAN.
  }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\@@_check_package:nnn { ctex         } { 2017/08/07 } { 2.4.10 }
\@@_check_package:nnn { fontspec     } { 2017/09/22 } { 2.6e   }
\@@_check_package:nnn { unicode-math } { 2017/11/18 } { 0.8i   }
\sys_if_engine_xetex:T
  { \@@_check_package:nnn { xeCJK } { 2017/08/07 } { 3.5.0 } }
%    \end{macrocode}
%
% \subsection{页面布局}
%
% 利用 \pkg{geometry} 宏包设置纸张大小、页面边距以及页眉高度。
%    \begin{macrocode}
\geometry
  {
    paper      = \c_@@_def_paper_size_tl,
    top        = \c_@@_def_page_margin_top_dim,
    bottom     = \c_@@_def_page_margin_bottom_dim,
    left       = \c_@@_def_page_margin_left_dim,
    right      = \c_@@_def_page_margin_right_dim,
    headheight = \c_@@_def_header_height_dim
  }
%    \end{macrocode}
%
% 草稿模式下显示页面边框及页眉、页脚线 。
%    \begin{macrocode}
\bool_if:NT \g_@@_draft_bool
  { \geometry { showframe } }
%    \end{macrocode}
%
% \subsection{字体}
%
% \changes{v0.5}{2017/09/09}{重新实现字体调用。核心内容是分离
%   字体的声明与设定，并按照宋、黑、仿、楷划分中文字体。}
%
% 为了避免不必要的字体调用开销
% \footnote{事实上，此处的修正对性能的提升并不大。}，
% 本模板把字体的\emph{声明}与\emph{设定}分离了开来。使用
% \cs{fdusetup} 设置的字体选项，以及导言区中通过 \cs{setmainfont}、
% \cs{setCJKmainfont} 等命令设置的字体，均按照字体\emph{声明}处理。
% 此时，字体名及其选项被存入相关变量中，但不进行实际调用。导言区
% 末尾，再进行统一调用。本模板将重新定义 \cs{setmainfont}、
% \cs{setCJKmainfont} 等命令。
%
% 对于中文字体，\pkg{ctex} 宏包及其底层 \pkg{xeCJK} 和
% \pkg{LuaTeX-ja}，均与 \pkg{fontspec} 保持一致，以
% |main|、|sans|、|mono| 三类进行划分；而本模板则按照
% 宋、黑、仿、楷等进行划分。为此，需要额外建立二者之间的对应关系。
%
% \begin{variable}[int]{\g_@@_font_name_prop,
%   \g_@@_font_options_prop}
% 存放西文字体名称及选项。
%    \begin{macrocode}
\prop_new:N \g_@@_font_name_prop
\prop_new:N \g_@@_font_options_prop
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\g_@@_cjk_font_name_prop,
%   \g_@@_cjk_font_options_prop}
% 存放中文字体及选项。
%    \begin{macrocode}
\prop_new:N \g_@@_cjk_font_name_prop
\prop_new:N \g_@@_cjk_font_options_prop
%    \end{macrocode}
% \end{variable}
%
% \subsubsection{选项处理}
%
% 定义 |fdu/style| 键值类。
%    \begin{macrocode}
\keys_define:nn { fdu / style }
  {
%    \end{macrocode}
%
% \begin{macro}{style/font}
% 预定义西文字体。部分等宽字体（TeX Gyre Cursor）使用
% \kvopt{Ligatures}{Common\-Off} 选项以禁用连字。
%    \begin{macrocode}
    font .choice:,
    font .value_required:n = true,
%    \end{macrocode}
% Libertinus 系列。
%    \begin{macrocode}
    font / libertinus .code:n =
      {
        \fdu_choose_font:nn { main } { Libertinus~ Serif }
        \fdu_choose_font:nn { sans } { Libertinus~ Sans  }
        \fdu_choose_font_with_option:nnn { mono }
          { TeX~ Gyre~ Cursor } { Ligatures = Common Off }
        \fdu_choose_font:nn { math } { Libertinus~ Math  }
        \keys_set:nn { fdu / style } { footnotestyle = libertinus }
      },
%    \end{macrocode}
% Latin Modern 系列。
%    \begin{macrocode}
    font / lm .code:n =
      {
        \fdu_choose_font:nn { main } { Latin~ Modern~ Roman }
        \fdu_choose_font:nn { sans } { Latin~ Modern~ Sans  }
        \fdu_choose_font:nn { mono } { Latin~ Modern~ Mono  }
        \fdu_choose_font:nn { math } { Latin~ Modern~ Math  }
        \keys_set:nn { fdu / style } { footnotestyle = pifont }
      },
%    \end{macrocode}
% Palatino 系列。
%    \begin{macrocode}
    font / palatino .code:n =
      {
        \fdu_choose_font:nn { main } { TeX~ Gyre~ Pagella }
        \fdu_choose_font:nn { sans } { TeX~ Gyre~ Heros   }
        \fdu_choose_font_with_option:nnn { mono }
          { TeX~ Gyre~ Cursor } { Ligatures = Common Off }
        \fdu_choose_font:nn { math } { TeX~ Gyre~ Pagella~ Math }
        \keys_set:nn { fdu / style } { footnotestyle = pifont }
      },
%    \end{macrocode}
% \changes{v0.6}{2017/11/11}{额外处理 XITS 字体的小型大写字母。}
% Times Roman 系列。XITS 字体没有小型大写字母，因此使用普通字体代替。
%    \begin{macrocode}
    font / times .code:n =
      {
        \fdu_choose_font_with_option:nnn { main } { XITS }
          {
            UprightFeatures    = { SmallCapsFont = *               },
            BoldFeatures       = { SmallCapsFont = *~ Bold         },
            ItalicFeatures     = { SmallCapsFont = *~ Italic       },
            BoldItalicFeatures = { SmallCapsFont = *~ Bold~ Italic },
          }
%       \fdu_choose_font_with_option:nnn { main } { xits }
%         {
%           Extension          = .otf,
%           UprightFont        = *-regular,
%           BoldFont           = *-bold,
%           ItalicFont         = *-italic,
%           BoldItalicFont     = *-bolditalic,
%           UprightFeatures    = { SmallCapsFont = *-regular    },
%           BoldFeatures       = { SmallCapsFont = *-bold       },
%           ItalicFeatures     = { SmallCapsFont = *-italic     },
%           BoldItalicFeatures = { SmallCapsFont = *-bolditalic },
%         }
        \fdu_choose_font:nn { sans } { TeX~ Gyre~ Heros  }
        \fdu_choose_font_with_option:nnn { mono }
          { TeX~ Gyre~ Cursor } { Ligatures = Common Off }
        \fdu_choose_font:nn { math } { XITS~ Math        }
        \keys_set:nn { fdu / style } { footnotestyle = xits }
      },
%    \end{macrocode}
% \changes{v0.5}{2017/09/23}{新增 \kvopt{font}{none} 选项。}
% 不设置西文字体。
%    \begin{macrocode}
    font / none .code:n =
      {
        \@@_initialize_prop:Nn \g_@@_font_name_prop
          { main, sans, mono, math }
        \@@_initialize_prop:Nn \g_@@_font_options_prop
          { main, sans, mono, math }
        \keys_set:nn { fdu / style } { footnotestyle = plain }
%<*class>
      },
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{style/cjkfont}
% 预定义中文（CJK）字体。Adobe 和中易系列没有粗宋体。
%    \begin{macrocode}
    cjkfont .choice:,
    cjkfont .value_required:n = true,
%    \end{macrocode}
% Adobe 系列。
%    \begin{macrocode}
    cjkfont / adobe .code:n =
      {
        \fdu_choose_cjk_font:nn { song } { Adobe~ Song~     Std }
        \fdu_choose_cjk_font:nn { hei  } { Adobe~ Heiti~    Std }
        \fdu_choose_cjk_font:nn { fang } { Adobe~ Fangsong~ Std }
        \fdu_choose_cjk_font:nn { kai  } { Adobe~ Kaiti~    Std }
      },
%    \end{macrocode}
% Fandol 系列。
%    \begin{macrocode}
    cjkfont / fandol .code:n =
      {
        \fdu_choose_cjk_font_with_option:nnn { song }
          { FandolSong } { BoldFont = FandolSong~ Bold }
        \fdu_choose_cjk_font:nn { hei  } { FandolHei  }
        \fdu_choose_cjk_font:nn { fang } { FandolFang }
        \fdu_choose_cjk_font:nn { kai  } { FandolKai  }
      },
%    \end{macrocode}
% 方正系列。
%    \begin{macrocode}
    cjkfont / founder .code:n =
      {
        \fdu_choose_cjk_font_with_option:nnn { song }
          { FZShuSong-Z01 } { BoldFont = FZXiaoBiaoSong-B05 }
        \fdu_choose_cjk_font:nn { hei  } { FZHei-B01      }
        \fdu_choose_cjk_font:nn { fang } { FZFangSong-Z02 }
        \fdu_choose_cjk_font:nn { kai  } { FZKai-Z03      }
      },
%    \end{macrocode}
% Mac （华文）系列。
%    \begin{macrocode}
    cjkfont / mac .code:n =
      {
        \fdu_choose_cjk_font_with_option:nnn { song }
          { STSong } { BoldFont = STZhongsong }
        \fdu_choose_cjk_font:nn { hei  } { STHeiti    }
        \fdu_choose_cjk_font:nn { fang } { STFangsong }
        \fdu_choose_cjk_font:nn { kai  } { STKaiti    }
      },
%    \end{macrocode}
% Windows （中易）系列。
%    \begin{macrocode}
    cjkfont / windows .code:n =
      {
        \fdu_choose_cjk_font:nn { song } { SimSun   }
        \fdu_choose_cjk_font:nn { hei  } { SimHei   }
        \fdu_choose_cjk_font:nn { fang } { FangSong }
        \fdu_choose_cjk_font:nn { kai  } { KaiTi    }
      },
%    \end{macrocode}
% \changes{v0.5}{2017/09/23}{新增 \kvopt{cjkfont}{none} 选项。}
% 不设置中文字体。
%    \begin{macrocode}
    cjkfont / none .code:n =
      {
        \@@_initialize_prop:Nn \g_@@_cjk_font_name_prop
          { rm, sf, tt, kai }
        \@@_initialize_prop:Nn \g_@@_cjk_font_options_prop
          { rm, sf, tt, kai }
%</class>
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_initialize_prop:Nn}
% 把 |prop-list| 清空，将其并设置为 |main={},| |sans={}| 等。
% \begin{arguments}
%   \item |prop-list|
%   \item {\meta{family 1}, \meta{family 2}, \ldots}，如
%     |{main,| |sans,| |mono,| |math}|
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \@@_initialize_prop:Nn #1#2
  {
    \prop_clear:N #1
    \clist_map_inline:nn {#2} { \prop_put:Nnn #1 {##1} { } }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{字体声明}
%
% 重定义文档命令，使其只声明字体，而不进行实际调用。
%
% \begin{macro}{\setmainfont,\setsansfont,\setmonofont,\setmathfont}
% 声明西文字体。参数按照 \pkg{fontspec} 的风格，字体选项
% 在前在后均可。
%    \begin{macrocode}
\RenewDocumentCommand \setmainfont { O { } m O { } }
  { \fdu_choose_font_with_option:nnn { main } {#2} { #1, #3 } }
\RenewDocumentCommand \setsansfont { O { } m O { } }
  { \fdu_choose_font_with_option:nnn { sans } {#2} { #1, #3 } }
\RenewDocumentCommand \setmonofont { O { } m O { } }
  { \fdu_choose_font_with_option:nnn { mono } {#2} { #1, #3 } }
\RenewDocumentCommand \setmathfont { O { } m O { } }
  { \fdu_choose_font_with_option:nnn { math } {#2} { #1, #3 } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setCJKmainfont,\setCJKsansfont,\setCJKmonofont,
%   \setCJKfamilyfont}
% 声明中文字体。参数同样按照 \pkg{fontspec} 的风格
% \footnote{\pkg{xeCJK} 和 \pkg{ctex} 与之稍有区别，它们要求字体
% 选项只能位于字体名的\emph{前或后}，而不能同时出现（即不允许形如
% \cs{setCJKmainfont}\texttt{\oarg{选项 1}\marg{字体}\oarg{选项 2}}
% 这样的语句）。}。
%    \begin{macrocode}
%<*class>
\RenewDocumentCommand \setCJKmainfont { O { } m O { } }
  { \fdu_choose_cjk_font_with_option:nnn { rm } {#2} { #1, #3 } }
\RenewDocumentCommand \setCJKsansfont { O { } m O { } }
  { \fdu_choose_cjk_font_with_option:nnn { sf } {#2} { #1, #3 } }
\RenewDocumentCommand \setCJKmonofont { O { } m O { } }
  { \fdu_choose_cjk_font_with_option:nnn { tt } {#2} { #1, #3 } }
\RenewDocumentCommand \setCJKfamilyfont { m O { } m O { } }
  { \fdu_choose_cjk_font_with_option:nnn {#1} {#3} { #2, #4 } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\setCJKsongfont,\setCJKheifont,
%   \setCJKfangfont,\setCJKkaifont}
% 声明中文宋、黑、仿、楷字体，暂时不用。
%    \begin{macrocode}
% \DeclareDocumentCommand \setCJKsongfont { O { } m O { } }
%   { \fdu_choose_cjk_font_with_option:nnn { song } {#2} { #1, #3 } }
% \DeclareDocumentCommand \setCJKheifont  { O { } m O { } }
%   { \fdu_choose_cjk_font_with_option:nnn { hei  } {#2} { #1, #3 } }
% \DeclareDocumentCommand \setCJKfangfont { O { } m O { } }
%   { \fdu_choose_cjk_font_with_option:nnn { fang } {#2} { #1, #3 } }
% \DeclareDocumentCommand \setCJKkaifont  { O { } m O { } }
%   { \fdu_choose_cjk_font_with_option:nnn { kai  } {#2} { #1, #3 } }
%</class>
%    \end{macrocode}
% \end{macro}
%
% 字体选择只需将字体名及选项存入相应变量即可。
%
% \begin{macro}[int]{\fdu_choose_font_with_option:nnn,
%   \fdu_choose_font:nn}
% 选择西文字体。
% \begin{arguments}
%   \item |main| / |sans| / |mono| / |math|
%   \item 字体名
%   \item 选项
% \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Npn \fdu_choose_font_with_option:nnn #1#2#3
  {
    \prop_put:Nnn \g_@@_font_name_prop    {#1} {#2}
    \prop_put:Nnn \g_@@_font_options_prop {#1} {#3}
  }
\cs_new_protected:Npn \fdu_choose_font:nn #1#2
  {
    \prop_put:Nnn \g_@@_font_name_prop    {#1} {#2}
    \prop_put:Nnn \g_@@_font_options_prop {#1} {  }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_choose_cjk_font_with_option:nnn,
%   \fdu_choose_cjk_font:nn}
% 选择中文字体。
% \begin{arguments}
%   \item |rm| / |sf| / |tt| 或 |song| / |hei| / |fang| / |kai|
%   \item 字体名
%   \item 选项
% \end{arguments}
%    \begin{macrocode}
\cs_new_protected:Npn \fdu_choose_cjk_font_with_option:nnn #1#2#3
  {
    \prop_put:Nnn \g_@@_cjk_font_name_prop    {#1} {#2}
    \prop_put:Nnn \g_@@_cjk_font_options_prop {#1} {#3}
  }
\cs_new_protected:Npn \fdu_choose_cjk_font:nn #1#2
  {
    \prop_put:Nnn \g_@@_cjk_font_name_prop    {#1} {#2}
    \prop_put:Nnn \g_@@_cjk_font_options_prop {#1} {  }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{字体设定}
%
% 此时需要利用 \pkg{fontspec}、\pkg{unicode-math}、\pkg{xeCJK}、
% \pkg{ctex} 等宏包完成实际的字体调用。会在导言区末尾统一进行。
%
% \begin{macro}[int]{\@@_set_font:}
% 设定西文字体。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_set_font:
  {
    \clist_map_inline:nn { main, sans, mono, math }
      {
        \prop_get:NnN \g_@@_font_name_prop    {##1}
          \l_@@_tmpa_tl
        \prop_get:NnN \g_@@_font_options_prop {##1}
          \l_@@_tmpb_tl
        \tl_if_empty:NT \l_@@_tmpa_tl
          { \@@_error:nn { font-not-defined } {##1} }
        \use:c { @@_set_ ##1 _font:VV }
          \l_@@_tmpa_tl \l_@@_tmpb_tl
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_set_main_font:nn,
%   \@@_set_sans_font:nn,
%   \@@_set_mono_font:nn}
% \changes{v0.5}{2017/09/23}{同步 \pkg{fontspec} v2.6e。}
% 拷贝 \cs{__fontspec_main_setmainfont:nn} 等命令。注意参数顺序
% 是相反的。
% \begin{arguments}
%   \item 字体名
%   \item 选项
% \end{arguments}
%    \begin{macrocode}
\clist_map_inline:nn { main, sans, mono }
  {
    \cs_new:cpx { @@_set_ #1 _font:nn } ##1 ##2
      { \exp_not:c { __fontspec_main_set #1 font:nn } {##2} {##1} }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_set_math_font:nn}
% \changes{v0.6}{2017/10/11}{同步 \pkg{unicode-math} v0.8h。}
% 拷贝 \pkg{unicode-math} 中的 \cs{setmathfont} 命令。参数同上。
%    \begin{macrocode}
\cs_new:Npn \@@_set_math_font:nn #1#2
  { \__um_setmathfont:nn {#2} {#1} }
%    \end{macrocode}
% \end{macro}
%
% 生成字体设定函数的变体。
%    \begin{macrocode}
\clist_map_inline:nn { main, sans, mono, math }
  {
    \exp_args:Nc \cs_generate_variant:Nn
      { @@_set_ #1 _font:nn } { VV }
  }
%    \end{macrocode}
%
% \begin{macro}[int]{\@@_set_cjk_font:}
% 设定中文字体。复杂之处在于需要建立宋、黑、仿、楷到
% |rm| / |sf| / |tt| 的映照，如表~\ref{tab:cjk-font} 所示。
% \begin{table}[ht]
%   \caption{宋、黑、仿、楷到 \texttt{rm} / \texttt{sf} /
%     \texttt{tt} 的映照}
%   \label{tab:cjk-font}
%   \centering
%   \begin{tabular}{ccccc}
%     \toprule
%        & Normal & Bold & Italic & Bold-italic \\
%     \midrule
%       |rm| & 宋体 & [粗宋] /  \textsf{黑体}  & \textit{楷体} & (\textit{粗楷}) \\
%       |sf| & \textsf{黑体} & (\textsf{粗黑}) & \textsf{黑体} &  \textsf{黑体}  \\
%       |tt| & \texttt{仿体} & (\texttt{粗仿}) & \textit{楷体} & (\textit{粗楷}) \\
%     \bottomrule
%   \end{tabular}
% \end{table}
%    \begin{macrocode}
%<*class>
\cs_new_protected:Npn \@@_set_cjk_font:
  {
    \clist_map_inline:nn { rm, sf, tt, kai }
      {
        \use:c { @@_parse_cjk_ ##1 _font: }
        \@@_check_cjk_font:n   {##1}
        \@@_set_cjk_font_aux:n {##1}
      }
%    \end{macrocode}
% 清除冗余键值对。
%    \begin{macrocode}
    \clist_map_inline:nn { song, hei, fang }
      {
        \prop_remove:Nn \g_@@_cjk_font_name_prop    {##1}
        \prop_remove:Nn \g_@@_cjk_font_options_prop {##1}
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}[int]{\l_@@_font_name_tl,\l_@@_font_options_clist}
% 临时存放字体名称和选项。
%    \begin{macrocode}
\tl_new:N    \l_@@_font_name_tl
\clist_new:N \l_@@_font_options_clist
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}[int]{\@@_parse_cjk_rm_font:}
% 解析 |rm| 字体族。未设置 |rm| 字体族（即未调用 \cs{setmainfont}）
% 时，传入 |song| 对应的字体名和选项。|sf| 和 |tt| 字体族的解析
% 基本类似。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_parse_cjk_rm_font:
  {
    \prop_get:NnNF \g_@@_cjk_font_name_prop
      { rm } \l_@@_font_name_tl
      {
        \@@_get_cjk_font_name_options:nn { rm } { song }
%    \end{macrocode}
% 根据 \opt{粗宋/黑} 选项来进行操作。目前暂未定义该选项，利用
% \cs{use_ii:nn} 充当条件判断。使用黑体。
%    \begin{macrocode}
        \use_ii:nn
          {
%    \end{macrocode}
% 粗宋。判断是否定义 \opt{BoldFont}，若未定义，则设置 \opt{BoldFont}
% 为普通宋体。
%    \begin{macrocode}
            \tl_if_in:NnF \l_@@_font_options_clist { BoldFont = }
              {
                \clist_put_right:Nx \l_@@_font_options_clist
                  { BoldFont = \l_@@_font_name_tl }
              }
          }
          {
%    \end{macrocode}
% 黑体。注意右侧选项会覆盖左侧选项。\\
% TODO(2017/09/18): 使用 |hei| 还是 |sans|？
%    \begin{macrocode}
            \prop_get:NnN \g_@@_cjk_font_name_prop { hei }
              \l_@@_tmpa_tl
            \clist_put_right:Nx \l_@@_font_options_clist
              { BoldFont = \l_@@_tmpa_tl }
          }
        \@@_get_cjk_kai_font:
        \@@_set_cjk_font_options:n { rm }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_parse_cjk_sf_font:}
% 解析 |sf| 字体族。未设置 |sf| 字体族（即未调用 \cs{setsansfont}）
% 时，传入 |hei| 对应的字体名和选项。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_parse_cjk_sf_font:
  {
    \prop_get:NnNF \g_@@_cjk_font_name_prop
      { sf } \l_@@_font_name_tl
      {
        \@@_get_cjk_font_name_options:nn { sf } { hei }
%    \end{macrocode}
% 黑体的 \opt{BoldFont}、\opt{ItalicFont}、\opt{BoldItalicFont}
% 都使用普通字体。不需要载入楷体。
%    \begin{macrocode}
        \clist_put_right:Nx \l_@@_font_options_clist
          {
            BoldFont       = \l_@@_font_name_tl,
            ItalicFont     = \l_@@_font_name_tl,
            BoldItalicFont = \l_@@_font_name_tl
          }
        \@@_set_cjk_font_options:n { sf }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_parse_cjk_tt_font:}
% 解析 |tt| 字体族。未设置 |tt| 字体族（即未调用 \cs{setmonofont}）
% 时，传入 |fang| 对应的字体名和选项。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_parse_cjk_tt_font:
  {
    \prop_get:NnNF \g_@@_cjk_font_name_prop
      { tt } \l_@@_font_name_tl
      {
        \@@_get_cjk_font_name_options:nn { tt } { fang }
        \clist_put_right:Nx \l_@@_font_options_clist
          { BoldFont = \l_@@_font_name_tl }
        \@@_get_cjk_kai_font:
        \@@_set_cjk_font_options:n { tt }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_parse_cjk_kai_font:}
% 解析 |kai| 字体族。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_parse_cjk_kai_font:
  {
    \prop_get:NnN \g_@@_cjk_font_name_prop { kai }
      \l_@@_font_name_tl
%    \end{macrocode}
% 与黑体类似，楷体的 \opt{BoldFont}、\opt{ItalicFont}、
% \opt{BoldItalicFont} 也都使用普通字体。
%    \begin{macrocode}
    \clist_set:Nx \l_@@_font_options_clist
      {
        BoldFont       = \l_@@_font_name_tl,
        ItalicFont     = \l_@@_font_name_tl,
        BoldItalicFont = \l_@@_font_name_tl
      }
    \@@_set_cjk_font_options:n { kai }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[aux]{\@@_get_cjk_font_name_options:nn}
% 处理字体名称和选项。字体名存入 \cs{l_@@_font_name_tl}，字体
% 选项存入 \cs{l_@@_font_options_clist}。注意字体名还被存入了
% |prop-list| 中（对应的 \meta{key} = |#1|），但选项则在
% |\__fdu_parse_cjk_..._font:| 的最后才会被存入 |prop-list| 中。
% 因此还需要有 \cs{@@_set_cjk_font_options:n} 来设置选项。
% \begin{arguments}
%   \item |rm| / |sf| / |tt|
%   \item |song| / |hei| / |fang|
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \@@_get_cjk_font_name_options:nn #1#2
  {
    \prop_get:NnN \g_@@_cjk_font_name_prop    {#2}
      \l_@@_font_name_tl
    \prop_put:NnV \g_@@_cjk_font_name_prop    {#1}
      \l_@@_font_name_tl
    \prop_get:NnN \g_@@_cjk_font_options_prop {#2}
      \l_@@_tmpa_tl
    \clist_set:NV \l_@@_font_options_clist \l_@@_tmpa_tl
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[aux]{\@@_get_cjk_kai_font:}
% 补齐斜体、粗斜体（都设置为楷体）。
%    \begin{macrocode}
\cs_new:Npn \@@_get_cjk_kai_font:
  {
    \prop_get:NnN \g_@@_cjk_font_name_prop { kai }
      \l_@@_tmpa_tl
    \clist_put_right:Nx \l_@@_font_options_clist
      {
        ItalicFont     = \l_@@_tmpa_tl,
        BoldItalicFont = \l_@@_tmpa_tl
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[aux]{\@@_set_cjk_font_options:n}
%    \begin{macrocode}
% 设置选项，即把选项存入 |prop-list|，对应 \meta{key} = |#1|。
% |#1| = |rm| / |sf| / |tt|。
\cs_new:Npn \@@_set_cjk_font_options:n #1
  {
    \prop_put:NnV \g_@@_cjk_font_options_prop {#1}
      \l_@@_font_options_clist
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[aux]{\@@_check_cjk_font:n}
% 检查 CJK 字体族是否已定义。
% |#1| = |rm| / |sf| / |tt|。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_check_cjk_font:n #1
  {
    \prop_get:NnN \g_@@_cjk_font_name_prop {#1}
      \l_@@_font_name_tl
    \tl_if_empty:NT \l_@@_font_name_tl
      { \@@_error:nn { cjk-font-not-defined } {#1} }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\xeCJK_set_family:nVV,
%   \ctex_ltj_set_family:nVV}
% 生成 \pkg{xeCJK} 和 \pkg{ctex} 中字体族设定函数的变体。
% 由于 \cs{@@_set_cjk_font_aux:nnnn} 使用了
% \cs{cs_new_protected:Npx} 定义，因此必须在它之前给出变体形式。
%    \begin{macrocode}
\cs_generate_variant:Nn \xeCJK_set_family:nnn    { nVV }
\cs_generate_variant:Nn \ctex_ltj_set_family:nnn { nVV }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[aux]{\@@_set_cjk_font_aux:n}
% 利用 \pkg{xeCJK} 或 \pkg{ctex-ltj} 调用字体，需按照引擎的不同
% 分别处理。使用 |Npx| 型来定义是为了在定义时直接确定引擎，以避开
% 调用时的判断。
% |#1| = |rm| / |sf| / |tt|。
%    \begin{macrocode}
\cs_new_protected:Npx \@@_set_cjk_font_aux:n #1
  {
    \prop_get:NnN \exp_not:N \g_@@_cjk_font_name_prop    {#1}
      \exp_not:N \l_@@_tmpa_tl
    \prop_get:NnN \exp_not:N \g_@@_cjk_font_options_prop {#1}
      \exp_not:N \l_@@_tmpb_tl
    \sys_if_engine_xetex:TF
      { \xeCJK_set_family:nVV }
      { \sys_if_engine_luatex:T { \ctex_ltj_set_family:nVV } }
    {#1} \exp_not:n { \l_@@_tmpb_tl \l_@@_tmpa_tl }
  }
%</class>
%    \end{macrocode}
% \end{macro}
%
% 字体族未定义信息。
%    \begin{macrocode}
\@@_msg_new:nn { font-not-defined }
  {
    \str_upper_case:f { \tl_head:n {#1} } \tl_tail:n {#1} ~
    font~ is~ not~ defined. \\\\
    You~ can~ set~ option~ "font"~ via~ "\string\fdusetup",~
    or~ use~ command~ \\
    "\string\set #1 font"~ to~ define~ new~ font~ families.
  }
%<*class>
\@@_msg_new:nn { cjk-font-not-defined }
  {
    CJK~ font~ family~ "#1"~ is~ not~ defined. \\\\
    You~ can~ set~ option~ "cjkfont"~ via~ "\string\fdusetup",~
    or~ use~ commands~ \\
    "\string\setCJKmainfont",~ "\string\setCJKsansfont"~ or~
    "\string\setCJKmonofont",~ etc~ \\
    to~ define~ new~ CJK~ font~ families.
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\sys_if_engine_xetex:T
  {
%    \end{macrocode}
% 这里给这两个 |prop-list| 变量赋一个空值，使得 \pkg{xeCJK} 认为
% |rm| 字体族已定义，从而避免警告。\LuaTeX{} 引擎下，
% \pkg{ctex-ltj} 不会给出警告，暂且不管。
%    \begin{macrocode}
    \prop_put:Nnn \g__xeCJK_family_font_name_prop { rm } { }
    \prop_put:Nnn \g__xeCJK_family_name_prop      { rm } { }
%    \end{macrocode}
% 关闭 \pkg{xeCJK} 中重定义字体族的警告。
%    \begin{macrocode}
    \msg_redirect_name:nnn { xeCJK } { CJKfamily-redef } { none }
  }
%</class>
%    \end{macrocode}
%
% 在导言区末尾载入字体。
%    \begin{macrocode}
\ctex_at_end_preamble:n
  {
    \@@_set_font:
%<class>    \@@_set_cjk_font:
  }
%    \end{macrocode}
%
% \subsubsection{字体切换（楷体）}
%
% 一般情况下，楷体被用作中文斜体。但有时需要保持西文部分不被倾斜，
% 因此需要额外定义楷体切换命令。
%
% \begin{macro}[int,TF]{\fdu_family_if_exist:n}
% \changes{v0.4}{2017/08/10}{修复 \LuaTeX{} 下的展开错误。}
% 判断字体族是否存在。
% \XeTeX{} 引擎下直接利用 \pkg{xeCJK} 宏包提供的函数。
%    \begin{macrocode}
%<*class>
\sys_if_engine_xetex:TF
  {
    \prg_new_protected_conditional:Npnn
      \fdu_family_if_exist:n #1 { TF }
      {
        \xeCJK_family_if_exist:nTF {#1}
          { \prg_return_true: } { \prg_return_false: }
      }
  }
  {
%    \end{macrocode}
% \LuaTeX{} 引擎下需要利用 \pkg{ctex} 宏包提供的函数。这两个函数
% 的参数略有不同。
%    \begin{macrocode}
    \sys_if_engine_luatex:T
      {
        \prg_new_protected_conditional:Npnn
          \fdu_family_if_exist:n #1 { TF }
          {
            \ctex_ltj_family_if_exist:nNTF {#1} \l_@@_tmpa_tl
              { \prg_return_true: } { \prg_return_false: }
          }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\fdu_cjk_font_kai:}
% 楷体切换命令。
%    \begin{macrocode}
\cs_new_protected:Npx \fdu_cjk_font_kai:
  {
    \fdu_family_if_exist:nTF { kai }
      {
        \sys_if_engine_xetex:TF
          { \xeCJK_switch_family:n { kai } }
          {
            \sys_if_engine_luatex:T
              { \ctex_ltj_switch_family:n { kai } }
          }
      }
      { \exp_not:n { \rmfamily \itshape } }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\fdu@kai}
% 命令 \cs{fdu_cjk_font_kai:} 采用 \LaTeX3 风格，在 \file{.toc}
% 文件里无法正常使用，因此重新定义为 \LaTeXe{} 风格的命令。
%    \begin{macrocode}
\cs_new_eq:NN \fdu@kai \fdu_cjk_font_kai:
%</class>
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{字号}
%
%    \begin{macrocode}
\keys_define:nn { fdu / style }
  {
%    \end{macrocode}
%
% \begin{macro}{style/fontsize}
% |fontsize| 不是文档类选项，不能传给 \pkg{ctex} 宏包
% 或者 \cls{book} 文档类，因此只能手动重定义字号命令。
%    \begin{macrocode}
    fontsize .choice:,
    fontsize .value_required:n = true,
    fontsize / -4 .code:n = { },
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\tiny,\scriptsize,\footnotesize,\small,
%   \normalsize,\large,\Large,\LARGE,\huge,\Huge}
% 默认使用小四号字，所以只有五号字需要重新设置。
%    \begin{macrocode}
    fontsize /  5 .code:n =
      {
        \RenewDocumentCommand \tiny         { } { \zihao {  7 } }
        \RenewDocumentCommand \scriptsize   { } { \zihao { -6 } }
        \RenewDocumentCommand \footnotesize { } { \zihao {  6 } }
        \RenewDocumentCommand \small        { } { \zihao { -5 } }
        \RenewDocumentCommand \normalsize   { } { \zihao {  5 } }
        \RenewDocumentCommand \large        { } { \zihao { -4 } }
        \RenewDocumentCommand \Large        { } { \zihao { -3 } }
        \RenewDocumentCommand \LARGE        { } { \zihao { -2 } }
        \RenewDocumentCommand \huge         { } { \zihao {  2 } }
        \RenewDocumentCommand \Huge         { } { \zihao {  1 } }
%<class-en>      }
%<class-en>  }
%<*class>
      },
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{句号}
%
% \begin{macro}{style/fullwidthstop}
% \changes{v0.6}{2017/10/14}{支持类别码和 TECKit 映射两种机制。}
% 设置句号形状（圆圈或是圆点）。
%    \begin{macrocode}
    fullwidthstop .choice:,
    fullwidthstop .value_required:n = true,
%    \end{macrocode}
% 利用类别码机制切换，只有显式的\FSID 会被替换。
%    \begin{macrocode}
    fullwidthstop / catcode .code:n =
      { \@@_set_fullwidth_stop_catcode: },
%    \end{macrocode}
% 利用 TECKit 映射机制切换，相当于设置了 \tn{defaultCJKfontfeatures}
% |{|\kvopt{Map\-ping}{fullwidth-stop}|}|。这种手段会
% 替换所有出现的\FSID，并且将影响所有字体。只在 \XeTeX{}
% 下可用。
%    \begin{macrocode}
    fullwidthstop / mapping .code:n =
      {
        \sys_if_engine_xetex:TF
          {
            \clist_gset:Nn \g__xeCJK_default_features_clist
              { Mapping = fullwidth-stop }
          }
          {
%    \end{macrocode}
% \LuaTeX{} 下改用类别码机制代替，并给出警告。
%    \begin{macrocode}
            \sys_if_engine_luatex:T
              {
                \@@_warning:n { mapping-not-available }
                \@@_set_fullwidth_stop_catcode:
              }
          }
      },
    fullwidthstop / false .code:n = { }
  }
%    \end{macrocode}
% \end{macro}
%
% 提示信息。
%    \begin{macrocode}
\@@_msg_new:nn { mapping-not-available }
  {
    Option~ "fullwidthstop = mapping"~ is~ not~ available~ in~
    LuaTeX. \\
    "fullwidthstop = catcode"~ will~ be~ set~ instead.
  }
%    \end{macrocode}
%
% \begin{macro}[int]{\@@_set_fullwidth_stop_catcode:}
% 将\FSID 设置为活动符，并定义为句点\FSFW。
%    \begin{macrocode}
\cs_new:Npn \@@_set_fullwidth_stop_catcode:
  {
    \char_set_active_eq:nN { "3002 } \c_@@_fullwidth_full_stop_tl
    \char_set_catcode_active:n { "3002 }
  }
%</class>
%    \end{macrocode}
% \end{macro}
%
% \changes{v0.6}{2017/10/28}{优化 \LuaTeX{} 下希腊字母、西里尔字母
%   和带圈数字的显示（\pkg{ctex} v2.4.11 已默认进行处理）。}
%
% \subsection{章节标题结构}
%
% |\keys_set:nn {ctex}| 实际相当于 \cs{ctexset}。
%    \begin{macrocode}
\keys_set:nn { ctex }
  {
%    \end{macrocode}
%
% 设置章（chapter）、节（section）与小节（sub-section）标题样式。
% 此处使用 \kvopt{fixskip}{true} 选项来抑制前后的多余间距。
%    \begin{macrocode}
    chapter =
      {
%<class>        format      = \c_@@_def_chapter_format_tl,
%<*class-en>
        format      = \c_@@_def_chapter_format_en_tl,
        nameformat  = \c_@@_def_chapter_name_format_en_tl,
        titleformat = \c_@@_def_chapter_title_format_en_tl,
        aftername   = \c_@@_def_chapter_after_name_en_tl,
%</class-en>
        beforeskip  = \c_@@_def_chapter_before_sep_tl,
        afterskip   = \c_@@_def_chapter_after_sep_tl,
        number      = { \arabic { chapter } },
        fixskip     = true
      },
    section =
      {
%<class>        format      = \c_@@_def_section_format_tl,
%<class-en>        format      = \c_@@_def_section_format_en_tl,
        beforeskip  = \c_@@_def_section_before_sep_tl,
        afterskip   = \c_@@_def_section_after_sep_tl,
        fixskip     = true
      },
    subsection =
      {
%<class>        format      = \c_@@_def_subsection_format_tl,
%<class-en>        format      = \c_@@_def_subsection_format_en_tl,
        beforeskip  = \c_@@_def_subsection_before_sep_tl,
        afterskip   = \c_@@_def_subsection_after_sep_tl,
        fixskip     = true
      }
  }
%    \end{macrocode}
%
% \subsection{页眉页脚}
%
% 清除默认页眉页脚格式。
%    \begin{macrocode}
\fancyhf { }
%    \end{macrocode}
%
% \begin{variable}[int]{\l_@@_header_center_mark_tl}
% 保存中间页眉的文字。正文中设置为空，目录、摘要、符号表等设置为
% 相应标题。
%    \begin{macrocode}
\tl_new:N \l_@@_header_center_mark_tl
%    \end{macrocode}
% \end{variable}
%
% 构建页眉，要在单面或双面下分别设置。
%
% \cs{fancyhead} 的选项中，\opt{E} 和 \opt{O} 分别表示偶数（even）
% 和奇数（odd）， 而 \opt{L}、\opt{R} 和 \opt{C} 则分别表示左
% （left）、右（right）和中间（center）。按照通常的排版规则，
% 在双面模式下，偶数页的中间页眉文字在左，奇数页则在右。单面模式下，
% 左右页眉都要显示。
%    \begin{macrocode}
\bool_if:NTF \g_@@_twoside_bool
%<*class>
  {
    \fancyhead [ EL ] { \small \nouppercase { \fdu@kai \leftmark  } }
    \fancyhead [ OR ] { \small \nouppercase { \fdu@kai \rightmark } }
  }
  {
    \fancyhead [ L ] { \small \nouppercase { \fdu@kai \leftmark  } }
    \fancyhead [ R ] { \small \nouppercase { \fdu@kai \rightmark } }
    \fancyhead [ C ]
      {
        \small \nouppercase
          { \fdu@kai \l_@@_header_center_mark_tl }
      }
  }
%</class>
%<*class-en>
  {
    \fancyhead [ EL ] { \small \nouppercase { \itshape \leftmark  } }
    \fancyhead [ OR ] { \small \nouppercase { \itshape \rightmark } }
  }
  {
    \fancyhead [ L ] { \small \nouppercase { \itshape \leftmark  } }
    \fancyhead [ R ] { \small \nouppercase { \itshape \rightmark } }
    \fancyhead [ C ]
      {
        \small \nouppercase
          { \itshape \l_@@_header_center_mark_tl }
      }
  }
%</class-en>
%    \end{macrocode}
%
% 构建页脚，用来显示页码。选项 \opt{C} 表示居中（center）。
%    \begin{macrocode}
\fancyfoot [ C ] { \small \thepage }
%    \end{macrocode}
%
% 关闭横线显示（未启用）。
%    \begin{macrocode}
% \RenewDocumentCommand \headrulewidth { } { 0 pt }
%    \end{macrocode}
%
% \begin{macro}{\fdu_front_matter_header:n}
% 在单页模式下，设置前导部分（包括目录、摘要、符号表等）的页眉中间
% 为相应标题，左右为空。
%    \begin{macrocode}
\cs_new:Npn \fdu_front_matter_header:n #1
  {
    \bool_if:NTF \g_@@_twoside_bool
      { \markboth {#1} {#1} }
      {
        \markboth { } { }
        \tl_gset:Nn \l_@@_header_center_mark_tl {#1}
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\cleardoublepage}
% 重定义 \tn{cleardoublepage}，使得偶数页面在没有内容时也不显示
% 页眉页脚。\\
% 见 http://tex.stackexchange.com/q/1681 \\
% 最后清空中间页眉，确保正文部分页眉显示正确。
%    \begin{macrocode}
\RenewDocumentCommand \cleardoublepage { }
  {
    \clearpage
    \bool_if:NT \g_@@_twoside_bool
      {
        \int_if_odd:nF \c@page
          { \hbox:n { } \thispagestyle { empty } \newpage }
      }
    \tl_gset:Nn \l_@@_header_center_mark_tl { }
  }
%    \end{macrocode}
% \end{macro}
%
% \pkg{ctex} 宏包使用 \opt{heading} 选项后，会把页面格式设置为
% |headings|。因此必须在 \pkg{ctex} 调用之后重新设置 \cs{pagestyle}
% 为 |fancy|。
%    \begin{macrocode}
\pagestyle { fancy }
%    \end{macrocode}
%
% \subsection{\pkg{hyperref} 相关配置}
%
% \changes{v0.4}{2017/08/13}{新增 \pkg{hyperref} 相关配置，
%   包括超链接样式（\opt{hyperlink} 与 \opt{hyperlinkcolor}
%   选项）及 PDF 元信息等。}
%
% \begin{macro}{\hypersetup,\fdu_hyperref_setup:n}
% \pkg{hyperref} 宏包是在导言区之后才引入的。若要在导言区中使用
% \tn{hypersetup} 命令，必须另行定义。
%    \begin{macrocode}
\NewDocumentCommand \hypersetup { m }
  { \fdu_hyperref_setup:n {#1} }
\cs_new:Npn \fdu_hyperref_setup:n #1
  { \clist_gput_right:Nn \g_@@_to_hyperref_clist {#1} }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\keys_define:nn { fdu / style }
  {
%    \end{macrocode}
%
% \begin{macro}{style/hyperlink}
% 超链接样式。
%    \begin{macrocode}
    hyperlink .choice:,
    hyperlink .value_required:n = true,
    hyperlink / border .code:n = { },
    hyperlink / color  .code:n =
      { \fdu_hyperref_setup:n { colorlinks = true } },
    hyperlink / none   .code:n =
      { \fdu_hyperref_setup:n { hidelinks  = true } },
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{style/hyperlinkcolor}
% 超链接颜色。
%    \begin{macrocode}
    hyperlinkcolor .choice:,
    hyperlinkcolor .value_required:n = true,
    hyperlinkcolor / autumn    .code:n =
      {
        \@@_set_hyperlink_color:nnn
          { D70000 } { D75F00 } { AF8700 }
      },
    hyperlinkcolor / business  .code:n =
      {
        \@@_set_hyperlink_color:nnn
          { D14542 } { 295497 } { 1F6E43 }
      },
    hyperlinkcolor / classic   .code:n =
      {
        \@@_set_hyperlink_color:nnn
          { FF0000 } { 0000FF } { 00FF00 }
      },
    hyperlinkcolor / default   .code:n =
      {
        \@@_set_hyperlink_color:nnn
          { 990000 } { 0000B2 } { 007F00 }
      },
    hyperlinkcolor / elegant   .code:n =
      {
        \@@_set_hyperlink_color:nnn
          { 961212 } { C31818 } { 9B764F }
      },
    hyperlinkcolor / fantasy   .code:n =
      {
        \@@_set_hyperlink_color:nnn
          { FF4A19 } { FF3F94 } { 934BA1 }
      },
    hyperlinkcolor / material  .code:n =
      {
        \@@_set_hyperlink_color:nnn
          { E91E63 } { 009688 } { 4CAF50 }
      },
    hyperlinkcolor / science   .code:n =
      {
        \@@_set_hyperlink_color:nnn
          { CA0619 } { 389F9D } { FF8920 }
      },
    hyperlinkcolor / summer    .code:n =
      {
        \@@_set_hyperlink_color:nnn
          { 00AFAF } { 5F5FAF } { 5F8700 }
      },
    hyperlinkcolor / graylevel .code:n =
      {
        \@@_set_hyperlink_color:nnn
          { 616161 } { 616161 } { 616161 }
      },
    hyperlinkcolor / prl       .code:n =
      {
        \@@_set_hyperlink_color:nnn
          { 0000FF } { 0000FF } { 0000FF }
      },
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[aux]{\@@_set_hyperlink_color:nnn}
% 设置超链接颜色。
%    \begin{macrocode}
\cs_new:Npn \@@_set_hyperlink_color:nnn #1#2#3
  {
    \@@_define_hyperlink_color:nnn {#1} {#2} {#3}
    \fdu_hyperref_setup:n
      {
        linkcolor = fdu@link, linkbordercolor = fdu@link,
        urlcolor  = fdu@url,  urlbordercolor  = fdu@url,
        citecolor = fdu@cite, citebordercolor = fdu@cite
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[aux]{\@@_define_hyperlink_color:nnn}
% 定义超链接颜色。
%    \begin{macrocode}
\cs_new:Npn \@@_define_hyperlink_color:nnn #1#2#3
  {
    \definecolorset { HTML } { fdu@ } { }
      { link, #1; url, #2; cite, #3}
  }
%    \end{macrocode}
% \end{macro}
%
% \changes{v0.6}{2017/10/29}{优化 URL 断行设置。}
%
% \begin{macro}[int]{\fdu_allow_url_break:}
% \begin{macro}[aux]{\@@_add_url_break_points:}
% 允许 URL 在字母、数字和一些特殊符号处断行。见
% \url{https://bit.ly/2hhIjLW}。
%    \begin{macrocode}
\cs_new:Npn \fdu_allow_url_break:
  {
    \cs_new:Npn \@@_add_url_break_points:
      { \tl_map_function:NN \c_@@_url_break_points_tl \do }
    \__fdu_appto_cmd:Nn \UrlBreaks
      { \UrlOrds \__fdu_add_url_break_points: }
  }
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{variable}[int]{\c_@@_url_break_points_tl}
% 额外的断行位置是 26 个英文字母（大小写）以及 10 个阿拉伯数字。
% \pkg{url} 提供的宏 \tn{UrlBreaks} 还包含了特殊符号 |*|、|-|、
% |~|、|'|、|"|、|-|，也被设置为允许断行。
%    \begin{macrocode}
\tl_const:Nn \c_@@_url_break_points_tl
  {
    abcdefghijklmnopqrstuvwxyz
    ABCDEFGHIJKLMNOPQRSTUVWXYZ
    0123456789
  }
%    \end{macrocode}
% \end{variable}
%
% 在导言区末尾引入 \pkg{hyperref} 宏包。
%    \begin{macrocode}
\ctex_at_end_preamble:n
  {
    \RequirePackage { hyperref }
%    \end{macrocode}
% 此后 \tn{hypersetup} 命令由 \pkg{hyperref} 宏包接管。
%    \begin{macrocode}
    \hypersetup
      {
        bookmarksnumbered = true,
%    \end{macrocode}
% 填写 PDF 元信息。
%    \begin{macrocode}
%<*class>
        pdftitle    = \l_@@_info_title_tl,
        pdfauthor   = \l_@@_info_author_tl,
        pdfkeywords = \l_@@_info_keywords_clist,
%</class>
%<*class-en>
        pdftitle    = \l_@@_info_title_en_tl,
        pdfauthor   = \l_@@_info_author_en_tl,
        pdfkeywords = \l_@@_info_keywords_en_clist,
%</class-en>
%         pdfsubject  = ,
        pdfcreator  = \c_@@_def_name_pdf_creator_tl
      }
%    \end{macrocode}
% 将导言区中通过 \cs{fdu_hyperref_setup:n} 进行的设置传入
% \tn{hypersetup}。
%    \begin{macrocode}
    \exp_args:NV \hypersetup \g_@@_to_hyperref_clist
    \fdu_allow_url_break:
  }
%    \end{macrocode}
%
% 在 PDF 字符串中设置 \tn{fdu@kai} 命令为空，以抑制 \pkg{hyperref}
% 的警告信息。
%    \begin{macrocode}
\ctex_at_end_package:nn { hyperref }
  {
    \pdfstringdefDisableCommands
      {
        \cs_set_eq:NN \fdu@kai \prg_do_nothing:
        \cs_set_eq:NN \quad    \c_space_tl
        \cs_set_eq:NN \qquad   \c_space_tl
      }
  }
%    \end{macrocode}
%
% \subsection{脚注}
%
% \changes{v0.3}{2017/02/21}{支持脚注。}
%
% \subsubsection{编号样式}
%
% 各种脚注编号样式的名称。
%    \begin{macrocode}
\@@_def_fn_style:nn { plain           } { plain           }
\@@_def_fn_style:nn { libertinus      } { libertinus      }
\@@_def_fn_style:nn { libertinus_neg  } { libertinus*     }
\@@_def_fn_style:nn { libertinus_sans } { libertinus-sans }
\@@_def_fn_style:nn { pifont          } { pifont          }
\@@_def_fn_style:nn { pifont_neg      } { pifont*         }
\@@_def_fn_style:nn { pifont_sans     } { pifont-sans     }
\@@_def_fn_style:nn { pifont_sans_neg } { pifont-sans*    }
\@@_def_fn_style:nn { xits            } { xits            }
\@@_def_fn_style:nn { xits_sans       } { xits-sans       }
\@@_def_fn_style:nn { xits_sans_neg   } { xits-sans*      }
%    \end{macrocode}
%
% \begin{variable}[int]{\l_@@_fn_style_tl}
% 保存当前使用的脚注编号样式。
%    \begin{macrocode}
\tl_new:N \l_@@_fn_style_tl
%    \end{macrocode}
% \end{variable}
%
%    \begin{macrocode}
\keys_define:nn { fdu / style }
  {
%    \end{macrocode}
%
% \begin{macro}{style/footnotestyle}
% 脚注类型共分四大类：
% \begin{itemize}
%   \item \opt{plain}：使用当前字体；
%   \item \opt{libertinus}：取自 Libertinus Serif 和 Libertinus Sans
%     字体；
%   \item \opt{pifont}：使用 \pkg{pifont} 宏包；
%   \item \opt{xits}：取自 XITS 字体。
% \end{itemize}
% 不带任何修饰的为衬线阳文符号，带“|sans|”的为无衬线符号，带“|*|”的
% 为阴文版本。
%    \begin{macrocode}
    footnotestyle .choices:nn =
      {
        plain,
        libertinus, libertinus*, libertinus-sans,
        pifont,     pifont*,     pifont-sans,     pifont-sans*,
        xits,                    xits-sans,       xits-sans*
      }
%    \end{macrocode}
% \changes{v0.6}{2017/11/12}{不再依赖 XITS-Math 字体。}
% 若使用 \opt{pifont} 类型，则需引入 \pkg{pifont} 宏包。
%    \begin{macrocode}
      {
        \tl_gset_eq:NN \l_@@_fn_style_tl \l_keys_choice_tl
        \int_compare:nT { 5 <= \l_keys_choice_int <= 8 }
          { \RequirePackage { pifont } }
      },
    footnotestyle .value_required:n = true
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_fn_symbol_libertinus:n}
% \opt{libertinus} 普通版。\numrange{1}{20} 为数字，\numrange{21}{46}
% 为小写英文字母，\numrange{47}{72} 为大写英文字母。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_libertinus:n #1
  {
    \int_compare:nTF { #1 >= 21 }
      {
        \int_compare:nTF { #1 >= 47 }
          { \@@_symbol:n { \int_eval:n { "24B6 - 47 + #1 } } }
          { \@@_symbol:n { \int_eval:n { "24D0 - 21 + #1 } } }
      }
      { \@@_symbol:n { \int_eval:n { "2460 - 1 + #1 } } }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_fn_symbol_libertinus_neg:n}
% \opt{libertinus} 阴文衬线版。只含 \numrange{1}{20}。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_libertinus_neg:n #1
  {
    \int_compare:nTF { #1 >= 11 }
      { \@@_symbol:n { \int_eval:n { "24EB - 11 + #1 } } }
      { \@@_symbol:n { \int_eval:n { "2776 -  1 + #1 } } }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_fn_symbol_libertinus_sans:n}
% \opt{libertinus} 阳文无衬线版。符号排列与普通版相同。
%    \begin{macrocode}
\cs_new_eq:NN \@@_fn_symbol_libertinus_sans:n
  \@@_fn_symbol_libertinus:n
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_fn_symbol_pifont:n}
% \opt{pifont} 普通版。以下四种都只包含 \numrange{1}{10}。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_pifont:n #1
  { \ding { \int_eval:n { 171 + #1 } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_fn_symbol_pifont_neg:n}
% \opt{pifont} 阴文衬线版。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_pifont_neg:n #1
  { \ding { \int_eval:n { 181 + #1 } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_fn_symbol_pifont_sans:n}
% \opt{pifont} 阳文无衬线版。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_pifont_sans:n #1
  { \ding { \int_eval:n { 191 + #1 } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_fn_symbol_pifont_sans_neg:n}
% \opt{pifont} 阴文无衬线版。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_pifont_sans_neg:n #1
  { \ding { \int_eval:n { 201 + #1 } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_fn_symbol_xits:n}
% \opt{xits} 普通版。\numrange{1}{9} 为数字，\numrange{10}{35}
% 为小写英文字母，\numrange{36}{61} 为大写英文字母。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_xits:n #1
  {
    \int_compare:nTF { #1 >= 10 }
      {
        \int_compare:nTF { #1 >= 36 }
          { \@@_symbol:n { \int_eval:n { "24B6 - 36 + #1 } } }
          { \@@_symbol:n { \int_eval:n { "24D0 - 10 + #1 } } }
      }
      { \@@_symbol:n { \int_eval:n { "2460 - 1 + #1 } } }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_fn_symbol_xits_sans:n}
% \opt{xits} 阳文无衬线版。只包含 \numrange{1}{10}。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_xits_sans:n #1
  { \@@_symbol:n { \int_eval:n { "2780 - 1 + #1 } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_fn_symbol_xits_sans_neg:n}
% \opt{xits} 阴文无衬线版。也只包含 \numrange{1}{10}。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_xits_sans_neg:n #1
  { \@@_symbol:n { \int_eval:n { "278A - 1 + #1 } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\thefootnote}
% 重定义脚注编号。
%    \begin{macrocode}
\RenewDocumentCommand \thefootnote { }
  { \fdu_footnote_number:N \c@footnote }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_footnote_number:N}
% 脚注编号样式。
%    \begin{macrocode}
\cs_new:Npn \fdu_footnote_number:N #1
  {
    \tl_case:NnF \l_@@_fn_style_tl
      {
%    \end{macrocode}
% \opt{plain} 类型直接使用计数器 |footnote| 的值。
%    \begin{macrocode}
        \c_@@_fn_style_plain_tl
          { \int_use:N #1 }
%    \end{macrocode}
% \opt{libertinus} 类型需要使用 Libertinus Serif 或
% Libertinus Sans 字体。
%    \begin{macrocode}
        \c_@@_fn_style_libertinus_tl
          {
            \fontspec { Libertinus~ Serif }
            \@@_fn_symbol_libertinus:n {#1}
          }
        \c_@@_fn_style_libertinus_neg_tl
          {
            \fontspec { Libertinus~ Serif }
            \@@_fn_symbol_libertinus_neg:n {#1}
          }
        \c_@@_fn_style_libertinus_sans_tl
          {
            \fontspec { Libertinus~ Sans }
            \@@_fn_symbol_libertinus_sans:n {#1}
          }
%    \end{macrocode}
% \opt{pifont} 类型无需进行额外的操作。
%    \begin{macrocode}
        \c_@@_fn_style_pifont_tl
          { \@@_fn_symbol_pifont:n {#1} }
        \c_@@_fn_style_pifont_neg_tl
          { \@@_fn_symbol_pifont_neg:n {#1} }
        \c_@@_fn_style_pifont_sans_tl
          { \@@_fn_symbol_pifont_sans:n {#1} }
        \c_@@_fn_style_pifont_sans_neg_tl
          { \@@_fn_symbol_pifont_sans_neg:n {#1} }
%    \end{macrocode}
% \opt{xits} 类型需要临时切换数学字体。
%    \begin{macrocode}
        \c_@@_fn_style_xits_tl
          {
            \fontspec { XITS }
            \@@_fn_symbol_xits:n {#1}
          }
        \c_@@_fn_style_xits_sans_tl
          {
            \fontspec { XITS }
            \@@_fn_symbol_xits_sans:n {#1}
          }
        \c_@@_fn_style_xits_sans_neg_tl
          {
            \fontspec { XITS }
            \@@_fn_symbol_xits_sans_neg:n {#1}
          }
      }
%    \end{macrocode}
% 变量 \cs{l_@@_fn_style_tl} 保存的类型未知时，默认使用 \opt{plain}
% 类型。
%    \begin{macrocode}
      { \int_use:N #1 }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{整体样式}
%
% \begin{macro}[int]{\@makefntext}
% 重定义内部脚注文字命令。
%    \begin{macrocode}
\RenewDocumentCommand \@makefntext { +m }
  {
%    \end{macrocode}
% 脚注编号不使用上标，宽度为 \SI{1.5}{em}。
% 见 \url{http://tex.stackexchange.com/q/19844}。
%    \begin{macrocode}
    \dim_set:Nn \l_@@_tmpa_dim { \textwidth - 1.5 em }
    \makebox [ 1.5 em ] [ l ] { \@thefnmark }
%    \end{macrocode}
% 脚注文字用 \tn{parbox} 封装。首段无缩进，第二段起缩进 \SI{2}{em}。
%    \begin{macrocode}
    \parbox [ t ] { \l_@@_tmpa_dim }
      {
        \everypar { \hspace* { 2 em } }
        \hspace* { -2 em } #1
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{定理环境}
%
% \changes{v0.3}{2017/05/07}{新增定理环境。}
%
% \begin{variable}[int]{\c_@@_thm_style_plain_clist,
%   \c_@@_thm_style_break_clist}
% 保存 \opt{plain}、\opt{break} 两种类型的定理样式名称。
%    \begin{macrocode}
\clist_const:Nn \c_@@_thm_style_plain_clist
  { plain, margin, change }
\clist_const:Nn \c_@@_thm_style_break_clist
  { break, marginbreak, changebreak }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\l_@@_thm_style_tl,
%   \l_@@_thm_header_font_tl,
%   \l_@@_thm_body_font_tl,
%   \l_@@_thm_qed_tl,
%   \l_@@_thm_counter_tl}
% 定理所需的一些字段。
%    \begin{macrocode}
\tl_new:N \l_@@_thm_style_tl
\tl_new:N \l_@@_thm_header_font_tl
\tl_new:N \l_@@_thm_body_font_tl
\tl_new:N \l_@@_thm_qed_tl
\tl_new:N \l_@@_thm_counter_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{theorem/style,
%   theorem/headerfont,
%   theorem/bodyfont,
%   theorem/qed,
%   theorem/counter}
% 定义 |fdu/theorem| 键值类。
%    \begin{macrocode}
\keys_define:nn { fdu / theorem }
  {
    style      .tl_set:N  = \l_@@_thm_style_tl,
    headerfont .tl_set:N  = \l_@@_thm_header_font_tl,
    bodyfont   .tl_set:N  = \l_@@_thm_body_font_tl,
    qed        .tl_set:N  = \l_@@_thm_qed_tl,
    counter    .tl_set:N  = \l_@@_thm_counter_tl
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_thm_new:nnnn,\fdu_thm_new:Vnnn}
% 带编号的定理环境。
% \begin{arguments}
%   \item 样式
%   \item 计数器
%   \item 定理环境名称
%   \item 定理头文字
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \fdu_thm_new:nnnn #1#2#3#4
  {
    \theoremstyle {#1}
    \newtheorem {#3} {#4} [#2]
  }
\cs_generate_variant:Nn \fdu_thm_new:nnnn { Vnnn }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_thm_new_no_number:nnn,
%   \fdu_thm_new_no_number:Vnn}
% 不带编号的定理环境。
% \begin{arguments}
%   \item 样式
%   \item 定理环境名称
%   \item 定理头文字
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \fdu_thm_new_no_number:nnn #1#2#3
  {
    \theoremstyle {#1}
    \newtheorem {#2} {#3}
  }
\cs_generate_variant:Nn \fdu_thm_new_no_number:nnn { Vnn }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_thm_set_qed:n,
%   \fdu_thm_set_header_font:n,
%   \fdu_thm_set_body_font:n,
%   \fdu_thm_set_qed:V,
%   \fdu_thm_set_header_font:V,
%   \fdu_thm_set_body_font:V}
% 封装 \pkg{ntheorem} 宏包提供的若干命令，分别用以设置证毕符号、
% 定理头字体和定理正文字体。
%    \begin{macrocode}
\cs_new:Npn \fdu_thm_set_qed:n         #1 { \theoremsymbol     {#1} }
\cs_new:Npn \fdu_thm_set_header_font:n #1 { \theoremheaderfont {#1} }
\cs_new:Npn \fdu_thm_set_body_font:n   #1 { \theorembodyfont   {#1} }
\cs_generate_variant:Nn \fdu_thm_set_qed:n         { V }
\cs_generate_variant:Nn \fdu_thm_set_header_font:n { V }
\cs_generate_variant:Nn \fdu_thm_set_body_font:n   { V }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdunewtheorem,\fdunewtheorem*}
% 创建新的定理环境。
%    \begin{macrocode}
\NewDocumentCommand \fdunewtheorem { s o m m }
  {
%    \end{macrocode}
% 默认情况下，由 \cs{fdunewtheorem*} 创建的定理其证毕符号为
% \cs{QED}，而由 \cs{fdu\-new\-the\-orem} 创建的则不带证毕符号。符号
% \cs{QED} 由 \pkg{unicode-math} 宏包提供。
%    \begin{macrocode}
    \IfBooleanTF #1
      { \tl_set:Nn \l_@@_thm_qed_tl { \ensuremath { \QED } } }
      { \tl_set:Nn \l_@@_thm_qed_tl { } }
%    \end{macrocode}
% 设置默认样式为 \opt{plain}。
%    \begin{macrocode}
    \tl_set:Nn \l_@@_thm_style_tl { plain }
%    \end{macrocode}
% 处理可选参数。利用 |fdu/theorem| 键值对设置，并按此修改证毕符号、
% 定理头字体和定理正文字体。
%    \begin{macrocode}
    \IfValueT {#2}
      { \keys_set:nn { fdu / theorem } {#2} }
    \fdu_thm_set_header_font:V \l_@@_thm_header_font_tl
    \fdu_thm_set_body_font:V   \l_@@_thm_body_font_tl
    \fdu_thm_set_qed:V         \l_@@_thm_qed_tl
%    \end{macrocode}
% \cs{fdunewtheorem} 负责创建编号定理，而 \cs{fdunewtheorem*}
% 则负责创建无编号定理。以下分这两种情况处理。
%    \begin{macrocode}
    \IfBooleanTF #1
      {
%    \end{macrocode}
% 带 |*| 的版本原则上只接受 \opt{plain} 和 \opt{break} 两种样式，
% 其余样式将被转换成这两者其中之一。\\
% TODO(20170602): 给出重定义样式的警告。
%    \begin{macrocode}
        \clist_if_in:NVTF
          \c_@@_thm_style_plain_clist
          \l_@@_thm_style_tl
          { \tl_set:Nn \l_@@_thm_style_tl { plain } }
          {
            \clist_if_in:NVTF
              \c_@@_thm_style_break_clist
              \l_@@_thm_style_tl
              { \tl_set:Nn \l_@@_thm_style_tl { break } }
% TODO(20170602): 给出样式未定义错误。
              { }
          }
%    \end{macrocode}
% \pkg{ntheorem} 宏包提供的无编号定理带有 |nonumber| 前缀，
% 这里将其加上。
%    \begin{macrocode}
        \tl_put_left:Nn \l_@@_thm_style_tl { nonumber }
        \fdu_thm_new_no_number:Vnn \l_@@_thm_style_tl {#3} {#4}
      }
      {
%    \end{macrocode}
% 不带 |*| 的版本支持不含“|nonumber|”的所有定理样式。
%    \begin{macrocode}
        \clist_clear:N \l_@@_tmpa_clist
        \clist_concat:NNN \l_@@_tmpa_clist
          \c_@@_thm_style_plain_clist \c_@@_thm_style_break_clist
        \clist_if_in:NVF
          \l_@@_tmpa_clist \l_@@_thm_style_tl
% TODO(20170602): 给出样式未定义错误。
          { }
        \fdu_thm_new:Vnnn \l_@@_thm_style_tl
          { \l_@@_thm_counter_tl } {#3} {#4}
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{图表绘制；浮动体}
%
% \changes{v0.3}{2017/07/09}{支持浮动体。}
%
% 分别设置浮动体 \env{figure} 和 \env{table} 的标题样式。
%    \begin{macrocode}
\captionsetup [ figure ]
  {
    font     = small,
    labelsep = quad
  }
\captionsetup [ table  ]
  {
    font     = { small, sf },
    labelsep = quad
  }
%    \end{macrocode}
%
% \begin{macro}{\thefigure,\thetable}
% 重定义图表编号。
%    \begin{macrocode}
\RenewDocumentCommand \thefigure { }
  { \arabic { chapter } - \arabic { figure } }
\RenewDocumentCommand \thetable  { }
  { \arabic { chapter } - \arabic { table  } }
%    \end{macrocode}
% \end{macro}
%
% \subsection{封面}
%
% \subsubsection{信息录入}
%
% \begin{variable}[int]{\l_@@_info_title_tl,
%   \l_@@_info_date_tl,
%   \l_@@_info_author_tl,
%   \l_@@_info_supervisor_tl,
%   \l_@@_info_instructors_clist,
%   \l_@@_info_department_tl,
%   \l_@@_info_major_tl,
%   \l_@@_info_student_id_tl,
%   \l_@@_info_school_id_tl,
%   \l_@@_info_keywords_clist,
%   \l_@@_info_clc_tl}
% 封面所需的一些字段。
%    \begin{macrocode}
\tl_new:N    \l_@@_info_title_tl
\tl_new:N    \l_@@_info_date_tl
\tl_new:N    \l_@@_info_author_tl
\tl_new:N    \l_@@_info_supervisor_tl
\clist_new:N \l_@@_info_instructors_clist
\tl_new:N    \l_@@_info_department_tl
\tl_new:N    \l_@@_info_major_tl
\tl_new:N    \l_@@_info_student_id_tl
\tl_new:N    \l_@@_info_school_id_tl
\clist_new:N \l_@@_info_keywords_clist
\tl_new:N    \l_@@_info_clc_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\l_@@_info_title_en_tl,
%   \l_@@_info_author_en_tl,
%   \l_@@_info_supervisor_en_tl,
%   \l_@@_info_department_en_tl,
%   \l_@@_info_major_en_tl,
%   \l_@@_info_keywords_en_clist}
% 对应的英文字段。
%    \begin{macrocode}
\tl_new:N    \l_@@_info_title_en_tl
\tl_new:N    \l_@@_info_author_en_tl
\tl_new:N    \l_@@_info_supervisor_en_tl
\tl_new:N    \l_@@_info_department_en_tl
\tl_new:N    \l_@@_info_major_en_tl
\clist_new:N \l_@@_info_keywords_en_clist
%    \end{macrocode}
% \end{variable}
%
% 定义 |fdu/info| 键值类。
%    \begin{macrocode}
\keys_define:nn { fdu / info }
  {
%    \end{macrocode}
%
% \begin{macro}{info/title,info/title}
% 论文题目。以下带星号的项目均表示相应的英文字段。
%    \begin{macrocode}
    title       .tl_set:N    = \l_@@_info_title_tl,
    title*      .tl_set:N    = \l_@@_info_title_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/date}
% 论文完成日期。
%    \begin{macrocode}
    date        .tl_set:N    = \l_@@_info_date_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/author,info/author*}
% 作者姓名。
%    \begin{macrocode}
    author      .tl_set:N    = \l_@@_info_author_tl,
    author*     .tl_set:N    = \l_@@_info_author_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/supervisor,info/supervisor*}
% 导师姓名。
%    \begin{macrocode}
    supervisor  .tl_set:N    = \l_@@_info_supervisor_tl,
    supervisor* .tl_set:N    = \l_@@_info_supervisor_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/instructors}
% 指导小组成员。
%    \begin{macrocode}
    instructors .clist_set:N = \l_@@_info_instructors_clist,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/department,info/department*}
% 院系。
%    \begin{macrocode}
    department  .tl_set:N    = \l_@@_info_department_tl,
    department* .tl_set:N    = \l_@@_info_department_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/major,info/major*}
% 专业。
%    \begin{macrocode}
    major       .tl_set:N    = \l_@@_info_major_tl,
    major*      .tl_set:N    = \l_@@_info_major_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/studentid}
% 学号。
%    \begin{macrocode}
    studentid   .tl_set:N    = \l_@@_info_student_id_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/schoolid}
% 学校代码。
%    \begin{macrocode}
    schoolid    .tl_set:N    = \l_@@_info_school_id_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/keywords,info/keywords*}
% 论文关键字。
%    \begin{macrocode}
    keywords    .clist_set:N = \l_@@_info_keywords_clist,
    keywords*   .clist_set:N = \l_@@_info_keywords_en_clist,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/clc}
% 中图分类号。
%    \begin{macrocode}
    clc         .tl_set:N    = \l_@@_info_clc_tl
  }
%    \end{macrocode}
% \end{macro}
%
% \changes{v0.4}{2017/08/10}{新增 \opt{logo} 与 \opt{logosize}
%   选项。}
%
% \begin{variable}[int]{\l_@@_cover_logo_tl,
%   \l_@@_cover_logo_size_clist}
%    \begin{macrocode}
\tl_new:N    \l_@@_cover_logo_tl
\clist_new:N \l_@@_cover_logo_size_clist
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{style/logo,style/logosize}
% 校名图片的文件名和尺寸。
%    \begin{macrocode}
\keys_define:nn { fdu / style }
  {
    logo     .tl_set:N    = \l_@@_cover_logo_tl,
    logosize .clist_set:N = \l_@@_cover_logo_size_clist
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{密级}
%
% \changes{v0.3}{2017/07/04}{新增 \opt{secretlevel} 与
%   \opt{secretyear} 选项。}
%
% \begin{variable}[int]{\l_@@_secret_bool}
% 是否显示密级。
%    \begin{macrocode}
\bool_new:N \l_@@_secret_bool
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\l_@@_info_secret_level_tl}
% 保存当前的密级。
%    \begin{macrocode}
\tl_new:N \l_@@_info_secret_level_tl
%    \end{macrocode}
% \end{variable}
%
%    \begin{macrocode}
\keys_define:nn { fdu / info }
  {
%    \end{macrocode}
%
% \begin{macro}{info/secretlevel}
% \changes{v0.6}{2017/11/11}{不再依赖 XITS-Math 字体。}
% 密级。\opt{none} 表示不涉密，\opt{i}、\opt{ii}、\opt{iii} 分别为
% 秘密、机密、绝密。
%    \begin{macrocode}
    secretlevel .choices:nn  =
      { none, i, ii, iii }
      {
        \int_compare:nTF
          { \l_keys_choice_int >= 2 }
          {
            \bool_set_true:N \l_@@_secret_bool
            \tl_set:Nn \l_@@_info_secret_level_tl
              {
                \clist_item:Nn \c_@@_def_secret_clist
                  { \l_keys_choice_int - 1 }
              }
          }
          { \bool_set_false:N \l_@@_secret_bool }
      },
    secretlevel .value_required:n = true,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/secretyear}
% 保密年限。
%    \begin{macrocode}
    secretyear .tl_set:N = \l_@@_info_secret_year_tl
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{定义内部函数}
%
% \begin{macro}{\@@_spread_box:nnn,\@@_spread_box:VVn,
%   \@@_spread_box:nn,\@@_spread_box:VV}
% 分散对齐的水平盒子。
% \begin{arguments}
%   \item 宽度
%   \item 内容
%   \item 字体、字号等设置
% \end{arguments}
% 利用 \cs{tl_map_inline:nn} 在字符间插入 \tn{hfil}；
% 紧随其后的 \tn{unskip} 将会去掉最后一个 \tn{hfil}。
% 见 \url{http://tex.stackexchange.com/q/169689}。
%    \begin{macrocode}
\cs_new:Npn \@@_spread_box:nnn #1#2#3
  {
    \mode_leave_vertical:
    \hbox_to_wd:nn {#1}
      { #3 \tl_map_inline:nn {#2} { \exp_not:n {##1} \hfil } \unskip }
  }
\cs_new:Npx \@@_spread_box:nn #1#2
  { \@@_spread_box:nnn {#1} {#2} { } }
\cs_generate_variant:Nn \@@_spread_box:nnn { VVn }
\cs_generate_variant:Nn \@@_spread_box:nn  { VV  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_center_box:nnn,\@@_center_box:VVn,
%   \@@_center_box:nn,\@@_center_box:VV}
% 居中对齐的水平盒子。参数同 \cs{@@_spread_box:nnn}。
%    \begin{macrocode}
\cs_new:Npn \@@_center_box:nnn #1#2#3
  {
    \mode_leave_vertical:
    \hbox_to_wd:nn {#1} { #3 \hfil #2 \hfil }
  }
\cs_new:Npx \@@_center_box:nn #1#2
  { \@@_center_box:nnn {#1} {#2} { } }
\cs_generate_variant:Nn \@@_center_box:nnn { VVn }
\cs_generate_variant:Nn \@@_center_box:nn  { VV  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fixed_width_box:nnn,\@@_fixed_width_box:Vnn}
% 限宽盒子（允许换行）。参数同 \cs{@@_spread_box:nnn}。
%    \begin{macrocode}
\cs_new:Npn \@@_fixed_width_box:nnn #1#2#3
  { \parbox {#1} { #3 #2 } }
\cs_generate_variant:Nn \@@_fixed_width_box:nnn { Vnn }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fixed_width_center_box:nnn,
%   \@@_fixed_width_center_box:VVn}
% 居中对齐的限宽盒子（允许换行）。参数同 \cs{@@_spread_box:nnn}。
%    \begin{macrocode}
\cs_new:Npn \@@_fixed_width_center_box:nnn #1#2#3
  { \@@_fixed_width_box:nnn {#1} {#2} { \centering #3 } }
\cs_generate_variant:Nn \@@_fixed_width_center_box:nnn { VVn }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_get_text_width:Nn,\fdu_get_text_width:NV}
% 获取文本宽度，并存入 |dim| 型变量。
% \begin{arguments}
%   \item |dim| 型变量
%   \item 内容
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \fdu_get_text_width:Nn #1#2
  {
    \hbox_set:Nn \l_@@_tmpa_box {#2}
    \dim_set:Nn #1 { \box_wd:N \l_@@_tmpa_box }
  }
\cs_generate_variant:Nn \fdu_get_text_width:Nn { NV }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_get_max_text_width:NN}
% \changes{v0.6}{2017/11/24}{移除不必要的字号设置。}
% 获取多个文本中的最大宽度，并存入 |dim| 型变量。
% \begin{arguments}
%   \item |dim| 型变量
%   \item 文本 |clist|
% \end{arguments}
% 当 \cs{l_@@_tmpa_clist} 非空时，弹出最后一个元素
% 赋给 \cs{l_@@_tmpa_tl}，获取其长度后与 |#1| 进行比较，
% 二者中较大的那一个将成为 |#1| 的新值。
% 不断循环，直至 \cs{l_@@_tmpa_clist} 为空。
%    \begin{macrocode}
\cs_new:Npn \fdu_get_max_text_width:NN #1#2
  {
%    \end{macrocode}
% 这里用 |group| 确保局部变量不会被污染。
%    \begin{macrocode}
    \group_begin:
    \clist_set_eq:NN \l_@@_tmpa_clist #2
    \bool_until_do:nn { \clist_if_empty_p:N \l_@@_tmpa_clist }
      {
        \clist_pop:NN \l_@@_tmpa_clist \l_@@_tmpa_tl
        \fdu_get_text_width:NV \l_@@_tmpa_dim \l_@@_tmpa_tl
        \dim_gset:Nn #1 { \dim_max:nn {#1} { \l_@@_tmpa_dim } }
      }
    \group_end:
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_blank_underline:N}
% \changes{v0.4}{2017/08/14}{改用 \tn{rule} 绘制下划线，不再依赖
%   \pkg{ulem} 宏包。}
% 下划线占位符。|#1|: 长度。
%    \begin{macrocode}
\cs_new:Npn \fdu_blank_underline:N #1
  { \rule [ -0.5 ex ] {#1} { 0.4 pt } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_line_spread:n,\fdu_line_spread:N}
% 设置行距。|#1|: 行距倍数。
%    \begin{macrocode}
\cs_new:Npn \fdu_line_spread:n #1
  { \linespread {#1} \selectfont }
\cs_generate_variant:Nn \fdu_line_spread:n { N }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{封面各部件}
%
% \changes{v0.5}{2017/09/19}{使用 \pkg{expl3} 以及内部函数改写
%   封面，减少对 \LaTeXe{} 的依赖。}
%
% \begin{macro}[int]{\@@_cover_id:}
% \changes{v0.6}{2017/11/24}{使用 \cs{skip_set:Nn} 设置
%   \tn{rightskip} 的大小。}
% 右上角的学校代码和学号。
%    \begin{macrocode}
\cs_new:Npn \@@_cover_id:
  {
    \begin{flushright}
      \skip_set:Nn \rightskip { \c_@@_def_cover_id_margin_sep_tl }
      \@@_fixed_width_box:Vnn \c_@@_def_cover_id_width_tl
        {
          \bool_if:NT \l_@@_secret_bool
            {
              \group_begin:
                \sffamily
                \c_@@_def_name_secret_level_tl
                \c_@@_fullwidth_colon_tl
                \l_@@_info_secret_level_tl
                \c_@@_def_name_secret_star_tl
                \l_@@_info_secret_year_tl
              \group_end:
              \par
            }
          \c_@@_def_name_school_id_tl
          \c_@@_fullwidth_colon_tl
          \l_@@_info_school_id_tl
          \par
          \c_@@_def_name_student_id_tl
          \c_@@_fullwidth_colon_tl
          \l_@@_info_student_id_tl
        }
        { \@@_cover_font_size_small: }
    \end{flushright}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_cover_logo:}
% 插入校名图片。根据参数 \opt{width} 和 \opt{height} 是否为空依次
% 判断。\cs{l_@@_cover_logo_size_clist} 中超过两个的参数将被忽略。
%    \begin{macrocode}
\cs_new:Npn \@@_cover_logo:
  {
    \begin{center}
      \clist_pop:NN   \l_@@_cover_logo_size_clist \l_@@_tmpa_tl
      \clist_pop:NNTF \l_@@_cover_logo_size_clist \l_@@_tmpb_tl
        {
          \tl_if_empty:NTF \l_@@_tmpa_tl
            { \includegraphics [ height = \l_@@_tmpb_tl ] }
            {
              \includegraphics
                [
                  width  = \l_@@_tmpa_tl,
                  height = \l_@@_tmpb_tl
                ]
            }
        }
        { \includegraphics [ width = \l_@@_tmpa_tl ] }
      { \l_@@_cover_logo_tl }
    \end{center}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_cover_title:}
% 标题部分，一共有四行。
%    \begin{macrocode}
\cs_new:Npn \@@_cover_title:
  {
    \begin{center}
%    \end{macrocode}
% \changes{v0.5}{2017/09/19}{修复论文类型无法分散对齐的问题。}
% 论文类型。
%    \begin{macrocode}
      \@@_spread_box:VVn
        \c_@@_def_cover_type_width_tl
        \c_@@_def_name_thesis_type_tl
        { \@@_cover_font_size_huge: }
      \skip_vertical:n { \c_@@_def_cover_v_sep_iii_tl }
%    \end{macrocode}
% 学位类型。
%    \begin{macrocode}
      \group_begin:
        \@@_cover_font_size_normal:
        \c_@@_def_name_degree_type_tl
      \group_end:
      \skip_vertical:n { \c_@@_def_cover_v_sep_iv_tl }
%    \end{macrocode}
% 中文题目。
%    \begin{macrocode}
      \@@_fixed_width_center_box:VVn
        \c_@@_def_cover_title_width_tl
        \l_@@_info_title_tl
        { \@@_cover_font_size_large: \sffamily }
      \skip_vertical:n { \c_@@_def_cover_v_sep_v_tl }
%    \end{macrocode}
% 英文题目。需要调整行距。
%    \begin{macrocode}
      \@@_fixed_width_center_box:VVn
        \c_@@_def_cover_title_en_width_tl
        \l_@@_info_title_en_tl
        {
          \@@_cover_font_size_normal: \bfseries
          \fdu_line_spread:N \c_@@_def_cover_title_en_line_spread_tl
        }
    \end{center}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_cover_info:}
% 信息栏。
%    \begin{macrocode}
\cs_new:Npn \@@_cover_info:
  {
    \begin{center}
%    \end{macrocode}
% \changes{v0.5}{2017/09/19}{各字段 \texttt{tl} 变量会被完全展开。}
% 读取左侧名称字段。
%    \begin{macrocode}
      \clist_set:Nx \l_@@_tmpa_clist
        {
          \c_@@_def_name_department_tl,
          \c_@@_def_name_major_tl,
          \c_@@_def_name_author_tl,
          \c_@@_def_name_supervisor_tl,
          \c_@@_def_name_date_tl,
        }
%    \end{macrocode}
% \changes{v0.6}{2017/11/06}{修复字段未定义时出现的死循环问题。}
% 设置信息栏右侧宽度。读取各字段，并将最宽者的宽度赋给
% \cs{l_@@_tmpb_dim}。
%    \begin{macrocode}
      \clist_set:Nx \l_@@_tmpb_clist
        {
          { \l_@@_info_department_tl },
          { \l_@@_info_major_tl      },
          { \l_@@_info_author_tl     },
          { \l_@@_info_supervisor_tl },
          { \l_@@_info_date_tl       }
        }
%    \end{macrocode}
% \changes{v0.6}{2017/11/24}{设置字号后再读取字段宽度，以防止
%   盒子溢出。}
% 在 \env{minipage} 环境中输出各字段。用循环实现。
%    \begin{macrocode}
      \begin{minipage} [ c ] { \textwidth }
        \centering \@@_cover_font_size_normal:
        \fdu_get_max_text_width:NN \l_@@_tmpb_dim \l_@@_tmpb_clist
        \bool_until_do:nn
          { \clist_if_empty_p:N \l_@@_tmpa_clist }
          {
            \clist_pop:NN \l_@@_tmpa_clist \l_@@_tmpa_tl
            \clist_pop:NN \l_@@_tmpb_clist \l_@@_tmpb_tl
            \@@_spread_box:VV
              \c_@@_def_cover_info_left_width_tl \l_@@_tmpa_tl
            \c_@@_fullwidth_colon_tl
            \@@_center_box:VV \l_@@_tmpb_dim \l_@@_tmpb_tl
            \skip_vertical:n { \c_@@_def_cover_v_sep_vii_tl }
          }
      \end{minipage}
    \end{center}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_decl_text:nnn,\@@_decl_text:VVn}
% 构建声明文本。
% \begin{arguments}
%   \item 标题
%   \item 声明内容
%   \item 签名行
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \@@_decl_text:nnn #1#2#3
  {
    \begin{center}
%<class-en>      \fdu_line_spread:n { \fp_use:N \c_@@_def_line_spread_fp }
      \@@_cover_font_size_large: \sffamily #1
    \end{center}
    \skip_vertical:n { \c_@@_def_decl_v_sep_iv_tl }
%    \end{macrocode}
% 段前空格需要手动生成。
%    \begin{macrocode}
    \@@_fixed_width_box:Vnn \textwidth
      { \@@_qquad: #2 }
      { \fdu_line_spread:N \c_@@_def_decl_text_line_spread_tl }
    \skip_vertical:n { \c_@@_def_decl_v_sep_iv_tl }
%    \end{macrocode}
% \tn{hfill} 用来确保签名行靠右对齐。
%    \begin{macrocode}
    { \hfill #3 }
  }
\cs_generate_variant:Nn \@@_decl_text:nnn { VVn }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{绘制封面}
%
% \begin{macro}{\makecoveri}
% 生成封一，即真正的封面。各部件之间用橡皮长度隔开。
%    \begin{macrocode}
\NewDocumentCommand \makecoveri { }
  {
    \group_begin:
%<class-en>      \fdu_line_spread:n { \fp_use:N \c_@@_def_line_spread_fp }
      \@@_cover_id:
      \skip_vertical:n { \c_@@_def_cover_v_sep_i_tl  }
      \@@_cover_logo:
      \skip_vertical:n { \c_@@_def_cover_v_sep_ii_tl }
      \@@_cover_title:
      \skip_vertical:n { \c_@@_def_cover_v_sep_vi_tl }
      \@@_cover_info:
      \skip_vertical:n { \c_@@_def_cover_v_sep_ix_tl }
    \group_end:
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\makecoverii}
% 生成封二，即指导小组成员名单。
%    \begin{macrocode}
\NewDocumentCommand \makecoverii { }
  {
    \group_begin:
%    \end{macrocode}
% 临时禁用 \tn{cleardoublepage} 带来的分页。
%    \begin{macrocode}
      \cs_set_eq:NN \cleardoublepage \relax
      \thispagestyle { empty }
%    \end{macrocode}
% 保持英文模板与中文模板的一致。
%    \begin{macrocode}
%<*class-en>
      \keys_set:nn { ctex }
        { chapter / titleformat = \c_@@_def_chapter_format_tl }
      \fdu_line_spread:n { \fp_use:N \c_@@_def_line_spread_fp }
%</class-en>
%    \end{macrocode}
% 为了关闭页眉页脚，此处使用了不编号章节的原始命令 \tn{@schapter}。
%    \begin{macrocode}
      \@schapter
        {
          \@@_spread_box:VV
            \c_@@_def_cover_instructors_width_tl
            \c_@@_def_name_instructors_tl
        }
      \begin{center}
        \large
        \clist_use:Nn \l_@@_info_instructors_clist { \par }
      \end{center}
    \group_end:
  }
%    \end{macrocode}
% \end{macro}
%
% \changes{v0.3}{2017/07/05}{新增声明页。}
%
% \begin{macro}{\makecoveriii}
% 生成封三，即声明页。该页也需要关闭页眉、页脚显示。
%    \begin{macrocode}
\NewDocumentCommand \makecoveriii { }
  {
    \cleardoublepage
    \thispagestyle { empty }
    \mode_leave_vertical:
    \skip_vertical:n { \c_@@_def_decl_v_sep_i_tl }
%    \end{macrocode}
% 独创性声明。
%    \begin{macrocode}
    \@@_decl_text:VVn
      \c_@@_def_name_originality_decl_tl
      \c_@@_def_originality_decl_text_tl
      {
        \c_@@_def_name_author_sign_tl
        \c_@@_fullwidth_colon_tl
        \fdu_blank_underline:N \c_@@_def_decl_sign_width_tl
        \@@_quad:
        \c_@@_def_name_sign_date_tl
        \c_@@_fullwidth_colon_tl
        \fdu_blank_underline:N \c_@@_def_decl_date_width_tl
      }
    \skip_vertical:n { \c_@@_def_decl_v_sep_ii_tl }
%    \end{macrocode}
% 使用授权声明。
%    \begin{macrocode}
    \@@_decl_text:VVn
      \c_@@_def_name_authorization_decl_tl
      \c_@@_def_authorization_decl_text_tl
      {
        \c_@@_def_name_author_sign_tl
        \c_@@_fullwidth_colon_tl
        \fdu_blank_underline:N \c_@@_def_decl_sign_width_tl
        \@@_quad:
        \c_@@_def_name_supervisor_sign_tl
        \c_@@_fullwidth_colon_tl
        \fdu_blank_underline:N \c_@@_def_decl_sign_width_tl
        \@@_quad:
        \c_@@_def_name_sign_date_tl
        \c_@@_fullwidth_colon_tl
        \fdu_blank_underline:N \c_@@_def_decl_date_width_tl
      }
    \skip_vertical:n { \c_@@_def_decl_v_sep_iii_tl }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{style/automakecover}
% \begin{variable}[int]{\l_@@_auto_make_cover_bool}
% 是否自动生成封面。
%    \begin{macrocode}
\bool_new:N \l_@@_auto_make_cover_bool
\keys_define:nn { fdu / style }
  {
    automakecover .bool_set:N = \l_@@_auto_make_cover_bool,
    automakecover .default:n  = true
  }
%    \end{macrocode}
% \end{variable}
% \end{macro}
%
% 在 \env{document} 开始位置添加封面以及指导小组成员名单。
%    \begin{macrocode}
\AtBeginDocument
  {
    \bool_if:NT \l_@@_auto_make_cover_bool
      {
        \begin{titlepage}
          \makecoveri \newpage \makecoverii
        \end{titlepage}
      }
  }
%    \end{macrocode}
%
% 在 \env{document} 结束位置添加声明页。
%    \begin{macrocode}
\AtEndDocument
  { \bool_if:NT \l_@@_auto_make_cover_bool { \makecoveriii } }
%    \end{macrocode}
%
% \subsection{目录}
%
% 设置目录标题。
%    \begin{macrocode}
\keys_set:nn { ctex }
  {
%<class>    contentsname = \c_@@_def_name_toc_tl,
%<class-en>    contentsname = \c_@@_def_name_toc_en_tl,
%    \end{macrocode}
%
% 设置目录中章节标题的样式。
%    \begin{macrocode}
    chapter / tocline =
      {
%<class>        \c_@@_def_chapter_toc_format_tl    \CTEXnumberline {#1} #2
%<class-en>        \c_@@_def_chapter_toc_format_en_tl \CTEXnumberline {#1} #2
      },
    section / tocline =
      {
%<class>        \c_@@_def_section_toc_format_tl    \CTEXnumberline {#1} #2
%<class-en>        \c_@@_def_section_toc_format_en_tl \CTEXnumberline {#1} #2
      },
    subsection / tocline =
      {
%<class>        \c_@@_def_subsection_toc_format_tl \CTEXnumberline {#1} #2
%<class-en>        \c_@@_def_subsection_toc_format_en_tl
%<class-en>        \CTEXnumberline {#1} #2
      }
  }
%    \end{macrocode}
%
% \begin{macro}{\tableofcontents}
% 修改 \tn{tableofcontents} 的定义，使得页眉正确显示。第二个参数中的
% 代码来源于 \LaTeXe{} 标准文档类 \file{book.cls}。
%    \begin{macrocode}
\@@_patch_cmd:Nnn \tableofcontents
  {
    \chapter*{\contentsname
      \@mkboth{%
        \MakeUppercase\contentsname}{\MakeUppercase\contentsname}}%
  }
  {
    \chapter* { \contentsname }
%<class>    \fdu_front_matter_header:n { \c_@@_def_name_toc_tl }
%<class-en>    \fdu_front_matter_header:n { \c_@@_def_name_toc_en_tl }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@starttoc}
% 修改 \tn{@starttoc} 的定义以调整英文模板中的目录行距。
%    \begin{macrocode}
%<*class-en>
\@@_patch_cmd:Nnn \@starttoc
  { \begingroup }
  {
    \begingroup
      \fdu_line_spread:n { \fp_use:N \c_@@_def_line_spread_fp }
  }
%</class-en>
%    \end{macrocode}
% \end{macro}
%
% \subsection{摘要}
%
% \subsubsection{中文摘要}
%
% \begin{macro}{abstract}
% 中文摘要及关键字。
%    \begin{macrocode}
%<*class>
\NewDocumentEnvironment { abstract } { }
  {
%    \end{macrocode}
% 摘要页需要修改页眉，并添加到目录。
%    \begin{macrocode}
    \chapter* { \c_@@_def_name_abstract_tl }
    \fdu_front_matter_header:n { \c_@@_def_name_abstract_tl }
    \addcontentsline { toc } { chapter }
      {
        \c_@@_def_chapter_toc_format_tl
        \c_@@_def_name_abstract_tl
      }
  }
  {
%    \end{macrocode}
% 摘要正文完成后，空行，输出关键字列表，之间用分号隔开。
%    \begin{macrocode}
    \par \mode_leave_vertical: \par
    \noindent \hangindent = 4 em  \hangafter = 1
    \group_begin:
      \normalfont \sffamily
      \c_@@_def_name_keywords_tl \c_@@_fullwidth_colon_tl
    \group_end:
    \clist_use:Nn \l_@@_info_keywords_clist
      { \c_@@_fullwidth_semicolon_tl }
    \par
%    \end{macrocode}
% 下一行输出中图分类号（CLC）。
%    \begin{macrocode}
    \noindent
    \group_begin:
      \normalfont \sffamily
      \c_@@_def_name_clc_tl \c_@@_fullwidth_colon_tl
    \group_end:
    \l_@@_info_clc_tl
  }
%</class>
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{英文摘要}
%
% \begin{macro}{abstract*,abstract}
% 英文摘要及关键字。注意英文模板中的 \env{abstract} 环境与中文模板
% 中的 \env{ab\-stract*} 环境是相同的，后者在英文模板中没有定义。
%    \begin{macrocode}
%<class>\NewDocumentEnvironment { abstract* } { }
%<class-en>\NewDocumentEnvironment { abstract } { }
  {
%    \end{macrocode}
% 同样需要修改页眉并添加到目录。
%    \begin{macrocode}
    \chapter* { \c_@@_def_name_abstract_en_tl }
    \fdu_front_matter_header:n { \c_@@_def_name_abstract_en_tl }
    \addcontentsline { toc } { chapter }
      {
%<class>        \c_@@_def_chapter_toc_format_tl
%<class-en>        \c_@@_def_chapter_toc_format_en_tl
        \c_@@_def_name_abstract_en_tl
      }
  }
  {
%    \end{macrocode}
% 空行，输出关键字，之间为全角空格。
%    \begin{macrocode}
    \par \mode_leave_vertical: \par
    \noindent \hangindent = 4 em \hangafter = 1
    \textbf { \c_@@_def_name_keywords_en_tl } \@@_quad:
    \clist_use:Nn \l_@@_info_keywords_en_clist { \@@_quad: }
    \par
%    \end{macrocode}
% 下一行输出中图分类号（CLC）。
%    \begin{macrocode}
    \noindent
    \textbf { \c_@@_def_name_clc_en_tl } \@@_quad:
    \l_@@_info_clc_tl
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{符号表}
%
% \begin{macro}{notation}
% 符号表环境，利用 \env{longtable} 封装。可选参数为表格列格式说明符。
% 与摘要类似，符号表页需要修改页眉，并添加到目录。另外需要调整
% \cs{LTpre} 和 \cs{LTpost}，以删去 \env{longtable} 前后的空白。
%    \begin{macrocode}
\NewDocumentEnvironment { notation }
  { O { \c_@@_def_notation_arg_tl } }
  {
%<*class>
    \chapter* { \c_@@_def_name_notation_tl }
    \fdu_front_matter_header:n { \c_@@_def_name_notation_tl }
    \addcontentsline { toc } { chapter }
      {
        \c_@@_def_chapter_toc_format_tl
        \c_@@_def_name_notation_tl
      }
    \group_begin:
%</class>
%<*class-en>
    \chapter* { \c_@@_def_name_notation_en_tl }
    \fdu_front_matter_header:n { \c_@@_def_name_notation_en_tl }
    \addcontentsline { toc } { chapter }
      {
        \c_@@_def_chapter_toc_format_en_tl
        \c_@@_def_name_notation_en_tl
      }
    \group_begin:
      \cs_set_eq:NN \arraystretch
        \c_@@_def_notation_line_stretch_en_tl
%</class-en>
      \dim_set_eq:NN \LTpre  \c_zero_dim
      \dim_set_eq:NN \LTpost \c_zero_dim
      \begin{longtable} {#1}
  }
  {
      \end{longtable}
    \group_end:
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{参考文献著录与引用}
%
% \changes{v0.6}{2017/10/27}{支持 \BibTeX{}，以实现参考文献的著录
%   与引用。}
%
% \begin{variable}[int]{\l_@@_bib_style_tl,\l_@@_bib_gb_style_tl}
% 保存当前使用的参考文献样式。
%    \begin{macrocode}
\tl_new:N \l_@@_bib_style_tl
\tl_new:N \l_@@_bib_gb_style_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{style/bibstyle}
% 参考文献样式。
%    \begin{macrocode}
\keys_define:nn { fdu / style }
  {
    bibstyle .choice:,
    bibstyle .value_required:n = true,
    bibstyle / numerical   .code:n =
      {
        \tl_set:Nn  \l_@@_bib_gb_style_tl { numerical  }
        \tl_clear:N \l_@@_bib_style_tl
      },
    bibstyle / authoryear .code:n =
      {
        \tl_set:Nn  \l_@@_bib_gb_style_tl { authoryear }
        \tl_clear:N \l_@@_bib_style_tl
      },
    bibstyle / unknown    .code:n =
      { \tl_set_eq:NN \l_@@_bib_style_tl \l_keys_value_tl }
  }
%    \end{macrocode}
% \end{macro}
%
% \tn{bibliographystyle} 只可出现一次。因此参考文献样式放在导言区
% 末尾统一设置。
%    \begin{macrocode}
\ctex_at_end_preamble:n
  {
    \tl_if_empty:NTF \l_@@_bib_style_tl
      {
        \exp_args:NV \tl_if_eq:nnTF \l_@@_bib_gb_style_tl
          { numerical }
          {
            \bibliographystyle { gbt-7714-2015-numerical }
            \@@_set_cite_style_numerical:
          }
          {
            \exp_args:NV \tl_if_eq:nnT \l_@@_bib_gb_style_tl
              { authoryear }
              {
                \bibliographystyle { gbt-7714-2015-author-year }
                \@@_set_cite_style_author_year:
                \cs_set_eq:NN \cite \citep
              }
          }
      }
      { \exp_args:NV \bibliographystyle \l_@@_bib_style_tl }
  }
%    \end{macrocode}
%
% \begin{macro}[int]{\@@_set_cite_style_numerical:}
% 顺序编码制下的引用样式。
%    \begin{macrocode}
\cs_new:Npn \@@_set_cite_style_numerical:
  {
    \NAT@numberstrue \NAT@supertrue
    \cs_set:Npn \NAT@open  { [  }
    \cs_set:Npn \NAT@close { ]  }
    \cs_set:Npn \NAT@sep   { ,~ }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_set_cite_style_author_year:}
% 著者-出版年制下的引用样式。
%    \begin{macrocode}
\cs_new:Npn \@@_set_cite_style_author_year:
  {
    \NAT@numbersfalse
%<*class>
    \cs_set_eq:NN \NAT@open  \c_@@_fullwidth_left_parenthesis
    \cs_set_eq:NN \NAT@close \c_@@_fullwidth_right_parenthesis
    \cs_set_eq:NN \NAT@sep   \c_@@_fullwidth_semicolon_tl
    \cs_set_eq:NN \NAT@aysep \c_@@_fullwidth_comma_tl
    \cs_set_eq:NN \NAT@yrsep \c_@@_ideographic_comma_tl
%</class>
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\bibsection}
% 修改参考文献部分的页眉，并将其添加到目录。
%    \begin{macrocode}
\cs_set:Npn \bibsection
  {
    \chapter* { \bibname }
    \fdu_front_matter_header:n { \bibname }
    \addcontentsline { toc } { chapter }
      { \c_@@_def_chapter_toc_format_tl \bibname }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\bibpreamble}
% \changes{v0.6}{2017/10/28}{修改 \tn{href} 的定义，使其不显示
%   超链接，同时又能正确处理 URL 中的特殊符号。}
% 禁止为文献标题添加超链接。
%    \begin{macrocode}
\cs_set:Npn \bibpreamble
  {
    \cs_set_eq:NN \fdu_href:w \href
    \cs_set_eq:NN \href       \fdu_nolink_href:w
    \NewDocumentCommand \doi { m }
      { DOI:~ \fdu_href:w { http://dx.doi.org/ ##1 } {##1} }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\fdu_nolink_href:w}
% 不带链接的 \tn{href}，相当于忽略第一个参数。以下代码来自
% \pkg{hyperref}。我们这里不考虑原始 \tn{href} 的可选参数，也不
% 考虑它放在参数中的情况。
%    \begin{macrocode}
\cs_new_protected:Npn \fdu_nolink_href:w
  {
    \group_begin:
      \hyper@normalise \@@_href_aux:n
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[aux]{\@@_href_aux:n,\@@_href_split:w}
% 处理 URL 中的特殊符号。
%    \begin{macrocode}
\group_begin:
  \char_set_catcode_parameter:N \$
  \char_set_catcode_other:N     \#
  \cs_new:Npn \@@_href_aux:n $1
    { \exp_after:wN \@@_href_split:w $1 # # \\ }
  \cs_new:Npn \@@_href_split:w $1 # $2 # $3 \\ $4
    { $4 \group_end: }
\group_end:
%    \end{macrocode}
% \end{macro}
%
% \subsection{用户接口}
%
% \begin{macro}{info,style}
% 定义元（meta）键值对。
%    \begin{macrocode}
\keys_define:nn { fdu }
  {
    info  .meta:nn = { fdu / info  } {#1},
    style .meta:nn = { fdu / style } {#1}
  }
%    \end{macrocode}
% \end{macro}
%
% 文档类初始设置。
%    \begin{macrocode}
\keys_set:nn { fdu }
  {
    style   / font           = times,
%<class>    style   / cjkfont        = fandol,
    style   / fontsize       = -4,
%<class>    style   / fullwidthstop  = false,
    style   / automakecover  = true,
    style   / logo           = { fudan-name.pdf },
    style   / logosize       = { 0.5 \textwidth },
    style   / hyperlink      = color,
    style   / hyperlinkcolor = default,
    style   / bibstyle       = numerical,
    info    / secretlevel    = none,
    info    / date           = \zhtoday,
    info    / schoolid       = { 10246 },
%<class>    theorem / headerfont     = { \sffamily },
%<class-en>    theorem / headerfont     = { \bfseries \upshape },
%<class>    theorem / bodyfont       = { \fdu@kai },
%<class-en>    theorem / bodyfont       = { \itshape },
    theorem / counter        = { chapter }
  }
%    \end{macrocode}
%
% \begin{macro}{\fdusetup}
% 用户设置接口。
%    \begin{macrocode}
\NewDocumentCommand \fdusetup { m }
  { \keys_set:nn { fdu } {#1} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{proof,
%   axiom,corollary,definition,example,lemma,theorem}
% 模板预定义的常用数学环境。
% 其中的“证明”比较特殊，它不编号，但会添加证毕符号。
%    \begin{macrocode}
%<*class>
\fdunewtheorem* { proof       } { \c_@@_def_name_proof_tl      }
\fdunewtheorem  { axiom       } { \c_@@_def_name_axiom_tl      }
\fdunewtheorem  { corollary   } { \c_@@_def_name_corollary_tl  }
\fdunewtheorem  { definition  } { \c_@@_def_name_definition_tl }
\fdunewtheorem  { example     } { \c_@@_def_name_example_tl    }
\fdunewtheorem  { lemma       } { \c_@@_def_name_lemma_tl      }
\fdunewtheorem  { theorem     } { \c_@@_def_name_theorem_tl    }
%</class>
%<*class-en>
\fdunewtheorem* { proof       } { \c_@@_def_name_proof_en_tl      }
\fdunewtheorem  { axiom       } { \c_@@_def_name_axiom_en_tl      }
\fdunewtheorem  { corollary   } { \c_@@_def_name_corollary_en_tl  }
\fdunewtheorem  { definition  } { \c_@@_def_name_definition_en_tl }
\fdunewtheorem  { example     } { \c_@@_def_name_example_en_tl    }
\fdunewtheorem  { lemma       } { \c_@@_def_name_lemma_en_tl      }
\fdunewtheorem  { theorem     } { \c_@@_def_name_theorem_en_tl    }
%</class-en>
%</class|class-en>
%    \end{macrocode}
% \end{macro}
%
% \subsection{模板参数配置文件}
%
% \changes{v0.3}{2017/06/27}{分离文档类与参数配置文件。}
%
%    \begin{macrocode}
%<*definition>
%    \end{macrocode}
%
% \subsubsection{通用配置}
%
% \begin{variable}[int]{\c_@@_name_simp_tl,\c_@@_name_trad_tl,
%   \c_@@_name_en_tl}
% 学校名称。
%    \begin{macrocode}
\tl_const:Nn \c_@@_name_simp_tl { 复旦大学          }
\tl_const:Nn \c_@@_name_trad_tl { 復旦大學          }
\tl_const:Nn \c_@@_name_en_tl   { Fudan~ University }
%    \end{macrocode}
% \end{variable}
%
% 常用标点符号，见表~\ref{tab:punctuations}。
%    \begin{macrocode}
\@@_def_punct:nn { ideographic_comma           } { "3001 }
\@@_def_punct:nn { ideographic_full_stop       } { "3002 }
\@@_def_punct:nn { fullwidth_comma             } { "FF0C }
\@@_def_punct:nn { fullwidth_full_stop         } { "FF0E }
\@@_def_punct:nn { fullwidth_colon             } { "FF1A }
\@@_def_punct:nn { fullwidth_semicolon         } { "FF1B }
\@@_def_punct:nn { fullwidth_left_parenthesis  } { "FF08 }
\@@_def_punct:nn { fullwidth_right_parenthesis } { "FF09 }
%    \end{macrocode}
%
% \begin{table}[ht]
%   \caption{常用标点符号}
%   \label{tab:punctuations}
%   \centering
%   \begin{tabular}{cccc}
%     \toprule
%       \textbf{中文名称} & \textbf{英文名称} & \textbf{符号} & \textbf{Unicode} \\
%     \midrule
%       中文顿号     & Ideographic comma           & \symbol{"3001} & U+3001 \\
%       中文句号     & Ideographic full stop       & \symbol{"3002} & U+3002 \\
%       中文逗号     & Fullwidth comma             & \symbol{"FF0C} & U+FF0C \\
%       全角西文句点 & Fullwidth full stop         & \symbol{"FF0E} & U+FF0E \\
%       中文冒号     & Fullwidth colon             & \symbol{"FF1A} & U+FF1A \\
%       中文分号     & Fullwidth semicolon         & \symbol{"FF1B} & U+FF1B \\
%       中文左圆括号 & Fullwidth left parenthesis  & \symbol{"FF08} & U+FF08 \\
%       中文右圆括号 & Fullwidth right parenthesis & \symbol{"FF09} & U+FF09 \\
%     \bottomrule
%   \end{tabular}
% \end{table}
%
% \begin{variable}[int]{\c_@@_def_paper_size_tl}
% 纸张大小（A4）。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_paper_size_tl { a4paper }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_page_margin_top_dim,
%   \c_@@_def_page_margin_bottom_dim,
%   \c_@@_def_page_margin_left_dim,
%   \c_@@_def_page_margin_right_dim}
% 页面边距。这里，$\SI{2.54}{\centi\meter}=\SI{1}{in}$，
% $\SI{3.18}{\centi\meter}=\SI{1.25}{in}$。
%    \begin{macrocode}
\dim_const:Nn \c_@@_def_page_margin_top_dim    { 2.54 cm }
\dim_const:Nn \c_@@_def_page_margin_bottom_dim { 2.54 cm }
\dim_const:Nn \c_@@_def_page_margin_left_dim   { 3.18 cm }
\dim_const:Nn \c_@@_def_page_margin_right_dim  { 3.18 cm }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_header_height_dim}
% 页眉高度。此高度与五号字大致相配。
%    \begin{macrocode}
\dim_const:Nn \c_@@_def_header_height_dim { 15 pt }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_font_size_tl}
% 字号（小四）。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_font_size_tl { -4 }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_line_spread_fp}
% 行距倍数。行距倍数 $k$ 由下式确定：
% \begin{equation*}
%   \num{1.2} \times k \times \SI{12}{bp} = \SI{20}{pt}.
% \end{equation*}
% 式中，\num{1.2} 是基本行距与文字大小之比，\SI{12}{bp} 是小四号字
% 的大小，\SI{20}{pt} 是行距固定值。
%    \begin{macrocode}
\fp_const:Nn \c_@@_def_line_spread_fp
  { ( 20 pt ) / ( 12 bp ) / 1.2 }
%    \end{macrocode}
% \end{variable}
%
% \subsubsection{章节标题}
%
% \begin{variable}[int]{\c_@@_def_chapter_format_tl,
%   \c_@@_def_section_format_tl,
%   \c_@@_def_subsection_format_tl}
% 中文模板章节标题样式。均使用黑体。章标题居中，节与小节标题左对齐
% （但需要使用 \tn{raggedright}）。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_chapter_format_tl
  { \huge  \normalfont \sffamily \centering   }
\tl_const:Nn \c_@@_def_section_format_tl
  { \Large \normalfont \sffamily \raggedright }
\tl_const:Nn \c_@@_def_subsection_format_tl
  { \large \normalfont \sffamily \raggedright }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_chapter_format_en_tl,
%   \c_@@_def_chapter_name_format_en_tl,
%   \c_@@_def_chapter_title_format_en_tl,
%   \c_@@_def_chapter_after_name_en_tl,
%   \c_@@_def_section_format_en_tl,
%   \c_@@_def_subsection_format_en_tl}
% 英文模板章节标题样式。均使用粗体。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_chapter_format_en_tl { \centering }
\tl_const:Nn \c_@@_def_chapter_name_format_en_tl
  { \LARGE \bfseries }
\tl_const:Nn \c_@@_def_chapter_title_format_en_tl
  { \huge  \bfseries }
\tl_const:Nn \c_@@_def_chapter_after_name_en_tl
  { \par \nobreak \vskip 10 pt }
\tl_const:Nn \c_@@_def_section_format_en_tl
  { \Large \bfseries \raggedright }
\tl_const:Nn \c_@@_def_subsection_format_en_tl
  { \large \bfseries \raggedright }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_chapter_before_sep_tl,
%   \c_@@_def_chapter_after_sep_tl,
%   \c_@@_def_section_before_sep_tl,
%   \c_@@_def_section_after_sep_tl,
%   \c_@@_def_subsection_before_sep_tl,
%   \c_@@_def_subsection_after_sep_tl}
% 章节标题前后间距。使用 |tl| 而非 |skip|，是为了防止在没有上下文的
% 时候 |ex| 被展开成 0。之后的不少间距也是这样定义的。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_chapter_before_sep_tl { 50 pt }
\tl_const:Nn \c_@@_def_chapter_after_sep_tl  { 40 pt }
\tl_const:Nn \c_@@_def_section_before_sep_tl
  { 3.5  ex plus 1   ex minus 0.2 ex }
\tl_const:Nn \c_@@_def_section_after_sep_tl
  { 2.7  ex plus 0.5 ex }
\tl_const:Nn \c_@@_def_subsection_before_sep_tl
  { 3.25 ex plus 1   ex minus 0.2 ex }
\tl_const:Nn \c_@@_def_subsection_after_sep_tl
  { 2.5  ex plus 0.3 ex }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_chapter_toc_format_tl,
%   \c_@@_def_section_toc_format_tl,
%   \c_@@_def_subsection_toc_format_tl,
%   \c_@@_def_chapter_toc_format_en_tl,
%   \c_@@_def_section_toc_format_en_tl,
%   \c_@@_def_subsection_toc_format_en_tl}
% 章节目录在目录中的样式。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_chapter_toc_format_tl
  { \normalfont \sffamily }
\tl_const:Nn \c_@@_def_section_toc_format_tl       { }
\tl_const:Nn \c_@@_def_subsection_toc_format_tl    { \fdu@kai  }
\tl_const:Nn \c_@@_def_chapter_toc_format_en_tl    { \bfseries }
\tl_const:Nn \c_@@_def_section_toc_format_en_tl    { \bfseries }
\tl_const:Nn \c_@@_def_subsection_toc_format_en_tl { }
%    \end{macrocode}
% \end{variable}
%
% \subsubsection{封面}
%
% \begin{macro}[int]{\@@_cover_font_size_small:,
%   \@@_cover_font_size_normal:,
%   \@@_cover_font_size_large:,
%   \@@_cover_font_size_huge:}
% 字号，使用固定值。这里的定义与正文字号有所不同。
%    \begin{macrocode}
\cs_new:Npn \@@_cover_font_size_small:  { \zihao { -5 } }
\cs_new:Npn \@@_cover_font_size_normal: { \zihao {  4 } }
\cs_new:Npn \@@_cover_font_size_large:  { \zihao { -2 } }
\cs_new:Npn \@@_cover_font_size_huge:   { \zihao {  2 } }
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}[int]{\c_@@_def_cover_id_width_tl,
%   \c_@@_def_cover_id_margin_sep_tl,
%   \c_@@_def_cover_type_width_tl,
%   \c_@@_def_cover_title_width_tl,
%   \c_@@_def_cover_title_en_width_tl,
%   \c_@@_def_cover_info_left_width_tl,
%   \c_@@_def_cover_instructors_width_tl}
% \changes{v0.6}{2017/11/24}{改为固定值（单位取为 \si{bp}）。}
% 封面中的一些长度。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_cover_id_width_tl          { 120 bp }
\tl_const:Nn \c_@@_def_cover_id_margin_sep_tl     { -24 bp }
\tl_const:Nn \c_@@_def_cover_type_width_tl        { 0.45 \textwidth }
\tl_const:Nn \c_@@_def_cover_title_width_tl       { 0.9  \textwidth }
\tl_const:Nn \c_@@_def_cover_title_en_width_tl    { 0.9  \textwidth }
\tl_const:Nn \c_@@_def_cover_info_left_width_tl   { 6 em }
\tl_const:Nn \c_@@_def_cover_instructors_width_tl { 7 em }
%    \end{macrocode}
% \end{variable}
%
% \changes{v0.5}{2017/09/19}{间距使用 \texttt{skip} 表达式，
%   不再依赖 \tn{stretch}。}
%
% \begin{variable}[int]{\c_@@_def_cover_v_sep_i_tl,
%   \c_@@_def_cover_v_sep_ii_tl,
%   \c_@@_def_cover_v_sep_iii_tl,
%   \c_@@_def_cover_v_sep_iv_tl,
%   \c_@@_def_cover_v_sep_v_tl,
%   \c_@@_def_cover_v_sep_vi_tl,
%   \c_@@_def_cover_v_sep_vii_tl,
%   \c_@@_def_cover_v_sep_ix_tl}
% 封面中的一些垂直间距，按自上而下的顺序排列。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_cover_v_sep_i_tl   { 0 pt plus 1.5 fill }
\tl_const:Nn \c_@@_def_cover_v_sep_ii_tl  { 0 pt plus 0.8 fill }
\tl_const:Nn \c_@@_def_cover_v_sep_iii_tl { 0.4 cm }
\tl_const:Nn \c_@@_def_cover_v_sep_iv_tl  { 0 pt plus 2.0 fill }
\tl_const:Nn \c_@@_def_cover_v_sep_v_tl   { 0.8 cm }
\tl_const:Nn \c_@@_def_cover_v_sep_vi_tl  { 0 pt plus 2.5 fill }
\tl_const:Nn \c_@@_def_cover_v_sep_vii_tl { 1 ex }
\tl_const:Nn \c_@@_def_cover_v_sep_ix_tl  { 0 pt plus 1.5 fill }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_cover_title_en_line_spread_tl}
% 英文标题的行距倍数。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_cover_title_en_line_spread_tl { 1.2 }
%    \end{macrocode}
% \end{variable}
%
% \subsubsection{声明页}
%
% \begin{variable}[int]{\c_@@_def_decl_v_sep_i_tl,
%   \c_@@_def_decl_v_sep_ii_tl,
%   \c_@@_def_decl_v_sep_iii_tl,
%   \c_@@_def_decl_v_sep_iv_tl}
% 声明页中的一些垂直间距，按自上而下的顺序排列。最后一项是标题与
% 文本、文本与签名行的间距。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_decl_v_sep_i_tl   { 0 pt plus 0.2 fill }
\tl_const:Nn \c_@@_def_decl_v_sep_ii_tl  { 0 pt plus 2.5 fill }
\tl_const:Nn \c_@@_def_decl_v_sep_iii_tl { 0 pt plus 2.5 fill }
\tl_const:Nn \c_@@_def_decl_v_sep_iv_tl  { 0.8 cm }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_decl_text_line_spread_tl}
% 声明文本的行距倍数。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_decl_text_line_spread_tl { 1.8 }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_decl_sign_width_tl,
%   \c_@@_def_decl_date_width_tl}
% 签名栏和日期栏的宽度。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_decl_sign_width_tl { 6 em }
\tl_const:Nn \c_@@_def_decl_date_width_tl { 5 em }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_originality_decl_text_tl}
% 论文独创性声明。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_originality_decl_text_tl
  {
    本人郑重声明：所呈交的学位论文，是本人在导师的指导下，独立进行研
    究工作所取得的成果。论文中除特别标注的内容外，不包含任何其他个人
    或机构已经发表或撰写过的研究成果。对本研究做出重要贡献的个人和集
    体，均已在论文中作了明确的声明并表示了谢意。本声明的法律结果由本
    人承担。
  }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_authorization_decl_text_tl}
% 论文使用授权声明。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_authorization_decl_text_tl
  {
    本人完全了解复旦大学有关收藏和利用博士、硕士学位论文的规定，即：
    学校有权收藏、使用并向国家有关部门或机构送交论文的印刷本和电子版
    本；允许论文被查阅和借阅；学校可以公布论文的全部或部分内容，可以
    采用影印、缩印或其它复制手段保存论文。涉密学位论文在解密后遵守此
    规定。
  }
%    \end{macrocode}
% \end{variable}
%
% \subsubsection{杂项}
%
% \begin{variable}[int]{\c_@@_def_secret_clist}
% 三种密级。
%    \begin{macrocode}
\clist_const:Nn \c_@@_def_secret_clist { 秘密, 机密, 绝密 }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_notation_arg_tl}
% 符号表默认参数。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_notation_arg_tl { l p { 7.5 cm } }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[int]{\c_@@_def_notation_line_stretch_en_tl}
% 英文模板中符号表的行间距。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_notation_line_stretch_en_tl { 1.3 }
%    \end{macrocode}
% \end{variable}
%
% 默认名称。注意空格是忽略掉的。
%    \begin{macrocode}
\@@_def_name:nn { secret_level    } { 密 \qquad 级         }
\@@_def_name:nn { secret_star     } { \textrm { \bigstar } }
\@@_def_name:nn { school_id       } { 学校代码             }
\@@_def_name:nn { student_id      } { 学 \qquad 号         }
\@@_def_name:nn { thesis_type     } { 博士学位论文         }
\@@_def_name:nn { degree_type     } { （学术学位）         }
\@@_def_name:nn { department      } { 院系                 }
\@@_def_name:nn { major           } { 专业                 }
\@@_def_name:nn { author          } { 姓名                 }
\@@_def_name:nn { supervisor      } { 指导教师             }
\@@_def_name:nn { date            } { 完成日期             }
\@@_def_name:nn { instructors     } { 指导小组成员         }
\@@_def_name:nn { toc             } { 目 \quad 录          }
\@@_def_name:nn { abstract        } { 摘 \quad 要          }
\@@_def_name:nn { keywords        } { 关键字               }
\@@_def_name:nn { clc             } { 中图分类号           }
\@@_def_name:nn { notation        } { 符号表               }
\@@_def_name:nn { toc_en          } { Contents             }
\@@_def_name:nn { abstract_en     } { Abstract             }
\@@_def_name:nn { keywords_en     } { Keywords:            }
\@@_def_name:nn { clc_en          } { CLC~ number:         }
\@@_def_name:nn { notation_en     } { List~ of~ Symbols    }
\@@_def_name:nn { author_sign     } { 作者签名             }
\@@_def_name:nn { supervisor_sign } { 导师签名             }
\@@_def_name:nn { sign_date       } { 日期                 }
\@@_def_name:nn { originality_decl }
  { \c_@@_name_simp_tl \\ 学位论文独创性声明   }
\@@_def_name:nn { authorization_decl }
  { \c_@@_name_simp_tl \\ 学位论文使用授权声明 }
\@@_def_name:nn { pdf_creator }
  { LaTeX~ with~ fduthesis~ class }
%    \end{macrocode}
%
% 默认定理头名称。
%    \begin{macrocode}
\@@_def_name:nn { proof         } { 证明 }
\@@_def_name:nn { axiom         } { 公理 }
\@@_def_name:nn { corollary     } { 推论 }
\@@_def_name:nn { definition    } { 定义 }
\@@_def_name:nn { example       } { 例   }
\@@_def_name:nn { lemma         } { 引理 }
\@@_def_name:nn { theorem       } { 定理 }
\@@_def_name:nn { proof_en      } { Proof      }
\@@_def_name:nn { axiom_en      } { Axiom      }
\@@_def_name:nn { corollary_en  } { Corollary  }
\@@_def_name:nn { definition_en } { Definition }
\@@_def_name:nn { example_en    } { Example    }
\@@_def_name:nn { lemma_en      } { Lemma      }
\@@_def_name:nn { theorem_en    } { Theorem    }
%</definition>
%<@@=>
%    \end{macrocode}
%
% \subsection{用户配置文件}
%
% 以下是一个示例：修改论文类型为“硕士学位论文”。
%    \begin{macrocode}
%<*user>
%%
%% \tl_set:Nn \c__fdu_def_name_thesis_type_tl { 硕士学位论文 }
%</user>
%    \end{macrocode}
%
% \clearpage
%
% \end{implementation}
%
